{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\users\\\\ScreemFolder\\\\EnterTheApp\\\\LogInScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { Feather } from '@expo/vector-icons';\nimport { AuthContext } from \"../../../../App\";\n\nvar LogInScreen = function LogInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      display = _React$useState2[0],\n      setDisplay = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    username: '',\n    password: '',\n    check_textInputChange: false,\n    isValidUser: true,\n    isValidPassword: true\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      data = _React$useState4[0],\n      setData = _React$useState4[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  var _React$useContext2 = React.useContext(AuthContext),\n      signOut = _React$useContext2.signOut;\n\n  var textInputChange = function textInputChange(uName) {\n    if (uName.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        username: uName,\n        check_textInputChange: true,\n        isValidUser: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        username: uName,\n        check_textInputChange: false,\n        isValidUser: false\n      }));\n    }\n  };\n\n  var handlePasswordChange = function handlePasswordChange(pw) {\n    if (pw.trim().length >= 8) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        password: pw,\n        isValidPassword: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        password: pw,\n        isValidPassword: false\n      }));\n    }\n  };\n\n  var loginHandle = function loginHandle(username, password) {\n    if (data.username.length == 0 || data.password.length == 0) {\n      alert('Username or password field cannot be empty.');\n      return;\n    } else {\n      fetch('http://192.168.0.100:19000/login', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'username': data.username,\n          'password': data.password\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (res) {\n        console.log(res);\n\n        if (res.token.length != 0) {\n          signIn(res);\n        } else {\n          alert(\"Username or password is incorrect\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../../Images/header.png\"),\n    style: styles.imagebackground,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontWeight: 'bold',\n      fontSize: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Wellcome back\"), React.createElement(Text, {\n    style: {\n      color: 'yellow'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Sign in to continute\"))), React.createElement(View, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      marginTop: 40\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Username\"), React.createElement(View, {\n    style: styles.action,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Your username...\",\n    style: styles.textInput,\n    onChangeText: function onChangeText(uName) {\n      return textInputChange(uName);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    style: [styles.title, {\n      marginTop: 20\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"Password\"), React.createElement(View, {\n    style: [styles.action, {\n      flexDirection: 'row'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Your password...\",\n    secureTextEntry: display,\n    style: styles.textInput,\n    onChangeText: function onChangeText(pw) {\n      return handlePasswordChange(pw);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setDisplay(!display);\n    },\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, React.createElement(Feather, {\n    name: display ? \"eye-off\" : \"eye\",\n    size: 24,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }))), React.createElement(TouchableHighlight, {\n    style: styles.logIn,\n    underlayColor: \"#fff\",\n    onPress: function onPress() {\n      loginHandle(data.username, data.password);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [styles.logInText],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, \"Log in\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SignUp');\n    },\n    style: {\n      marginTop: 50,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Do you have account?\", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"SignUp\")))));\n};\n\nexport { LogInScreen };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    justifyContent: \"center\"\n  },\n  header: {\n    flex: 1\n  },\n  footer: {\n    flex: 2,\n    padding: 20\n  },\n  imagebackground: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  title: {\n    color: \"black\",\n    fontWeight: 'bold'\n  },\n  action: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: 'grey'\n  },\n  textInput: {\n    flex: 1,\n    marginTop: 5,\n    paddingBottom: 5,\n    color: \"grey\"\n  },\n  logIn: {\n    marginTop: 40,\n    paddingTop: 15,\n    paddingBottom: 15,\n    backgroundColor: '#93278f',\n    borderRadius: 50,\n    borderWidth: 1,\n    borderColor: '#fff'\n  },\n  logInText: {\n    color: '#fff',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/users/ScreemFolder/EnterTheApp/LogInScreen.js"],"names":["React","TextInput","Feather","AuthContext","LogInScreen","navigation","useState","display","setDisplay","username","password","check_textInputChange","isValidUser","isValidPassword","data","setData","useContext","signIn","signOut","textInputChange","uName","trim","length","handlePasswordChange","pw","loginHandle","alert","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","res","console","log","token","catch","error","styles","container","header","require","imagebackground","color","fontWeight","fontSize","footer","title","marginTop","action","textInput","flexDirection","marginLeft","logIn","logInText","navigate","justifyContent","alignItems","StyleSheet","create","flex","backgroundColor","padding","width","height","borderBottomWidth","borderBottomColor","paddingBottom","paddingTop","borderRadius","borderWidth","borderColor","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { \n  View, \n  Text, \n  StyleSheet,\n  ImageBackground,\n  StatusBar,\n  TouchableHighlight,\n  TouchableOpacity,\n  Button\n} from 'react-native';\nimport { TextInput } from 'react-native-gesture-handler';\nimport { Feather} from '@expo/vector-icons'; \nimport { AuthContext } from '../../../../App';\n\nconst LogInScreen = ({navigation}) => {\n  const [display, setDisplay] = React.useState(true);\n  const [data, setData] = React.useState({\n    username: '',\n    password: '',\n    // dataSource: [],\n    check_textInputChange: false,\n    isValidUser: true,\n    isValidPassword: true\n  });\n\n  const { signIn } = React.useContext(AuthContext);\n  const { signOut } = React.useContext(AuthContext);\n\n  const textInputChange = (uName) => {\n    if( uName.trim().length >= 4 ) {\n        setData({\n            ...data,\n            username: uName,\n            check_textInputChange: true,\n            isValidUser: true\n        });\n    } else {\n        setData({\n            ...data,\n            username: uName,\n            check_textInputChange: false,\n            isValidUser: false\n        });\n    }\n  }\n\n  const handlePasswordChange = (pw) => {\n    if( pw.trim().length >= 8 ) {\n        setData({\n            ...data,\n            password: pw,\n            isValidPassword: true\n        });\n    } else {\n        setData({\n            ...data,\n            password: pw,\n            isValidPassword: false\n        });\n    }\n  }\n\n  const loginHandle = (username, password) => {\n    if ( data.username.length == 0 || data.password.length == 0 ) {\n      alert( 'Username or password field cannot be empty.');\n      return;\n    } else {\n      fetch('http://192.168.0.100:19000/login' , {\n          method: 'POST',\n          headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            'username': data.username,\n            'password': data.password\n          })\n      })\n      .then ((response) => response.json())\n      .then ( (res) => { \n        console.log(res)\n        if (res.token.length != 0 ) {\n          signIn(res);\n        } else {\n          alert(\"Username or password is incorrect\");\n        }   \n      })\n      .catch ((error) => {\n        console.log(error);\n      })\n    }\n  }\n    return (\n      <View style={styles.container}>\n        <StatusBar hidden/>\n        <View style={styles.header}>\n          <ImageBackground\n            source={require(\"../../Images/header.png\")}\n            style={styles.imagebackground}\n          >\n            <Text style={{\n              color: 'white',\n              fontWeight: 'bold',\n              fontSize: 30\n            }}>Wellcome back</Text>\n            <Text style={{color: 'yellow'}}>Sign in to continute</Text>\n          </ImageBackground>\n        </View>\n  \n        <View style={styles.footer}>\n          <Text style={[styles.title, {\n            marginTop: 40\n          }]}      \n          >Username</Text>\n          <View style={styles.action}>\n            <TextInput\n            placeholder='Your username...'\n            style={styles.textInput}\n            onChangeText={(uName) => textInputChange(uName)}\n            />\n          </View>\n          <Text style={[styles.title, {\n            marginTop: 20\n          }]}>Password</Text>\n          <View style={[styles.action, {flexDirection: 'row'}]}>\n            <TextInput\n            placeholder='Your password...'\n            secureTextEntry= {display}\n            style={styles.textInput}\n            onChangeText={ (pw) =>handlePasswordChange(pw)}\n            />\n            <TouchableOpacity onPress={()=> setDisplay(!display)} style={{marginLeft: 10}}>\n              <Feather name={display? \"eye-off\":\"eye\"} size={24} color=\"black\" />\n            </TouchableOpacity>\n          </View>\n          <TouchableHighlight\n            style={styles.logIn}\n            underlayColor='#fff'\n            onPress={() => {loginHandle( data.username, data.password )}}\n            >\n              <Text style={[styles.logInText]}>Log in</Text>\n          </TouchableHighlight>\n          <TouchableOpacity onPress={() => navigation.navigate('SignUp')} style={{marginTop: 50, justifyContent: \"center\", alignItems: \"center\"}}> \n            <Text>\n              Do you have account? \n              <Text style={{fontWeight: 'bold'}}>SignUp</Text>\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n} \nexport {LogInScreen};\n\nvar styles = StyleSheet.create ({\n    container: {\n        flex: 1,\n        backgroundColor: \"white\",\n        justifyContent: \"center\"\n    },\n\n    header: {\n        flex:1,\n    },\n\n    footer: {\n        flex: 2,\n        padding: 20\n    },\n\n    imagebackground: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\"\n    },\n\n    title: {\n        color: \"black\",\n        fontWeight: 'bold'\n    },\n\n    action: {\n        flexDirection: 'row',\n        borderBottomWidth: 1,\n        borderBottomColor: 'grey'\n    },\n\n    textInput: {\n        flex: 1,\n        marginTop: 5,\n        paddingBottom: 5,\n        color: \"grey\"\n    },\n\n    logIn:{\n        marginTop: 40,\n        paddingTop: 15,\n        paddingBottom: 15,\n        backgroundColor:'#93278f',\n        borderRadius: 50,\n        borderWidth: 1,\n        borderColor: '#fff'\n    },\n\n    logInText:{\n        color:'#fff',\n        textAlign:'center'\n    }\n});\n"]},"metadata":{},"sourceType":"module"}