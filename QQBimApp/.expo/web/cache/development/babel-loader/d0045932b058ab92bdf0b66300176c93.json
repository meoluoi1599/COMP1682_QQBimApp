{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\ScreemFolder\\\\CategoryScreen.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { SplashScreen } from \"./SplashScreen\";\n\nfunction CategoryScreen() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dataSource = _React$useState2[0],\n      setDataSource = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  React.useEffect(function () {\n    fetch('http://10.0.3.2:5555/category').then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      console.log('kq:' + res);\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  });\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(SplashScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }\n  }) : React.createElement(FlatList, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    data: dataSource,\n    keyExtractor: function keyExtractor(item) {\n      return item.category_id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        style: style.container,\n        onPress: function onPress() {\n          return navigation.navigate('Detail Story Screen');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: style.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, \" \", item.category, \" \"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport { CategoryScreen };\nstyle = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 5,\n    alignItems: 'center'\n  },\n  category: {\n    flex: 1,\n    borderRadius: 40,\n    backgroundColor: '#f9c2ff'\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/ScreemFolder/CategoryScreen.js"],"names":["React","SplashScreen","CategoryScreen","useState","dataSource","setDataSource","isLoading","setLoading","useEffect","fetch","then","response","json","res","console","log","catch","error","finally","flex","padding","item","category_id","toString","style","container","navigation","navigate","category","StyleSheet","create","alignItems","borderRadius","backgroundColor"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAQA,SAAQC,YAAR;;AAGA,SAASC,cAAT,GAA0B;AAAA,wBACYF,KAAK,CAACG,QAAN,CAAe,EAAf,CADZ;AAAA;AAAA,MACjBC,UADiB;AAAA,MACLC,aADK;;AAAA,yBAEQL,KAAK,CAACG,QAAN,CAAe,IAAf,CAFR;AAAA;AAAA,MAEjBG,SAFiB;AAAA,MAENC,UAFM;;AAIxBP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAM;AAEpBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACO,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADP,EAECF,IAFD,CAEQ,UAACG,GAAD,EAAS;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQF,GAApB;AACAR,MAAAA,aAAa,CAACQ,GAAD,CAAb;AACD,KALD,EAMCG,KAND,CAMQ,UAACC,KAAD,EAAW;AACjBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KARD,EASCC,OATD,CASS,YAAM;AACbX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAXD;AAYD,GAdD;AAeA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEY,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCd,SAAS,GAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACN,oBAAC,QAAD;AACA,IAAA,UAAU,MADV;AAEA,IAAA,8BAA8B,EAAI,KAFlC;AAGA,IAAA,IAAI,EAAEF,UAHN;AAIA,IAAA,YAAY,EAAG,sBAAAiB,IAAI;AAAA,aAAIA,IAAI,CAACC,WAAL,CAAiBC,QAAjB,EAAJ;AAAA,KAJnB;AAKA,IAAA,UAAU,EAAE;AAAA,UAAGF,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEG,KAAK,CAACC,SAA/B;AAA0C,QAAA,OAAO,EAAE;AAAA,iBAAMC,UAAU,CAACC,QAAX,CAAoB,qBAApB,CAAN;AAAA,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,KAAK,CAACI,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA+BP,IAAI,CAACO,QAApC,MADF,CADU;AAAA,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAmBD;;AACD,SAAQ1B,cAAR;AAEAsB,KAAK,GAAGK,UAAU,CAACC,MAAX,CAAkB;AACxBL,EAAAA,SAAS,EAAE;AACTN,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,OAAO,EAAE,CAFA;AAGTW,IAAAA,UAAU,EAAC;AAHF,GADa;AAMxBH,EAAAA,QAAQ,EAAE;AACRT,IAAAA,IAAI,EAAE,CADE;AAERa,IAAAA,YAAY,EAAE,EAFN;AAGRC,IAAAA,eAAe,EAAE;AAHT;AANc,CAAlB,CAAR","sourcesContent":["import * as React from 'react';\nimport { \n  View, \n  FlatList,\n  TouchableOpacity, \n  StyleSheet, \n  Text\n} from 'react-native';\nimport {SplashScreen} from './SplashScreen';\n\n\nfunction CategoryScreen() {\n  const [dataSource, setDataSource ]= React.useState([]);\n  const [isLoading, setLoading] = React.useState(true);\n  \n  React.useEffect(() => {\n    // fetch('http://10.0.2.2:5000/')\n    fetch('http://10.0.3.2:5555/category')\n    .then ((response) => response.json())\n    .then ( (res) => { \n      console.log('kq:' + res); \n      setDataSource(res);\n    })\n    .catch ((error) => {\n      console.log(error);\n    })\n    .finally(() => {\n      setLoading(false) \n    });\n  });\n  return (\n    <View style={{ flex: 1, padding: 10 }}>\n    {isLoading ? <SplashScreen/> : (\n        <FlatList \n        horizontal\n        showsHorizontalScrollIndicator = {false}\n        data={dataSource}\n        keyExtractor= {item => item.category_id.toString()}\n        renderItem={({ item }) => (\n          <TouchableOpacity style={style.container} onPress={() => navigation.navigate('Detail Story Screen')}>\n            <Text style={style.category}> {item.category} </Text>\n          </TouchableOpacity>\n        )}\n      />\n    )}\n  </View>\n\n  );\n  \n}\nexport {CategoryScreen};\n\nstyle = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 5,\n    alignItems:'center',\n  },\n  category: {\n    flex: 1,\n    borderRadius: 40,\n    backgroundColor: '#f9c2ff',\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}