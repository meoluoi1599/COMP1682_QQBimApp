{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimAPp\\\\src\\\\Components\\\\DetailStoryScreen\\\\ButtonReadingAdd.js\";\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { FlatList, TextInput } from \"react-native-gesture-handler\";\n\nvar ButtonReadingAdd = function ButtonReadingAdd(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible2 = _useState6[0],\n      setModalVisible2 = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dataSource = _useState8[0],\n      setDataSource = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      data = _useState10[0],\n      setData = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      list = _useState12[0],\n      setList = _useState12[1];\n\n  function get_list() {\n    fetch('http://192.168.1.2:19000/get_list/1').then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      console.log('list:' + res);\n      setData(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  }\n\n  function create_list() {\n    fetch('http://192.168.1.2:19000/create_list/1/' + props.route.params.story_id).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  }\n\n  function add_to_list(l) {\n    fetch('http://192.168.1.2:19000/add_to_list/' + list + '/' + props.route.params.story_id).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate('Reading', {\n        chapter_id: 1,\n        item: props.route.params.item\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.reading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.readingText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Reading\"))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalVisible(true);\n      get_list();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    name: \"ios-add-circle-outline\",\n    style: styles.addButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })))), React.createElement(TouchableWithoutFeedback, {\n    onPressOut: function onPressOut() {\n      setModalVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item) {\n      return item.list_id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          setList(item.list_id);\n          add_to_list();\n          setModalVisible(!modalVisible);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }, item.list_name));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n      setModalVisible2(!modalVisible2);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"Create new list\")), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Add to libary\"))))), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible2,\n    onRequestClose: function onRequestClose() {\n      setModalVisible2(!modalVisible2);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Create New List\"), React.createElement(TextInput, {\n    placeholder: \"Enter name of list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }))))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    marginTop: 22,\n    flexDirection: 'column',\n    justifyContent: \"flex-end\"\n  },\n  modalView: {\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  button: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  reading: {\n    height: 40,\n    width: 200,\n    backgroundColor: '#aa4fff',\n    borderRadius: 40,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  readingText: {\n    marginLeft: 5,\n    fontWeight: 'bold',\n    fontSize: 20,\n    color: 'white'\n  },\n  addButton: {\n    color: '#aa4fff',\n    fontSize: 40,\n    marginLeft: 5\n  }\n});\nexport { ButtonReadingAdd };","map":{"version":3,"sources":["D:/QQBimApp/QQBimAPp/src/Components/DetailStoryScreen/ButtonReadingAdd.js"],"names":["React","useState","Icon","FlatList","TextInput","ButtonReadingAdd","props","modalVisible","setModalVisible","isLoading","setLoading","modalVisible2","setModalVisible2","dataSource","setDataSource","data","setData","list","setList","get_list","fetch","then","response","json","res","console","log","catch","error","finally","create_list","route","params","story_id","add_to_list","l","styles","button","navigation","navigate","chapter_id","item","reading","readingText","addButton","centeredView","modalView","list_id","list_name","modalText","fontSize","fontWeight","StyleSheet","create","flex","marginTop","flexDirection","justifyContent","backgroundColor","alignItems","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","openButton","borderRadius","padding","textStyle","color","textAlign","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  Modal,\r\n  StyleSheet,\r\n  Text,\r\n  Dimensions,\r\n  TouchableHighlight,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  View\r\n} from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/Ionicons'\r\nimport { FlatList, TextInput } from \"react-native-gesture-handler\";\r\n\r\nconst ButtonReadingAdd = (props) => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [modalVisible2, setModalVisible2] = useState(false);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [list, setList] = useState([]);\r\n  \r\n  function get_list() {\r\n    fetch('http://192.168.1.2:19000/get_list/1')\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      console.log('list:' + res); \r\n      setData(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      setLoading(false) \r\n    });\r\n  }\r\n\r\n  function create_list(){\r\n    fetch('http://192.168.1.2:19000/create_list/1/' + props.route.params.story_id)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      setDataSource(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      setLoading(false) \r\n    });\r\n  }\r\n\r\n  function add_to_list(l){\r\n    fetch('http://192.168.1.2:19000/add_to_list/' + list + '/' + props.route.params.story_id)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      setDataSource(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      setLoading(false) \r\n    });\r\n  }\r\n  \r\n  return (\r\n    <View >\r\n      <View style={styles.button}>\r\n            <TouchableOpacity onPress={() => props.navigation.navigate('Reading', {chapter_id: 1, item: props.route.params.item})}>\r\n              <View style={styles.reading}>\r\n                <Text style={styles.readingText}>Reading</Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setModalVisible(true);\r\n                get_list();\r\n              }}\r\n            >\r\n              <View>\r\n                <Icon name='ios-add-circle-outline' style={styles.addButton}/>\r\n              </View>                 \r\n            </TouchableOpacity>\r\n      </View>\r\n      <TouchableWithoutFeedback\r\n        onPressOut={() => {\r\n          setModalVisible(false);\r\n        }}\r\n      >\r\n        <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      \r\n      >\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <FlatList \r\n              data={data}\r\n              keyExtractor={item => item.list_id}\r\n              renderItem={({item}) => (\r\n                <TouchableOpacity onPress={()=> {\r\n                  setList(item.list_id);\r\n                  add_to_list();\r\n                  setModalVisible(!modalVisible);\r\n                }}>\r\n                  <Text>{item.list_name}</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            />\r\n            <TouchableHighlight\r\n              onPress={() => {\r\n                setModalVisible(!modalVisible);\r\n                setModalVisible2(!modalVisible2);\r\n              }}\r\n            >\r\n              <Text style={styles.modalText}>Create new list</Text>\r\n            </TouchableHighlight>\r\n            <TouchableHighlight\r\n              onPress={() => {\r\n                setModalVisible(!modalVisible);\r\n              }}\r\n            >\r\n              <Text style={styles.modalText}>Add to libary</Text>\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible2}\r\n        onRequestClose={() => {\r\n          setModalVisible2(!modalVisible2);\r\n        }}\r\n      >\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <Text style={{fontSize: 18, fontWeight: 'bold'}}>Create New List</Text>\r\n            <TextInput placeholder='Enter name of list'/>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      </TouchableWithoutFeedback>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    marginTop: 22,\r\n    flexDirection: 'column',\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  modalView: {\r\n    backgroundColor: \"white\",\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n    //maxheight: Dimensions.get('window').height * 0.3\r\n  },\r\n  openButton: {\r\n    backgroundColor: \"#F194FF\",\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\"\r\n  },\r\n  button: {\r\n    marginTop: 10, \r\n    flexDirection: 'row', \r\n    justifyContent: 'center', \r\n    alignItems: 'center'\r\n  },\r\n  reading: {\r\n    height: 40, width: 200, \r\n    backgroundColor: '#aa4fff', \r\n    borderRadius: 40, \r\n    justifyContent: 'center', \r\n    alignItems: 'center'\r\n  },\r\n  readingText: {\r\n    marginLeft: 5, \r\n    fontWeight: 'bold', \r\n    fontSize: 20, \r\n    color: 'white' \r\n  },\r\n  addButton: {\r\n    color: '#aa4fff', \r\n    fontSize: 40, \r\n    marginLeft: 5\r\n  }\r\n});\r\n\r\nexport {ButtonReadingAdd};"]},"metadata":{},"sourceType":"module"}