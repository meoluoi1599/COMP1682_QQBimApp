{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\users\\\\Components\\\\DetailStoryScreen\\\\ButtonReadingAdd.js\";\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { FlatList, TextInput } from \"react-native-gesture-handler\";\nimport { useFocusEffect } from '@react-navigation/native';\n\nvar ButtonReadingAdd = function ButtonReadingAdd(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible2 = _useState6[0],\n      setModalVisible2 = _useState6[1];\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      user = _React$useState2[0],\n      setUser = _React$useState2[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dataSource = _useState8[0],\n      setDataSource = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      data = _useState10[0],\n      setData = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      value = _useState12[0],\n      setValue = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      chapterData = _useState14[0],\n      setChapterData = _useState14[1];\n\n  function get_list() {\n    fetch('http://192.168.0.102:19000/get_list/' + user.user_id).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setData(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  }\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              AsyncStorage.getItem('user').then(function (value) {\n                var jsonValue = JSON.parse(value);\n                setUser(jsonValue);\n              });\n            } catch (e) {\n              console.log(e);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function create_list() {\n    fetch('http://192.168.0.102:19000/create_list', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'user_id': user.user_id,\n        'list_name': value\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setModalVisible2(false);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function add_to_list(id) {\n    fetch('http://192.168.0.102:19000/add_to_list/' + id + '/' + props.route.params.item.story_id).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      ToastAndroid.show(\"The story is added.\", ToastAndroid.SHORT);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  }\n\n  var addLibary = function addLibary() {\n    fetch('http://192.168.0.102:19000/chapter/' + props.route.params.item.story_id).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setChapterData(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      db.transaction(function (tx) {\n        tx.executeSql(\"insert into story (id, title) values (?, ?)\", [props.route.params.item.story_id, props.route.params.item.story_title]);\n        tx.executeSql(\"insert into chapter (chapter_content, chapter_id, chapter_name, story_id) values (?, ?, ?, ?)\", chapterData);\n        tx.executeSql(\"select * from story\", [], function (_, _ref) {\n          var rows = _ref.rows;\n          return console.log('h√°dhaskjdha' + JSON.stringify(rows));\n        });\n      });\n      setModalVisible(false);\n    });\n  };\n\n  useFocusEffect(React.useCallback(function () {\n    getData();\n    getChapter();\n    db.transaction(function (tx) {\n      tx.executeSql(\"create table if not exists story (story_id integer primary key not null, title text);\");\n      tx.executeSql(\"create table if not exists chapter (chapter_id integer primary key not null, chapter_name text,chapter_content text,story_id int, FOREIGN KEY(story_id) REFERENCES story(story_id) );\");\n    });\n    return function () {\n      console.log('un');\n    };\n  }, []));\n\n  var getChapter = function getChapter() {\n    fetch('http://192.168.0.102:19000/chapter/' + props.route.params.item.story_id).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  };\n\n  var readingFunction = function readingFunction() {\n    if (dataSource == '') {\n      ToastAndroid.show(\"The story don't have any chapter.\", ToastAndroid.SHORT);\n    } else {\n      props.navigation.navigate('Reading', {\n        item: props.route.params.item,\n        chapter: 'default_chapter'\n      });\n    }\n  };\n\n  return React.createElement(View, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate('Report', {\n        item: props.route.params.item\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"report\",\n    style: styles.buttonIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return readingFunction();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.readingText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"Reading\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalVisible(true);\n      get_list();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"ios-add-circle-outline\",\n    style: styles.buttonIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }))), React.createElement(TouchableWithoutFeedback, {\n    onPressOut: function onPressOut() {\n      setModalVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item) {\n      return item.list_id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          add_to_list(item.list_id);\n          setModalVisible(!modalVisible);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.modalText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }\n      }, item.list_name));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n      setModalVisible2(!modalVisible2);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, \"Create new list\")), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      return addLibary();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, \"Add to libary\")))))), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible2,\n    onRequestClose: function onRequestClose() {\n      setModalVisible2(!modalVisible2);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, \"Create New List\"), React.createElement(TextInput, {\n    placeholder: \"Enter name of list\",\n    onChangeText: function onChangeText(text) {\n      return setValue(text);\n    },\n    onSubmitEditing: function onSubmitEditing() {\n      return create_list();\n    },\n    returnKeyType: \"done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    marginTop: 22,\n    flexDirection: 'column',\n    justifyContent: \"flex-end\"\n  },\n  modalView: {\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  button: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  readingText: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    borderRadius: 20,\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 25,\n    paddingRight: 25,\n    backgroundColor: '#aa4fff',\n    color: 'white'\n  },\n  buttonIcon: {\n    color: '#aa4fff',\n    fontSize: 40,\n    marginLeft: 5\n  }\n});\nexport { ButtonReadingAdd };","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/users/Components/DetailStoryScreen/ButtonReadingAdd.js"],"names":["React","useState","Icon","MaterialIcons","FlatList","TextInput","useFocusEffect","ButtonReadingAdd","props","modalVisible","setModalVisible","isLoading","setLoading","modalVisible2","setModalVisible2","user","setUser","dataSource","setDataSource","data","setData","value","setValue","chapterData","setChapterData","get_list","fetch","user_id","then","response","json","res","catch","error","console","log","finally","getData","AsyncStorage","getItem","jsonValue","JSON","parse","e","create_list","method","headers","Accept","body","stringify","add_to_list","id","route","params","item","story_id","ToastAndroid","show","SHORT","addLibary","db","transaction","tx","executeSql","story_title","_","rows","useCallback","getChapter","readingFunction","navigation","navigate","chapter","styles","button","buttonIcon","readingText","centeredView","modalView","list_id","modalText","list_name","fontSize","fontWeight","text","StyleSheet","create","flex","marginTop","flexDirection","justifyContent","backgroundColor","alignItems","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","openButton","borderRadius","padding","textStyle","color","textAlign","marginBottom","paddingTop","paddingBottom","paddingLeft","paddingRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  Modal,\r\n  StyleSheet,\r\n  Text,\r\n  Dimensions,\r\n  ToastAndroid,\r\n  TouchableHighlight,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n  AsyncStorage\r\n} from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/Ionicons'\r\nimport { MaterialIcons } from '@expo/vector-icons'; \r\nimport { FlatList, TextInput } from \"react-native-gesture-handler\";\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\n\r\nconst ButtonReadingAdd = (props) => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [modalVisible2, setModalVisible2] = useState(false);\r\n  const [user, setUser] = React.useState([]);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [value, setValue]= useState('');\r\n  const [chapterData, setChapterData] = useState([]);\r\n\r\n  function get_list() {\r\n    fetch('http://192.168.0.102:19000/get_list/' + user.user_id)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      setData(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      setLoading(false) \r\n    });\r\n  }\r\n\r\n  const getData = async () => {\r\n    try {\r\n      AsyncStorage.getItem('user').then((value) => {\r\n        const jsonValue = JSON.parse(value);\r\n        setUser(jsonValue);\r\n      })\r\n    } catch(e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  function create_list(){\r\n    fetch('http://192.168.0.102:19000/create_list' , {\r\n          method: 'POST',\r\n          headers: {\r\n              Accept: 'application/json',\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            'user_id': user.user_id,\r\n            'list_name': value\r\n          })\r\n      })\r\n      .then ((response) => response.json())\r\n      .then ( (res) => { \r\n        setModalVisible2(false);\r\n      })\r\n      .catch ((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  function add_to_list(id){\r\n    fetch('http://192.168.0.102:19000/add_to_list/' + id + '/' + props.route.params.item.story_id)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      ToastAndroid.show(\"The story is added.\", ToastAndroid.SHORT);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      setLoading(false) \r\n    });\r\n  }\r\n  const addLibary=()=> {\r\n    fetch('http://192.168.0.102:19000/chapter/' + props.route.params.item.story_id)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      setChapterData(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      db.transaction(\r\n        tx => {\r\n          tx.executeSql(\"insert into story (id, title) values (?, ?)\", [props.route.params.item.story_id, props.route.params.item.story_title,]);\r\n          tx.executeSql(\"insert into chapter (chapter_content, chapter_id, chapter_name, story_id) values (?, ?, ?, ?)\", chapterData);\r\n          tx.executeSql(\"select * from story\", [], (_, { rows }) =>\r\n            console.log('h√°dhaskjdha'+JSON.stringify(rows))\r\n          );\r\n        }\r\n      );\r\n      setModalVisible(false)\r\n    });\r\n  }\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n    getData();\r\n    getChapter();\r\n    db.transaction(tx => {\r\n      tx.executeSql(\r\n        \"create table if not exists story (story_id integer primary key not null, title text);\"\r\n      );\r\n      tx.executeSql(\r\n        \"create table if not exists chapter (chapter_id integer primary key not null, chapter_name text,chapter_content text,story_id int, FOREIGN KEY(story_id) REFERENCES story(story_id) );\"\r\n      );\r\n    });\r\n    return () => {\r\n      console.log('un')\r\n    };\r\n  }, [])\r\n);\r\n\r\n const getChapter=()=> {\r\n  fetch('http://192.168.0.102:19000/chapter/' + props.route.params.item.story_id)\r\n  .then ((response) => response.json())\r\n  .then ( (res) => { \r\n    setDataSource(res);\r\n  })\r\n  .catch ((error) => {\r\n    console.log(error);\r\n  })\r\n  .finally(() => {\r\n    setLoading(false) \r\n  });\r\n }\r\n\r\n  const readingFunction=()=> {\r\n    if (dataSource == '') {\r\n      ToastAndroid.show(\"The story don't have any chapter.\", ToastAndroid.SHORT); \r\n    } else {\r\n      props.navigation.navigate('Reading', {item: props.route.params.item, chapter: 'default_chapter'})\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <View {...props}>\r\n      <View style={styles.button}>\r\n        <TouchableOpacity onPress={() => props.navigation.navigate('Report', {item: props.route.params.item})}>\r\n          <MaterialIcons name=\"report\"style={styles.buttonIcon}/>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => readingFunction()}>\r\n          <Text style={styles.readingText}>Reading</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            setModalVisible(true);\r\n            get_list();\r\n          }}\r\n        >\r\n          <Icon name='ios-add-circle-outline' style={styles.buttonIcon}/>                \r\n        </TouchableOpacity>\r\n      </View>\r\n      <TouchableWithoutFeedback\r\n        onPressOut={() => {\r\n          setModalVisible(false);\r\n        }}\r\n      >\r\n        <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      \r\n      >\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <FlatList \r\n              data={data}\r\n              keyExtractor={item => item.list_id}\r\n              renderItem={({item}) => (\r\n                <TouchableOpacity \r\n                onPress={()=> {\r\n                  add_to_list(item.list_id);\r\n                  setModalVisible(!modalVisible);\r\n                }}>\r\n                  <Text style={styles.modalText}>{item.list_name}</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            />\r\n            \r\n            <TouchableHighlight\r\n              onPress={() => {\r\n                setModalVisible(!modalVisible);\r\n                setModalVisible2(!modalVisible2);\r\n              }}\r\n            >\r\n              <Text style={styles.modalText}>Create new list</Text>\r\n            </TouchableHighlight>\r\n            <TouchableHighlight\r\n              onPress={() => addLibary()}\r\n            >\r\n              <Text style={styles.modalText}>Add to libary</Text>\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      </TouchableWithoutFeedback>\r\n      <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={modalVisible2}\r\n          onRequestClose={() => {\r\n            setModalVisible2(!modalVisible2);\r\n          }}\r\n        >\r\n          <View style={styles.centeredView}>\r\n            <View style={styles.modalView}>\r\n              <Text style={{fontSize: 18, fontWeight: 'bold'}}>Create New List</Text>\r\n              <TextInput placeholder='Enter name of list'\r\n                onChangeText={text => setValue(text)}\r\n                onSubmitEditing={()=> create_list()}\r\n                returnKeyType='done'\r\n              />\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    marginTop: 22,\r\n    flexDirection: 'column',\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  modalView: {\r\n    backgroundColor: \"white\",\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n    //maxheight: Dimensions.get('window').height * 0.3\r\n  },\r\n  openButton: {\r\n    backgroundColor: \"#F194FF\",\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\"\r\n  },\r\n  button: {\r\n    marginTop: 10, \r\n    flexDirection: 'row', \r\n    justifyContent: 'center', \r\n    alignItems: 'center'\r\n  },\r\n  readingText: {\r\n    fontWeight: 'bold', \r\n    fontSize: 18, \r\n    borderRadius: 20,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    paddingLeft: 25,\r\n    paddingRight: 25,\r\n    backgroundColor: '#aa4fff',\r\n    color: 'white' \r\n  },\r\n  buttonIcon: {\r\n    color: '#aa4fff', \r\n    fontSize: 40, \r\n    marginLeft: 5\r\n  }\r\n});\r\n\r\nexport {ButtonReadingAdd};"]},"metadata":{},"sourceType":"module"}