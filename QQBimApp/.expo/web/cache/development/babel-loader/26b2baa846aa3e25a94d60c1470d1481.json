{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\ScreemFolder\\\\StoryScreen\\\\ReadingScreen.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { SplashScreen } from \"../../ScreemFolder/OtherScreen\";\nimport { MaterialCommunityIcons, Ionicons, AntDesign } from '@expo/vector-icons';\nimport { ReadingHeader } from \"../../Components/HeaderComponent\";\n\nfunction ReadingScreen(props) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dataSource = _React$useState2[0],\n      setDataSource = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(props.route.params.item.vote),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      vote = _React$useState6[0],\n      setVote = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      voting = _React$useState8[0],\n      setVoting = _React$useState8[1];\n\n  var _React$useState9 = React.useState(props.route.params.chapter_id),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      chapter = _React$useState10[0],\n      setChapter = _React$useState10[1];\n\n  React.useEffect(function () {\n    props.navigation.dangerouslyGetParent().setOptions({\n      tabBarVisible: false\n    });\n    fetch('http://192.168.1.6:19000/chapter_content/' + props.route.params.item.story_id + '/' + chapter).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  });\n\n  function sendVote() {\n    fetch('http://192.168.1.6:19000/vote/' + props.route.params.item.story_id + '/' + vote).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      console.log('voting:' + res);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function ListEmpty() {\n    return React.createElement(View, {\n      style: styles.MainContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: 'center',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"There are no content\"));\n  }\n\n  ;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(ReadingHeader, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, isLoading ? React.createElement(SplashScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: dataSource,\n    keyExtractor: function keyExtractor(item) {\n      return item.chapter_id.toString();\n    },\n    showsHorizontalScrollIndicator: false,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          padding: 20,\n          fontSize: 15,\n          textAlign: 'justify'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, item.chapter_content));\n    },\n    ListEmptyComponent: ListEmpty,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: styles.tabView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.tabContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setChapter(chapter - 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, React.createElement(AntDesign, {\n    name: \"arrowleft\",\n    size: 24,\n    color: '#aa4fff',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setVoting(!voting);\n      setVote(voting ? vote - 1 : vote + 1);\n      sendVote();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, React.createElement(Ionicons, {\n    name: voting ? 'md-star' : 'md-star-outline',\n    size: 24,\n    color: '#aa4fff',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"comment-outline\",\n    size: 24,\n    color: '#aa4fff',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"share-variant\",\n    size: 24,\n    color: '#aa4fff',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setChapter(chapter + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, React.createElement(AntDesign, {\n    name: \"arrowright\",\n    size: 24,\n    color: '#aa4fff',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport { ReadingScreen };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderColor: '#8a2be2'\n  },\n  tabView: {\n    justifyContent: 'flex-end',\n    backgroundColor: '#aa4fff',\n    width: '100%',\n    height: 40,\n    paddingRight: 5\n  },\n  tabContainer: {\n    flex: 1,\n    height: 40,\n    width: Dimensions.get('window').width,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/ScreemFolder/StoryScreen/ReadingScreen.js"],"names":["React","SplashScreen","MaterialCommunityIcons","Ionicons","AntDesign","ReadingHeader","ReadingScreen","props","useState","dataSource","setDataSource","isLoading","setLoading","route","params","item","vote","setVote","voting","setVoting","chapter_id","chapter","setChapter","useEffect","navigation","dangerouslyGetParent","setOptions","tabBarVisible","fetch","story_id","then","response","json","res","catch","error","console","log","finally","sendVote","ListEmpty","styles","MainContainer","textAlign","justifyContent","container","flex","toString","padding","fontSize","chapter_content","tabView","tabContainer","setModalVisible","StyleSheet","create","flexDirection","alignItems","borderColor","backgroundColor","width","height","paddingRight","Dimensions","get"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Dimensions, View, TouchableOpacity, Text, FlatList } from 'react-native';\nimport {SplashScreen} from '../../ScreemFolder/OtherScreen';\nimport { MaterialCommunityIcons,Ionicons, AntDesign} from '@expo/vector-icons';\nimport {ReadingHeader} from  '../../Components/HeaderComponent'\n\nfunction ReadingScreen(props) {\n  const [dataSource, setDataSource ]= React.useState([]);\n  const [isLoading, setLoading] = React.useState(true);\n  const [vote, setVote] = React.useState(props.route.params.item.vote);\n  const [voting, setVoting] = React.useState(false);\n  const [chapter, setChapter] = React.useState(props.route.params.chapter_id);\n  \n  React.useEffect(() => {\n    props.navigation.dangerouslyGetParent().setOptions({\n      tabBarVisible: false\n  });\n    // fetch('http://10.0.2.2:5000/')\n    fetch('http://192.168.1.6:19000/chapter_content/' + props.route.params.item.story_id + '/' + chapter)\n    .then ((response) => response.json())\n    .then ( (res) => { \n      setDataSource(res);\n    })\n    .catch ((error) => {\n      console.log(error);\n    })\n    .finally(() => {\n      setLoading(false) \n    });\n  });\n\n  function sendVote() {\n    fetch('http://192.168.1.6:19000/vote/' + props.route.params.item.story_id + '/' + vote)\n    .then ((response) => response.json())\n    .then ( (res) => { \n        console.log('voting:' + res); \n    })\n    .catch ((error) => {\n        console.log(error);\n    })\n  }\n\n  function ListEmpty() {\n    return (\n      //View to show when list is empty\n      <View style={styles.MainContainer}>\n        <Text style={{ textAlign: 'center', justifyContent: 'center' }}>There are no content</Text>\n      </View>\n    );\n  };\n  \n    return (\n      <View style={styles.container}>\n        <ReadingHeader {...props}/>\n        <View style={{flex: 1}}>\n          {isLoading? <SplashScreen/>:(\n            <View>\n              <FlatList\n                data={dataSource}\n                keyExtractor= {item => item.chapter_id.toString()}\n                showsHorizontalScrollIndicator={false}\n                renderItem={({ item }) => (\n                    <View>         \n                        <Text style={{ padding: 20, fontSize: 15, textAlign: 'justify'}}>{item.chapter_content}</Text>\n                    </View>\n                )}  \n                ListEmptyComponent={ListEmpty}\n              /> \n            </View>\n          )}\n        </View>\n        <View style={styles.tabView}>\n          <View style={styles.tabContainer}>\n            <TouchableOpacity onPress={()=> setChapter(chapter-1)}>\n              <AntDesign name=\"arrowleft\" size={24} color={'#aa4fff'} />\n            </TouchableOpacity>\n            <TouchableOpacity onPress={() => {setVoting(!voting); setVote(voting?vote-1:vote+1); sendVote();}}>\n                <Ionicons \n                    name= {voting?'md-star':'md-star-outline'}\n                    size={24} \n                    color={'#aa4fff'} \n                />\n            </TouchableOpacity>\n            <TouchableOpacity \n              onPress={() => {\n                setModalVisible(true);\n              }}>\n                <MaterialCommunityIcons \n                    name=\"comment-outline\" \n                    size={24} \n                    color={'#aa4fff'} \n                />\n            </TouchableOpacity>\n            <TouchableOpacity>\n                <MaterialCommunityIcons name=\"share-variant\" size={24} color={'#aa4fff'} />\n            </TouchableOpacity>\n            <TouchableOpacity onPress={()=> setChapter(chapter+1)}>\n              <AntDesign name=\"arrowright\" size={24} color={'#aa4fff'} />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    )   \n} export {ReadingScreen};\n \nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'flex-start',\n        flexDirection: 'column',\n        alignItems: 'center',\n        //marginTop: 25,\n        borderColor: '#8a2be2',\n    },\n    tabView: {\n      justifyContent: 'flex-end', \n      backgroundColor: '#aa4fff', \n      width: '100%', \n      height: 40, \n      paddingRight: 5\n    },\n    tabContainer: {\n      flex: 1, \n      height: 40,  \n      width: Dimensions.get('window').width,  \n      backgroundColor: 'white', \n      alignItems: 'center', \n      justifyContent: 'space-around', \n      flexDirection: 'row'\n    }\n});"]},"metadata":{},"sourceType":"module"}