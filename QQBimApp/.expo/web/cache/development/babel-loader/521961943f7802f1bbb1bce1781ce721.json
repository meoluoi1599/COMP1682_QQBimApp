{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\ScreemFolder\\\\NotificationScreen\\\\ChatScreen.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport io from \"socket.io-client\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nfunction ChatScreen() {\n  var _this = this;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      chatMessage = _React$useState2[0],\n      setChatMessage = _React$useState2[1];\n\n  React.useEffect(function () {\n    _this.socket = io(\"http://192.168.1.6:19000\");\n\n    _this.socket.on(\"get_message\");\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"djdfhjfdjhfdhj\")), React.createElement(View, {\n    style: {\n      justifyContent: 'flex-end',\n      backgroundColor: 'white',\n      width: '100%',\n      height: 45,\n      flexDirection: 'row',\n      paddingRight: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      height: 45,\n      borderColor: '#8a2be2',\n      borderWidth: 1,\n      width: '80%'\n    },\n    autoCorrect: false,\n    value: chatMessage,\n    onSubmitEditing: function onSubmitEditing() {\n      return submitChatMessage();\n    },\n    onChangeText: function onChangeText(chatMessage) {\n      return setChatMessage(chatMessage);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: '#aa4fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-send\",\n    size: 45,\n    color: \"white\",\n    style: {\n      marginLeft: 10,\n      marginRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport { ChatScreen };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: 25\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/ScreemFolder/NotificationScreen/ChatScreen.js"],"names":["React","io","Ionicons","TouchableOpacity","ChatScreen","useState","chatMessage","setChatMessage","useEffect","socket","on","styles","container","flex","justifyContent","backgroundColor","width","height","flexDirection","paddingRight","borderColor","borderWidth","submitChatMessage","marginLeft","marginRight","StyleSheet","create","alignItems","marginTop"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;AAGA,SAASC,UAAT,GAAsB;AAAA;;AAAA,wBACoBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CADpB;AAAA;AAAA,MACXC,WADW;AAAA,MACEC,cADF;;AAElBP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAM;AACpB,IAAA,KAAI,CAACC,MAAL,GAAcR,EAAE,CAAC,0BAAD,CAAhB;;AACA,IAAA,KAAI,CAACQ,MAAL,CAAYC,EAAZ,CAAe,aAAf;AACD,GAHD;AA0BA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADA,EAIA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,cAAc,EAAE,UAAjB;AAA6BC,MAAAA,eAAe,EAAE,OAA9C;AAAuDC,MAAAA,KAAK,EAAE,MAA9D;AAAsEC,MAAAA,MAAM,EAAE,EAA9E;AAAkFC,MAAAA,aAAa,EAAE,KAAjG;AAAwGC,MAAAA,YAAY,EAAE;AAAtH,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM,EAAE,EAAV;AAAcG,MAAAA,WAAW,EAAE,SAA3B;AAAsCC,MAAAA,WAAW,EAAE,CAAnD;AAAsDL,MAAAA,KAAK,EAAE;AAA7D,KADT;AAEE,IAAA,WAAW,EAAE,KAFf;AAGE,IAAA,KAAK,EAAEV,WAHT;AAIE,IAAA,eAAe,EAAE;AAAA,aAAMgB,iBAAiB,EAAvB;AAAA,KAJnB;AAKE,IAAA,YAAY,EAAE,sBAAAhB,WAAW;AAAA,aAAKC,cAAc,CAACD,WAAD,CAAnB;AAAA,KAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAACS,MAAAA,eAAe,EAAE;AAAlB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,SAAf;AAAyB,IAAA,IAAI,EAAE,EAA/B;AAAmC,IAAA,KAAK,EAAC,OAAzC;AAAiD,IAAA,KAAK,EAAE;AAAEQ,MAAAA,UAAU,EAAE,EAAd;AAAkBC,MAAAA,WAAW,EAAE;AAA/B,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CAJA,CADJ;AAmBH;;AAAC,SAAQpB,UAAR;AAEF,IAAMO,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC7Bd,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,YAFT;AAGPI,IAAAA,aAAa,EAAE,QAHR;AAIPS,IAAAA,UAAU,EAAE,QAJL;AAKPC,IAAAA,SAAS,EAAE;AALJ;AADkB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Dimensions, View, TextInput, Text } from 'react-native';\r\nimport io from \"socket.io-client\";\r\nimport { Ionicons } from '@expo/vector-icons'; \r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\n \r\nfunction ChatScreen() {\r\n    const [chatMessage, setChatMessage] = React.useState('');\r\n    React.useEffect(() => {\r\n      this.socket = io(\"http://192.168.1.6:19000\");\r\n      this.socket.on(\"get_message\")\r\n    });\r\n    // React.useEffect(() => {\r\n    //   //connect with socket.io\r\n    //     this.socket = io(\"http://192.168.1.6:19000:19000\");\r\n    //   //get list story of meassage\r\n    //     this.socket.on(\"get_message\", msg => {\r\n    //     setChatMessages( [...chatMessages, msg]);\r\n    //   });\r\n    // });\r\n    // // when submit will call two function \r\n    //   //emit_message to display in screen  \r\n    //   //add_message to add into db \r\n    //   //then set massage = \"\"\r\n    // submitChatMessage =()=> {\r\n    //     this.socket.emit(\"emit_message\", chatMessage);\r\n    //     this.socket.emit(\"add_message\", chatMessage);\r\n    //     setChatMessage(\"\");\r\n    // }\r\n\r\n    // const messages = chatMessages.map(messages => (\r\n    //     <Text key={messages}>{chatMessage}</Text>\r\n    //   ));\r\n  \r\n    return (\r\n        <View style={styles.container}>\r\n        <View style={{flex: 1}}>\r\n          <Text>djdfhjfdjhfdhj</Text>\r\n        </View>\r\n        <View style={{justifyContent: 'flex-end', backgroundColor: 'white', width: '100%', height: 45, flexDirection: 'row', paddingRight: 5}}>\r\n          <TextInput\r\n            style={{ height: 45, borderColor: '#8a2be2', borderWidth: 1, width: '80%'}}\r\n            autoCorrect={false}\r\n            value={chatMessage}\r\n            onSubmitEditing={() => submitChatMessage()}\r\n            onChangeText={chatMessage =>  setChatMessage(chatMessage)}\r\n          />\r\n          <TouchableOpacity style={{backgroundColor: '#aa4fff'}}>\r\n            <Ionicons name=\"md-send\" size={45} color=\"white\" style={{ marginLeft: 10, marginRight: 10}} />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    )   \r\n} export {ChatScreen};\r\n \r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'flex-start',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginTop: 25,\r\n    },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}