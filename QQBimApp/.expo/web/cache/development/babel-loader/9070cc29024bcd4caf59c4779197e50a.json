{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\Components\\\\HomeScreen\\\\ListStory.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { SplashScreen } from \"../../ScreemFolder/OtherScreen\";\n\nfunction ListStory(props) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dataSource = _React$useState2[0],\n      setDataSource = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(1),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      page = _React$useState6[0],\n      setPages = _React$useState6[1];\n\n  React.useEffect(function () {\n    fetch('http://192.168.1.6:19000/' + page).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      console.log('kq:' + res);\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  });\n\n  function loadMoreData() {\n    fetch('http://192.168.1.6:19000/' + page).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      if (res.length != 0) {\n        console.log('kq:' + res);\n        setDataSource.apply(void 0, _toConsumableArray(dataSource).concat([res]));\n        setPages(page + 1);\n      } else {\n        alert('The end of data');\n      }\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }\n\n  console.log(dataSource);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(SplashScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: style.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"List Story\")), React.createElement(FlatList, {\n    data: dataSource,\n    keyExtractor: function keyExtractor(item) {\n      return item.story_id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate('DetailStory', {\n            item: item\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: style.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 100,\n          height: 120\n        },\n        source: {\n          uri: 'http://192.168.1.6:19000/return_img/tarot.jpg'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 23\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        style: {\n          fontWeight: 'bold',\n          fontSize: 18\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }\n      }, item.story_title), React.createElement(Text, {\n        numberOfLines: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }\n      }, item.story_description, \" \"))));\n    },\n    showsHorizontalScrollIndicator: false,\n    onEndReached: loadMoreData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport { ListStory };\nvar style = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: 'white',\n    width: Dimensions.get('window').width,\n    marginBottom: 5,\n    borderTopWidth: 0.5,\n    borderTopColor: 'grey',\n    borderBottomWidth: 0.5,\n    borderBottomColor: 'grey',\n    height: 140\n  },\n  text: {\n    margin: 10,\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/Components/HomeScreen/ListStory.js"],"names":["React","SplashScreen","ListStory","props","useState","dataSource","setDataSource","isLoading","setLoading","page","setPages","useEffect","fetch","then","response","json","res","console","log","catch","error","finally","loadMoreData","length","alert","style","text","item","story_id","toString","navigation","navigate","container","flex","width","height","uri","fontWeight","fontSize","story_title","story_description","StyleSheet","create","flexDirection","padding","backgroundColor","Dimensions","get","marginBottom","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { \n  View, \n  Text,\n  FlatList, \n  StyleSheet, \n  Image, \n  TouchableOpacity,\n  Dimensions\n} from 'react-native';\nimport {SplashScreen} from '../../ScreemFolder/OtherScreen';\n\n\nfunction ListStory(props) {\n  const [dataSource, setDataSource ]= React.useState([]);\n  const [isLoading, setLoading] = React.useState(true);\n  const [page, setPages] = React.useState(1);\n  \n  React.useEffect(() => {\n    // fetch('http://10.0.2.2:5000/')\n    fetch('http://192.168.1.6:19000/' + page)\n    .then ((response) => response.json())\n    .then ( (res) => { \n      console.log('kq:' + res); \n      setDataSource(res);\n    })\n    .catch ((error) => {\n      console.log(error);\n    })\n    .finally(() => {\n      setLoading(false) \n    });\n  });\n\n  function loadMoreData(){\n    fetch('http://192.168.1.6:19000/' + page)\n    .then ((response) => response.json())\n    .then ( (res) => { \n      if(res.length !=0){\n        console.log('kq:' + res); \n        setDataSource(...dataSource, res);\n        setPages(page+1);\n      } else {\n        alert('The end of data')\n      }\n    })\n    .catch ((error) => {\n      console.log(error);\n    })\n    .finally(() => setLoading(false));\n  }\n  console.log(dataSource);\n  return (  \n    <View>\n      {isLoading? <SplashScreen/>:(\n        <View>\n          <View><Text style={style.text}>List Story</Text></View>\n          <FlatList\n            data={dataSource}\n            keyExtractor= {item => item.story_id.toString()}\n            renderItem={({ item }) => (\n              <TouchableOpacity onPress={() => props.navigation.navigate('DetailStory', {item: item})}>         \n                  <View style={style.container}>\n                    <View style={{flex: 1}}>\n                      <Image style={{width: 100, height: 120}}\n                        source= {{uri: 'http://192.168.1.6:19000/return_img/tarot.jpg'}}\n                      />\n                    </View>\n                    <View style={{flex: 2}}>\n                      <Text  numberOfLines={1} style={{fontWeight: 'bold', fontSize: 18}}>{item.story_title}</Text>\n                      <Text numberOfLines={3}>{item.story_description} </Text>\n                    </View>\n                  </View>\n              </TouchableOpacity>\n            )}\n            showsHorizontalScrollIndicator={false}\n            onEndReached={loadMoreData}\n          />\n        </View>\n      )}\n    </View>\n  )\n  \n}\nexport {ListStory}\n\nvar style = StyleSheet.create({\n  container: {\n    flex:1,\n    flexDirection: 'row', \n    padding: 10,\n    backgroundColor: 'white',\n    width: Dimensions.get('window').width, \n    marginBottom: 5,\n    borderTopWidth: 0.5,\n    borderTopColor: 'grey',\n    borderBottomWidth: 0.5,\n    borderBottomColor:'grey',\n    height: 140\n  },\n  text: {\n    margin: 10,\n    fontSize: 20,\n    fontWeight: 'bold',\n  }\n})\n"]},"metadata":{},"sourceType":"module"}