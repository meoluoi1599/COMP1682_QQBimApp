{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\ScreemFolder\\\\SearchScreen\\\\SearchScreen.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TabView, SceneMap } from 'react-native-tab-view';\nimport { SplashScreen } from \"../../ScreemFolder/OtherScreen\";\nvar initialLayout = {\n  width: Dimensions.get('window').width\n};\n\nfunction SearchScreen(props) {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      user = _React$useState4[0],\n      setUser = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      story = _React$useState6[0],\n      setStory = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      list = _React$useState8[0],\n      setList = _React$useState8[1];\n\n  var _React$useState9 = React.useState(true),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      isLoading = _React$useState10[0],\n      setLoading = _React$useState10[1];\n\n  var _React$useState11 = React.useState([{\n    key: '1',\n    title: 'Story'\n  }, {\n    key: '2',\n    title: 'User'\n  }, {\n    key: '3',\n    title: 'Story List'\n  }]),\n      _React$useState12 = _slicedToArray(_React$useState11, 1),\n      routes = _React$useState12[0];\n\n  var getUser = function getUser() {\n    fetch('http://192.168.1.6:19000/search_user' + props.route.params.search).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setUser(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  };\n\n  var getStory = function getStory() {\n    fetch('http://192.168.1.6:19000/search_story' + props.route.params.search).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setStory(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  };\n\n  var getList = function getList() {\n    fetch('http://192.168.1.6:19000/search_list' + props.route.params.search).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setList(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  };\n\n  React.useEffect(function () {\n    getStory();\n    getUser();\n    getList();\n  });\n\n  var StoryRoute = function StoryRoute() {\n    return React.createElement(View, {\n      style: styles.scene,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, isLoading ? React.createElement(SplashScreen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 22\n      }\n    }) : React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, React.createElement(FlatList, {\n      data: story,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      keyExtractor: function keyExtractor(item) {\n        return item.story_id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(TouchableOpacity, {\n          style: {\n            padding: 5\n          },\n          onPress: function onPress() {\n            props.navigation.navigate('DetailCategory', {\n              category_id: item.category_id,\n              onClick: onClick\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            backgroundColor: '#aa4fff',\n            borderRadius: 40,\n            padding: 5,\n            shadowColor: \"#BA55D3\",\n            shadowOffset: {\n              width: 0,\n              height: 2\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        }, item.story_title));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  var UserRoute = function UserRoute() {\n    return React.createElement(View, {\n      style: styles.scene,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, isLoading ? React.createElement(SplashScreen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 22\n      }\n    }) : React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, React.createElement(FlatList, {\n      data: user,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      keyExtractor: function keyExtractor(item) {\n        return item.user_id.toString();\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return React.createElement(TouchableOpacity, {\n          style: {\n            padding: 5\n          },\n          onPress: function onPress() {\n            props.navigation.navigate('DetailCategory', {\n              category_id: item.category_id,\n              onClick: onClick\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            backgroundColor: '#aa4fff',\n            borderRadius: 40,\n            padding: 5,\n            shadowColor: \"#BA55D3\",\n            shadowOffset: {\n              width: 0,\n              height: 2\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }\n        }, item.username));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  var StoryListRoute = function StoryListRoute() {\n    return React.createElement(View, {\n      style: styles.scene,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, isLoading ? React.createElement(SplashScreen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 22\n      }\n    }) : React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, React.createElement(FlatList, {\n      data: list,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      keyExtractor: function keyExtractor(item) {\n        return item.list_id.toString();\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return React.createElement(TouchableOpacity, {\n          style: {\n            padding: 5\n          },\n          onPress: function onPress() {\n            props.navigation.navigate('DetailCategory', {\n              category_id: item.category_id,\n              onClick: onClick\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            backgroundColor: '#aa4fff',\n            borderRadius: 40,\n            padding: 5,\n            shadowColor: \"#BA55D3\",\n            shadowOffset: {\n              width: 0,\n              height: 2\n            },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }\n        }, item.list_name));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  var renderScene = SceneMap({\n    1: StoryRoute,\n    2: UserRoute,\n    3: StoryListRoute\n  });\n  return React.createElement(TabView, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    initialLayout: initialLayout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  });\n}\n\nexport { SearchScreen };\nvar styles = StyleSheet.create({\n  scene: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/ScreemFolder/SearchScreen/SearchScreen.js"],"names":["React","TabView","SceneMap","SplashScreen","initialLayout","width","Dimensions","get","SearchScreen","props","useState","index","setIndex","user","setUser","story","setStory","list","setList","isLoading","setLoading","key","title","routes","getUser","fetch","route","params","search","then","response","json","res","catch","error","console","log","finally","getStory","getList","useEffect","StoryRoute","styles","scene","item","story_id","toString","padding","navigation","navigate","category_id","onClick","backgroundColor","borderRadius","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","story_title","UserRoute","user_id","username","StoryListRoute","list_id","list_name","renderScene","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, StyleSheet, Dimensions, Text, FlatList,TouchableOpacity } from 'react-native';\r\nimport { TabView, SceneMap } from 'react-native-tab-view';\r\nimport {SplashScreen} from '../../ScreemFolder/OtherScreen';\r\n\r\nconst initialLayout = { width: Dimensions.get('window').width };\r\n\r\nfunction SearchScreen(props) {\r\n  const [index, setIndex] = React.useState(0);\r\n  const [user, setUser] = React.useState([]);\r\n  const [story, setStory] = React.useState([]);\r\n  const [list, setList] = React.useState([]);\r\n  const [isLoading, setLoading] = React.useState(true);\r\n  const [routes] = React.useState([\r\n    { key: '1', title: 'Story' },\r\n    { key: '2', title: 'User' },\r\n    { key: '3', title: 'Story List' },\r\n  ]);\r\n\r\n  const getUser =() => {\r\n    fetch('http://192.168.1.6:19000/search_user' + props.route.params.search)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      setUser(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => setLoading(false));\r\n  }\r\n\r\n  const getStory =() => {\r\n    fetch('http://192.168.1.6:19000/search_story' + props.route.params.search)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      setStory(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => setLoading(false));\r\n  }\r\n\r\n  const getList =() => {\r\n    fetch('http://192.168.1.6:19000/search_list' + props.route.params.search)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      setList(res)\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => setLoading(false));\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getStory();\r\n    getUser();\r\n    getList();\r\n  });\r\n  const StoryRoute = () => (\r\n    <View style={styles.scene}>\r\n        <View>\r\n        {isLoading ? <SplashScreen/> : (\r\n          <View>\r\n            <FlatList\r\n              data={story}\r\n              horizontal\r\n              showsHorizontalScrollIndicator={false}\r\n              keyExtractor= {item => item.story_id.toString()}\r\n              renderItem={({item}) => (\r\n              <TouchableOpacity  style={{padding: 5}} onPress={()=> {props.navigation.navigate('DetailCategory', {category_id: item.category_id, onClick: onClick})}}>\r\n                <Text style={{\r\n                    backgroundColor: '#aa4fff', \r\n                    borderRadius: 40,\r\n                    padding: 5,\r\n                    shadowColor: \"#BA55D3\",\r\n                    shadowOffset: {\r\n                      width: 0,\r\n                      height: 2,\r\n                    },\r\n                    shadowOpacity: 0.25,\r\n                    shadowRadius: 3.84,\r\n                    elevation: 5,\r\n                  }}>\r\n                    {item.story_title}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            />\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n  \r\n  const UserRoute = () => (\r\n    <View style={styles.scene}>\r\n      <View>\r\n        {isLoading ? <SplashScreen/> : (\r\n          <View>\r\n            <FlatList\r\n              data={user}\r\n              horizontal\r\n              showsHorizontalScrollIndicator={false}\r\n              keyExtractor= {item => item.user_id.toString()}\r\n              renderItem={({item}) => (\r\n              <TouchableOpacity  style={{padding: 5}} onPress={()=> {props.navigation.navigate('DetailCategory', {category_id: item.category_id, onClick: onClick})}}>\r\n                <Text style={{\r\n                    backgroundColor: '#aa4fff', \r\n                    borderRadius: 40,\r\n                    padding: 5,\r\n                    shadowColor: \"#BA55D3\",\r\n                    shadowOffset: {\r\n                      width: 0,\r\n                      height: 2,\r\n                    },\r\n                    shadowOpacity: 0.25,\r\n                    shadowRadius: 3.84,\r\n                    elevation: 5,\r\n                  }}>\r\n                    {item.username}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            />\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n  \r\n  const StoryListRoute = () => (\r\n    <View style={styles.scene}>\r\n      <View>\r\n        {isLoading ? <SplashScreen/> : (\r\n          <View>\r\n            <FlatList\r\n              data={list}\r\n              horizontal\r\n              showsHorizontalScrollIndicator={false}\r\n              keyExtractor= {item => item.list_id.toString()}\r\n              renderItem={({item}) => (\r\n              <TouchableOpacity  style={{padding: 5}} onPress={()=> {props.navigation.navigate('DetailCategory', {category_id: item.category_id, onClick: onClick})}}>\r\n                <Text style={{\r\n                    backgroundColor: '#aa4fff', \r\n                    borderRadius: 40,\r\n                    padding: 5,\r\n                    shadowColor: \"#BA55D3\",\r\n                    shadowOffset: {\r\n                      width: 0,\r\n                      height: 2,\r\n                    },\r\n                    shadowOpacity: 0.25,\r\n                    shadowRadius: 3.84,\r\n                    elevation: 5,\r\n                  }}>\r\n                    {item.list_name}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            />\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n  const renderScene = SceneMap({\r\n    1: StoryRoute,\r\n    2: UserRoute,\r\n    3: StoryListRoute\r\n  });\r\n\r\n  return ( \r\n    <TabView\r\n      navigationState={{ index, routes }}\r\n      renderScene={renderScene}\r\n      onIndexChange={setIndex}\r\n      initialLayout={initialLayout}\r\n    />\r\n  );\r\n} export {SearchScreen};\r\n\r\nconst styles = StyleSheet.create({\r\n  scene: {\r\n    flex: 1,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}