{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\admin\\\\adminPages.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { SplashScreen } from \"../users/ScreemFolder/OtherScreen\";\n\nfunction adminPages(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      dataSource = _React$useState4[0],\n      setDataSource = _React$useState4[1];\n\n  React.useEffect(function () {\n    fetch('http://192.168.0.101:19000/get_report').then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, isLoading ? React.createElement(SplashScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }) : React.createElement(FlatList, {\n    data: dataSource,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(item) {\n      return item.report_id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        style: styles.container,\n        onPress: function onPress() {\n          return props.navigation.navigate('detailReport', {\n            item: item\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          margin: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: '#9370db',\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 79\n        }\n      }, item.report_title)), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 27\n        }\n      }, \"Story Title: \", React.createElement(Text, {\n        style: [styles.textStyle, {\n          fontWeight: 'normal'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 71\n        }\n      }, item.story_title)), React.createElement(Text, {\n        style: styles.textStyle,\n        numberOfLines: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 27\n        }\n      }, \"Content report: \", React.createElement(Text, {\n        style: [styles.textStyle, {\n          fontWeight: 'normal',\n          textAlign: 'justify'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 92\n        }\n      }, item.report_content)))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport { adminPages };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: Dimensions.get('window').width\n  },\n  header: {\n    color: 'white',\n    fontSize: 18\n  },\n  textStyle: {\n    fontSize: 15,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/admin/adminPages.js"],"names":["React","SplashScreen","adminPages","props","useState","isLoading","setLoading","dataSource","setDataSource","useEffect","fetch","then","response","json","res","catch","error","console","log","finally","flex","justifyContent","item","report_id","toString","styles","container","navigation","navigate","margin","backgroundColor","padding","header","report_title","textStyle","fontWeight","story_title","textAlign","report_content","StyleSheet","create","width","Dimensions","get","color","fontSize"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;AAEA,SAASC,YAAT;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAAA,wBACQH,KAAK,CAACI,QAAN,CAAe,KAAf,CADR;AAAA;AAAA,MACjBC,SADiB;AAAA,MACNC,UADM;;AAAA,yBAEYN,KAAK,CAACI,QAAN,CAAe,EAAf,CAFZ;AAAA;AAAA,MAEjBG,UAFiB;AAAA,MAELC,aAFK;;AAIxBR,EAAAA,KAAK,CAACS,SAAN,CAAgB,YAAM;AAElBC,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACCC,IADD,CACO,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADP,EAECF,IAFD,CAEQ,UAACG,GAAD,EAAS;AACbN,MAAAA,aAAa,CAACM,GAAD,CAAb;AACH,KAJD,EAKCC,KALD,CAKQ,UAACC,KAAD,EAAW;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAPD,EAQCG,OARD,CAQS,YAAM;AACXb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAVD;AAWL,GAbC,EAaA,EAbA;AAcA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACc,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,cAAc,EAAE;AAA1B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,SAAS,GAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,GACN,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEE,UADV;AAEI,IAAA,8BAA8B,EAAE,KAFpC;AAGI,IAAA,YAAY,EAAE,sBAAAe,IAAI;AAAA,aAAIA,IAAI,CAACC,SAAL,CAAeC,QAAf,EAAJ;AAAA,KAHtB;AAII,IAAA,UAAU,EAAE;AAAA,UAAEF,IAAF,QAAEA,IAAF;AAAA,aACZ,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEG,MAAM,CAACC,SAAhC;AAA2C,QAAA,OAAO,EAAE;AAAA,iBAAMvB,KAAK,CAACwB,UAAN,CAAiBC,QAAjB,CAA0B,cAA1B,EAA0C;AAACN,YAAAA,IAAI,EAAEA;AAAP,WAA1C,CAAN;AAAA,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACO,UAAAA,MAAM,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAE,SAAlB;AAA6BC,UAAAA,OAAO,EAAE;AAAtC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwD,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BV,IAAI,CAACW,YAAlC,CAAxD,CADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACS,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA4C,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACT,MAAM,CAACS,SAAR,EAAmB;AAACC,UAAAA,UAAU,EAAE;AAAb,SAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0Db,IAAI,CAACc,WAA/D,CAA5C,CADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAACS,SAApB;AAA+B,QAAA,aAAa,EAAE,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAiE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACT,MAAM,CAACS,SAAR,EAAmB;AAACC,UAAAA,UAAU,EAAE,QAAb;AAAuBE,UAAAA,SAAS,EAAE;AAAlC,SAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgFf,IAAI,CAACgB,cAArF,CAAjE,CAFJ,CAFF,CADJ,CADY;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,CADF;AAsBH;;AACD,SAAQpC,UAAR;AAEA,IAAMuB,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTN,IAAAA,IAAI,EAAE,CADG;AAETqB,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF;AAFvB,GADoB;AAK/BT,EAAAA,MAAM,EAAE;AACNY,IAAAA,KAAK,EAAE,OADD;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GALuB;AAS/BX,EAAAA,SAAS,EAAE;AACTW,IAAAA,QAAQ,EAAE,EADD;AAETV,IAAAA,UAAU,EAAE;AAFH;AAToB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity, Dimensions, Image} from 'react-native';\r\nimport { SplashScreen } from '../users/ScreemFolder/OtherScreen';\r\n\r\nfunction adminPages (props) {\r\n    const [isLoading, setLoading] = React.useState(false);\r\n    const [dataSource, setDataSource ]= React.useState([]);\r\n    \r\n    React.useEffect(() => {\r\n        // fetch('http://10.0.2.2:5000/')\r\n        fetch('http://192.168.0.101:19000/get_report')\r\n        .then ((response) => response.json())\r\n        .then ( (res) => { \r\n            setDataSource(res);\r\n        })\r\n        .catch ((error) => {\r\n            console.log(error);\r\n        })\r\n        .finally(() => {\r\n            setLoading(false) \r\n        });\r\n  },[]);\r\n    return (\r\n      <View style={{flex: 1, justifyContent: 'center'}}>\r\n        {isLoading? <SplashScreen/> : (\r\n            <FlatList\r\n                data={dataSource}\r\n                showsHorizontalScrollIndicator={false}\r\n                keyExtractor={item => item.report_id.toString()}\r\n                renderItem={({item}) => (\r\n                <TouchableOpacity style={styles.container} onPress={() => props.navigation.navigate('detailReport', {item: item})}>\r\n                    <View style={{margin: 10}}>\r\n                      <View style={{backgroundColor: '#9370db', padding: 10}}><Text style={styles.header}>{item.report_title}</Text></View>\r\n                      <View>\r\n                          <Text style={styles.textStyle}>Story Title: <Text style={[styles.textStyle, {fontWeight: 'normal'}]}>{item.story_title}</Text></Text>\r\n                          <Text style={styles.textStyle} numberOfLines={8}>Content report: <Text style={[styles.textStyle, {fontWeight: 'normal', textAlign: 'justify'}]}>{item.report_content}</Text></Text>\r\n                      </View>\r\n                    </View>\r\n                </TouchableOpacity>        \r\n            )}\r\n        />\r\n        )}\r\n      </View>\r\n    );\r\n}\r\nexport {adminPages};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    width: Dimensions.get('window').width,\r\n  },\r\n  header: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n  },\r\n  textStyle: {\r\n    fontSize: 15,\r\n    fontWeight: 'bold',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}