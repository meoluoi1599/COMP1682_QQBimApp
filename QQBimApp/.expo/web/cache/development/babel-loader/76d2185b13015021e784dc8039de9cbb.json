{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\users\\\\Components\\\\HomeScreen\\\\FamousReader.js\";\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { SplashScreen } from \"../../ScreemFolder/OtherScreen\";\nimport { useFocusEffect } from '@react-navigation/native';\n\nfunction FamousReader(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      dataSource = _React$useState4[0],\n      setDataSource = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      userData = _React$useState6[0],\n      setUserData = _React$useState6[1];\n\n  useFocusEffect(React.useCallback(function () {\n    getData();\n    fetch('http://192.168.0.100:19000/famous').then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n    return function () {\n      console.log('un');\n    };\n  }, []));\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              AsyncStorage.getItem('user').then(function (value) {\n                var jsonValue = JSON.parse(value);\n                setUserData(jsonValue);\n              });\n            } catch (e) {\n              console.log(e);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(SplashScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: style.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \" Top 10 Famous Reader\"), React.createElement(View, {\n    style: style.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, React.createElement(FlatList, {\n    data: dataSource,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(item) {\n      return item.user_id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          if (item.user_id != userData.user_id) {\n            props.navigation.navigate('DetailUser', {\n              item: item\n            });\n          } else {\n            props.navigation.navigate('AboutUser');\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: style.image,\n        source: {\n          uri: item.user_avatar\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport { FamousReader };\nvar style = StyleSheet.create({\n  container: {\n    padding: 5\n  },\n  image: {\n    marginRight: 10,\n    width: 70,\n    height: 70,\n    borderRadius: 50\n  },\n  text: {\n    margin: 5,\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/users/Components/HomeScreen/FamousReader.js"],"names":["React","useState","SplashScreen","useFocusEffect","FamousReader","props","isLoading","setLoading","dataSource","setDataSource","userData","setUserData","useCallback","getData","fetch","then","response","json","res","catch","error","console","log","finally","AsyncStorage","getItem","value","jsonValue","JSON","parse","e","style","text","container","item","user_id","toString","navigation","navigate","image","uri","user_avatar","StyleSheet","create","padding","marginRight","width","height","borderRadius","margin","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { FlatList, StyleSheet, Image, View, TouchableOpacity, Text, AsyncStorage} from 'react-native';\nimport {SplashScreen} from '../../ScreemFolder/OtherScreen';\nimport { useFocusEffect } from '@react-navigation/native';\n\nfunction  FamousReader(props) {\n  const [isLoading, setLoading] = React.useState(false);\n  const [dataSource, setDataSource ]= React.useState([]);\n  const [userData, setUserData] = React.useState([]);\n\n  useFocusEffect(\n    React.useCallback(() => {\n      getData();\n      fetch('http://192.168.0.100:19000/famous')\n      .then ((response) => response.json())\n      .then ( (res) => { \n        setDataSource(res);\n      })\n      .catch ((error) => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false) \n      });\n      return () => {\n        console.log('un')\n      };\n    }, [])\n  );\n  const getData = async () => {\n    try {\n      AsyncStorage.getItem('user').then((value) => {\n        const jsonValue = JSON.parse(value);\n        setUserData(jsonValue);\n      })\n    } catch(e) {\n      console.log(e)\n    }\n  }\n  return (\n    <View>\n      {isLoading? <SplashScreen/>: (\n        <View>\n          <Text style={style.text}> Top 10 Famous Reader</Text>\n          <View style={style.container}>\n            <FlatList\n              data={dataSource}\n              horizontal\n              showsHorizontalScrollIndicator={false}\n              keyExtractor={item => item.user_id.toString()}\n              renderItem={({item}) => (\n                <TouchableOpacity onPress={() => {\n                  if(item.user_id != userData.user_id){\n                    props.navigation.navigate('DetailUser', {item: item});\n                  }else {\n                    props.navigation.navigate('AboutUser');\n                  }\n                }}>\n                    <Image style={style.image}\n                        source={{uri: item.user_avatar}} \n                    />\n                </TouchableOpacity>        \n              )}\n            />\n        </View>\n        </View>\n      )}\n    </View>\n  );\n} export {FamousReader}\n\nconst style = StyleSheet.create({\n    container: {\n        padding: 5,\n        \n    },\n    image: {\n        marginRight: 10,\n        width: 70, \n        height: 70, \n        borderRadius: 50\n    },\n    text: {\n      margin: 5,\n      fontSize: 20,\n      fontWeight: 'bold',\n    }\n});\n"]},"metadata":{},"sourceType":"module"}