{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\users\\\\Components\\\\CategoryComponent\\\\Category.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { SplashScreen } from \"../../ScreemFolder/OtherScreen\";\n\nfunction Category(props) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dataSource = _React$useState2[0],\n      setDataSource = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(true),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      onClick = _React$useState6[0],\n      setOnClick = _React$useState6[1];\n\n  React.useEffect(function () {\n    fetch('http://192.168.0.101:19000/category').then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(SplashScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 18\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: dataSource,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(item) {\n      return item.category_id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        style: {\n          padding: 5\n        },\n        onPress: function onPress() {\n          props.navigation.navigate('DetailCategory', {\n            category_id: item.category_id,\n            onClick: onClick\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 12\n        }\n      }, React.createElement(Text, {\n        style: {\n          backgroundColor: '#aa4fff',\n          borderRadius: 40,\n          padding: 5,\n          shadowColor: \"#BA55D3\",\n          shadowOffset: {\n            width: 0,\n            height: 2\n          },\n          shadowOpacity: 0.25,\n          shadowRadius: 3.84,\n          elevation: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }\n      }, item.category));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport { Category };","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/users/Components/CategoryComponent/Category.js"],"names":["React","SplashScreen","Category","props","useState","dataSource","setDataSource","isLoading","setLoading","onClick","setOnClick","useEffect","fetch","then","response","json","res","catch","error","console","log","finally","item","category_id","toString","padding","navigation","navigate","backgroundColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","category"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAOA,SAAQC,YAAR;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,wBACaH,KAAK,CAACI,QAAN,CAAe,EAAf,CADb;AAAA;AAAA,MAChBC,UADgB;AAAA,MACJC,aADI;;AAAA,yBAESN,KAAK,CAACI,QAAN,CAAe,IAAf,CAFT;AAAA;AAAA,MAEhBG,SAFgB;AAAA,MAELC,UAFK;;AAAA,yBAGOR,KAAK,CAACI,QAAN,CAAe,IAAf,CAHP;AAAA;AAAA,MAGhBK,OAHgB;AAAA,MAGPC,UAHO;;AAKvBV,EAAAA,KAAK,CAACW,SAAN,CAAgB,YAAM;AAEpBC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACCC,IADD,CACO,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADP,EAECF,IAFD,CAEQ,UAACG,GAAD,EAAS;AACfV,MAAAA,aAAa,CAACU,GAAD,CAAb;AACD,KAJD,EAKCC,KALD,CAKQ,UAACC,KAAD,EAAW;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPD,EAQCG,OARD,CAQS,YAAM;AACbb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAVD;AAWD,GAbD,EAaG,EAbH;AAcA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,SAAS,GAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACR,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,UADR;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,8BAA8B,EAAE,KAHlC;AAIE,IAAA,YAAY,EAAG,sBAAAiB,IAAI;AAAA,aAAIA,IAAI,CAACC,WAAL,CAAiBC,QAAjB,EAAJ;AAAA,KAJrB;AAKE,IAAA,UAAU,EAAE;AAAA,UAAEF,IAAF,QAAEA,IAAF;AAAA,aACX,oBAAC,gBAAD;AAAmB,QAAA,KAAK,EAAE;AAACG,UAAAA,OAAO,EAAE;AAAV,SAA1B;AAAwC,QAAA,OAAO,EAAE,mBAAK;AAACtB,UAAAA,KAAK,CAACuB,UAAN,CAAiBC,QAAjB,CAA0B,gBAA1B,EAA4C;AAACJ,YAAAA,WAAW,EAAED,IAAI,CAACC,WAAnB;AAAgCd,YAAAA,OAAO,EAAEA;AAAzC,WAA5C;AAA+F,SAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AACVmB,UAAAA,eAAe,EAAE,SADP;AAEVC,UAAAA,YAAY,EAAE,EAFJ;AAGVJ,UAAAA,OAAO,EAAE,CAHC;AAIVK,UAAAA,WAAW,EAAE,SAJH;AAKVC,UAAAA,YAAY,EAAE;AACZC,YAAAA,KAAK,EAAE,CADK;AAEZC,YAAAA,MAAM,EAAE;AAFI,WALJ;AASVC,UAAAA,aAAa,EAAE,IATL;AAUVC,UAAAA,YAAY,EAAE,IAVJ;AAWVC,UAAAA,SAAS,EAAE;AAXD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaId,IAAI,CAACe,QAbT,CADF,CADW;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAmCD;;AACD,SAAQnC,QAAR","sourcesContent":["import * as React from 'react';\nimport { \n  View, \n  FlatList,\n  TouchableOpacity, \n  Text\n} from 'react-native';\nimport {SplashScreen} from '../../ScreemFolder/OtherScreen';\n\n\nfunction Category(props) {\n  const [dataSource, setDataSource ]= React.useState([]);\n  const [isLoading, setLoading] = React.useState(true);\n  const [onClick, setOnClick] = React.useState(true);\n\n  React.useEffect(() => {\n    // fetch('http://10.0.2.2:5000/')\n    fetch('http://192.168.0.101:19000/category')\n    .then ((response) => response.json())\n    .then ( (res) => { \n      setDataSource(res);\n    })\n    .catch ((error) => {\n      console.log(error);\n    })\n    .finally(() => {\n      setLoading(false) \n    });\n  }, []);\n  return (\n    <View>\n    {isLoading ? <SplashScreen/> : (\n      <View>\n        <FlatList\n          data={dataSource}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          keyExtractor= {item => item.category_id.toString()}\n          renderItem={({item}) => (\n           <TouchableOpacity  style={{padding: 5}} onPress={()=> {props.navigation.navigate('DetailCategory', {category_id: item.category_id, onClick: onClick})}}>\n             <Text style={{\n                backgroundColor: '#aa4fff', \n                borderRadius: 40,\n                padding: 5,\n                shadowColor: \"#BA55D3\",\n                shadowOffset: {\n                  width: 0,\n                  height: 2,\n                },\n                shadowOpacity: 0.25,\n                shadowRadius: 3.84,\n                elevation: 5,\n              }}>\n                {item.category}\n              </Text>\n            </TouchableOpacity>\n          )}\n        />\n      </View>\n    )}\n  </View>\n\n  );\n  \n}\nexport {Category}\n\n"]},"metadata":{},"sourceType":"module"}