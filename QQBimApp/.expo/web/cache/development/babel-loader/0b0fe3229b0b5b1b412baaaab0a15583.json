{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\node_modules\\\\react-native-cn-richtext-editor\\\\src\\\\CNTextInput.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport _ from 'lodash';\nimport update from 'immutability-helper';\nimport DiffMatchPatch from 'diff-match-patch';\nimport CNStyledText from \"./CNStyledText\";\n\nvar shortid = require('shortid');\n\nvar IS_IOS = Platform.OS == 'ios';\n\nvar CNTextInput = function (_Component) {\n  _inherits(CNTextInput, _Component);\n\n  var _super = _createSuper(CNTextInput);\n\n  function CNTextInput(props) {\n    var _this;\n\n    _classCallCheck(this, CNTextInput);\n\n    _this = _super.call(this, props);\n\n    _this.onSelectionChange = function (event) {\n      var selection = event.nativeEvent.selection;\n\n      if (_this.justToolAdded == true && selection.start == selection.end && selection.end >= _this.textLength || selection.end == _this.state.selection.end && selection.start == _this.state.selection.start || _this.justToolAdded == true && _this.checkKeyPressAndroid > 0) {\n        _this.justToolAdded = false;\n      } else {\n        if (_this.justToolAdded == true) {\n          _this.justToolAdded = false;\n        }\n\n        if (_this.androidSelectionJump !== 0) {\n          selection.start += _this.androidSelectionJump;\n          selection.end += _this.androidSelectionJump;\n          _this.androidSelectionJump = 0;\n        }\n\n        var _assertThisInitialize = _assertThisInitialized(_this),\n            upComingStype = _assertThisInitialize.upComingStype;\n\n        _this.beforePrevSelection = _this.prevSelection;\n        _this.prevSelection = _this.state.selection;\n        var styles = [];\n        var selectedTag = '';\n\n        if (upComingStype !== null) {\n          if (upComingStype.sel.start === _this.prevSelection.start && upComingStype.sel.end === _this.prevSelection.end) {\n            styles = upComingStype.stype;\n            selectedTag = upComingStype.tag;\n          } else {\n            _this.upComingStype = null;\n          }\n        } else {\n          var content = _this.props.items;\n\n          var res = _this.findContentIndex(content, selection.end);\n\n          styles = content[res.findIndx].stype;\n          selectedTag = content[res.findIndx].tag;\n        }\n\n        if (_this.avoidSelectionChangeOnFocus) {\n          _this.justToolAdded = true;\n        }\n\n        _this.avoidSelectionChangeOnFocus = false;\n        _this.avoidAndroidJump = false;\n\n        if (selection.end >= selection.start) {\n          _this.setState({\n            selection: selection\n          });\n        } else {\n          _this.setState({\n            selection: {\n              start: selection.end,\n              end: selection.start\n            }\n          });\n        }\n\n        if (_this.avoidUpdateStyle != true) {\n          if (_this.props.onSelectedStyleChanged) {\n            _this.props.onSelectedStyleChanged(styles);\n          }\n\n          if (_this.props.onSelectedTagChanged) {\n            _this.props.onSelectedTagChanged(selectedTag);\n          }\n        }\n\n        _this.notifyMeasureContentChanged(_this.props.items);\n      }\n\n      _this.avoidUpdateStyle = false;\n    };\n\n    _this.handleChangeText = function (text) {\n      var recalcText = false;\n      var selection = _this.state.selection;\n      var items = _this.props.items;\n      var myText = text;\n      var txtLen = myText.length;\n      var prevLen = _this.textLength;\n      var textDiff = txtLen - prevLen;\n      var cursorPosition = 0;\n      var shouldAddText = textDiff >= 0;\n      var shouldRemText = textDiff < 0;\n      var remDiff = Math.abs(textDiff);\n      var addDiff = Math.abs(textDiff);\n      var addCursorPosition = -1;\n\n      if (IS_IOS) {\n        if (_this.prevSelection.end !== _this.prevSelection.start) {\n          remDiff = Math.abs(_this.prevSelection.end - _this.prevSelection.start);\n          addDiff = myText.length - (_this.textLength - remDiff);\n\n          if (addDiff < 0) {\n            remDiff += Math.abs(addDiff);\n            addDiff = 0;\n          }\n\n          shouldRemText = true;\n          shouldAddText = addDiff > 0;\n          cursorPosition = _this.prevSelection.end;\n          addCursorPosition = _this.prevSelection.start;\n        } else if (textDiff === 0 && _this.prevSelection.end === selection.end) {\n          remDiff = 1;\n          addDiff = 1;\n          shouldRemText = true;\n          shouldAddText = addDiff > 0;\n          cursorPosition = _this.prevSelection.end;\n          addCursorPosition = _this.prevSelection.end - 1;\n        } else if (Math.abs(_this.prevSelection.end - selection.end) == Math.abs(textDiff)) {\n          cursorPosition = _this.prevSelection.end;\n        } else if (Math.abs(_this.prevSelection.end - selection.end) + Math.abs(_this.beforePrevSelection.end - _this.prevSelection.end) == Math.abs(textDiff)) {\n          cursorPosition = _this.beforePrevSelection.end;\n        } else {\n          var diff = Math.abs(textDiff) - Math.abs(_this.prevSelection.end - selection.end) - Math.abs(_this.beforePrevSelection.end - _this.prevSelection.end);\n\n          if (_this.beforePrevSelection.end + diff <= prevLen) {\n            cursorPosition = _this.beforePrevSelection.end + diff;\n          } else if (_this.textLength < myText.length) {\n            cursorPosition = _this.prevSelection.end - Math.abs(textDiff);\n          } else {\n            console.log('error may occure');\n            cursorPosition = _this.beforePrevSelection.end;\n          }\n        }\n      } else if (selection.end !== selection.start) {\n        remDiff = Math.abs(selection.end - selection.start);\n        addDiff = Math.abs(_this.textLength - remDiff - myText.length);\n        shouldRemText = true;\n        shouldAddText = addDiff > 0;\n        cursorPosition = selection.end;\n        addCursorPosition = selection.start;\n      } else {\n        cursorPosition = selection.end;\n      }\n\n      var content = items;\n      var upComing = null;\n\n      if (IS_IOS === false && shouldAddText === true && text.length > cursorPosition + addDiff) {\n        var txt = text.substr(cursorPosition + addDiff, 1);\n\n        if (txt !== ' ') {\n          var bef = text.substring(0, cursorPosition + addDiff);\n          var aft = text.substring(cursorPosition + addDiff);\n          var lstIndx = bef.lastIndexOf(' ');\n\n          if (lstIndx > 0) {\n            _this.AvoidAndroidIssueWhenPressSpace = 3;\n          } else {\n            _this.AvoidAndroidIssueWhenPressSpace = 3;\n          }\n        }\n      }\n\n      var preparedText = _this.oldText;\n\n      if (shouldRemText === true) {\n        preparedText = preparedText.substring(0, cursorPosition - remDiff) + preparedText.substring(cursorPosition);\n      }\n\n      if (shouldAddText === true) {\n        var cursor = cursorPosition;\n\n        if (shouldRemText === true) {\n          if (addCursorPosition >= 0) {\n            cursor = addCursorPosition;\n          }\n        }\n\n        var addedText = text.substring(cursor, cursor + addDiff);\n        preparedText = preparedText.substring(0, cursor) + addedText + preparedText.substring(cursor);\n      }\n\n      if (preparedText === myText) {\n        if (shouldRemText === true) {\n          var result = _this.removeTextFromContent(content, cursorPosition, remDiff);\n\n          upComing = result.upComing;\n          content = result.content;\n          if (!recalcText) recalcText = result.recalcText;\n        }\n\n        if (shouldAddText === true) {\n          if (shouldRemText === true) {\n            if (addCursorPosition >= 0) {\n              cursorPosition = addCursorPosition;\n            }\n          }\n\n          var _addedText = text.substring(cursorPosition, cursorPosition + addDiff);\n\n          var res = _this.addTextToContent(content, cursorPosition, _addedText);\n\n          content = res.content;\n          if (!recalcText) recalcText = res.recalcText;\n        }\n      } else {\n        var mydiff = _this.dmp.diff_main(_this.oldText, text);\n\n        var myIndex = 0;\n\n        for (var index = 0; index < mydiff.length; index++) {\n          var element = mydiff[index];\n          var _result = null;\n\n          switch (element[0]) {\n            case 1:\n              _result = _this.addTextToContent(content, myIndex, element[1]);\n              content = _result.content;\n              myIndex += element[1].length;\n              if (!recalcText) recalcText = _result.recalcText;\n              break;\n\n            case -1:\n              myIndex += element[1].length;\n              _result = _this.removeTextFromContent(content, myIndex, element[1].length);\n              content = _result.content;\n              upComing = _result.upComing;\n              myIndex -= element[1].length;\n              if (!recalcText) recalcText = _result.recalcText;\n              break;\n\n            default:\n              myIndex += element[1].length;\n              break;\n          }\n        }\n      }\n\n      if (recalcText === true) {\n        _this.oldText = _this.reCalculateText(content);\n      } else {\n        _this.oldText = text;\n      }\n\n      var styles = [];\n      var tagg = 'body';\n\n      if (upComing === null) {\n        var _res = _this.findContentIndex(content, _this.state.selection.end);\n\n        styles = content[_res.findIndx].stype;\n        tagg = content[_res.findIndx].tag;\n      } else {\n        styles = upComing.stype;\n        tagg = upComing.tag;\n      }\n\n      _this.upComingStype = upComing;\n\n      _this.props.onContentChanged(content);\n\n      if (_this.props.onSelectedStyleChanged) {\n        _this.props.onSelectedStyleChanged(styles);\n      }\n\n      if (_this.props.onSelectedTagChanged) {\n        _this.props.onSelectedTagChanged(tagg);\n      }\n\n      _this.notifyMeasureContentChanged(content);\n    };\n\n    _this.reCalculateText = function (content) {\n      var text = '';\n\n      for (var i = 0; i < content.length; i++) {\n        text += content[i].text;\n      }\n\n      return text;\n    };\n\n    _this.txtToStyle = function (styleName) {\n      var styles = _this.props.styleList;\n      return styles[styleName];\n    };\n\n    _this.onFocus = function (e) {\n      if (_this.props.onFocus) _this.props.onFocus(e);\n    };\n\n    _this.onBlur = function (e) {\n      if (_this.props.onBlur) _this.props.onBlur(e);\n    };\n\n    _this.handleKeyDown = function (e) {\n      _this.checkKeyPressAndroid += 1;\n\n      if (e.nativeEvent.key === 'Backspace' && _this.state.selection.start === 0 && _this.state.selection.end === 0) {\n        if (_this.props.onConnectToPrevClicked) _this.props.onConnectToPrevClicked();\n      }\n    };\n\n    _this.handleContentSizeChange = function (event) {\n      if (_this.props.onContentSizeChange) _this.props.onContentSizeChange(event);\n    };\n\n    _this.textInput = null;\n    _this.prevSelection = {\n      start: 0,\n      end: 0\n    };\n    _this.beforePrevSelection = {\n      start: 0,\n      end: 0\n    };\n    _this.avoidSelectionChangeOnFocus = false;\n    _this.turnOnJustToolOnFocus = false;\n    _this.textLength = 0;\n    _this.upComingStype = null;\n    _this.androidSelectionJump = 0;\n    _this.AvoidAndroidIssueWhenPressSpace = 0;\n    _this.checkKeyPressAndroid = 0;\n    _this.avoidAndroidIssueWhenPressSpaceText = '';\n    _this.justToolAdded = false;\n    _this.state = {\n      selectedTag: 'body',\n      selection: {\n        start: 0,\n        end: 0\n      },\n      avoidUpdateText: false\n    };\n    _this.dmp = new DiffMatchPatch();\n    _this.oldText = '';\n    _this.reCalculateTextOnUpate = false;\n    DiffMatchPatch.DIFF_DELETE = -1;\n    DiffMatchPatch.DIFF_INSERT = 1;\n    DiffMatchPatch.DIFF_EQUAL = 0;\n    return _this;\n  }\n\n  _createClass(CNTextInput, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var items = this.props.items;\n\n      if (items && Array.isArray(items) === true) {\n        var content = items;\n\n        for (var i = 0; i < content.length; i++) {\n          content[i].styleList = StyleSheet.flatten(this.convertStyleList(content[i].stype));\n        }\n\n        if (this.props.onContentChanged) {\n          this.props.onContentChanged(content);\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.items) {\n        this.textLength = 0;\n        this.oldText = this.reCalculateText(this.props.items);\n        this.textLength = this.oldText.length;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.reCalculateTextOnUpate === true) {\n        this.oldText = this.reCalculateText(this.props.items);\n        this.textLength = this.oldText.length;\n        this.reCalculateTextOnUpate = false;\n      }\n    }\n  }, {\n    key: \"findContentIndex\",\n    value: function findContentIndex(content, cursorPosition) {\n      var indx = 0;\n      var findIndx = -1;\n      var checknext = true;\n      var itemNo = 0;\n\n      for (var index = 0; index < content.length; index++) {\n        var element = content[index];\n        var ending = indx + element.len;\n\n        if (checknext === false) {\n          if (element.len === 0) {\n            findIndx = index;\n            itemNo = 0;\n            break;\n          } else {\n            break;\n          }\n        }\n\n        if (cursorPosition <= ending && cursorPosition >= indx) {\n          findIndx = index;\n          itemNo = cursorPosition - indx;\n          checknext = false;\n        }\n\n        indx += element.len;\n      }\n\n      if (findIndx == -1) {\n        findIndx = content.length - 1;\n      }\n\n      return {\n        findIndx: findIndx,\n        itemNo: itemNo\n      };\n    }\n  }, {\n    key: \"updateContent\",\n    value: function updateContent(content, item, index) {\n      var itemNo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var newContent = content;\n\n      if (index >= 0 && newContent[index].len === 0) {\n        if (item !== null) {\n          newContent = update(newContent, _defineProperty({}, index, {\n            $set: item\n          }));\n        }\n      } else if (itemNo === 0) {\n        if (item !== null && index >= 0) {\n          newContent = update(newContent, {\n            $splice: [[index, 0, item]]\n          });\n        }\n      } else if (itemNo === content[index].len) {\n        if (item !== null && index >= 0) {\n          newContent = update(newContent, {\n            $splice: [[index + 1, 0, item]]\n          });\n        }\n      } else if (itemNo > 0) {\n        var foundElement = content[index];\n        beforeContent = {\n          id: foundElement.id,\n          len: itemNo,\n          stype: foundElement.stype,\n          styleList: foundElement.styleList,\n          tag: foundElement.tag,\n          text: foundElement.text.substring(0, itemNo)\n        };\n        afterContent = {\n          id: shortid.generate(),\n          len: foundElement.len - itemNo,\n          stype: foundElement.stype,\n          styleList: foundElement.styleList,\n          tag: foundElement.tag,\n          text: foundElement.text.substring(itemNo)\n        };\n        newContent = update(newContent, _defineProperty({}, index, {\n          $set: beforeContent\n        }));\n        newContent = update(newContent, {\n          $splice: [[index + 1, 0, afterContent]]\n        });\n        newContent = update(newContent, {\n          $splice: [[index + 1, 0, item]]\n        });\n      }\n\n      return newContent;\n    }\n  }, {\n    key: \"addTextToContent\",\n    value: function addTextToContent(content, cursorPosition, textToAdd) {\n      var avoidStopSelectionForIOS = false;\n      var recalcText = false;\n      var result = this.findContentIndex(content, cursorPosition);\n      var foundIndex = result.findIndx;\n      var foundItemNo = result.itemNo;\n      var startWithReadonly = false;\n\n      if (content[foundIndex].readOnly === true) {\n        if (content[foundIndex].text.length === foundItemNo) {\n          if (content.length > foundIndex + 1 && !(content[foundIndex + 1].readOnly === true) && !(content[foundIndex + 1].NewLine === true) && !(this.upComingStype && this.upComingStype.sel.end === cursorPosition)) {\n            foundIndex += 1;\n            foundItemNo = 0;\n          } else if (this.upComingStype && this.upComingStype.sel.end === cursorPosition) {} else {\n            avoidStopSelectionForIOS = true;\n            this.upComingStype = {\n              text: '',\n              len: 0,\n              sel: {\n                start: cursorPosition,\n                end: cursorPosition\n              },\n              stype: content[foundIndex].stype,\n              tag: content[foundIndex].tag,\n              styleList: content[foundIndex].styleList\n            };\n          }\n        } else {\n          startWithReadonly = true;\n        }\n      }\n\n      if (this.upComingStype !== null && startWithReadonly === false && this.upComingStype.sel.end === cursorPosition) {\n        content = this.updateContent(content, {\n          id: shortid.generate(),\n          text: '',\n          len: 0,\n          stype: this.upComingStype.stype,\n          tag: this.upComingStype.tag,\n          styleList: this.upComingStype.styleList\n        }, foundIndex, foundItemNo);\n\n        var _this$findContentInde = this.findContentIndex(content, cursorPosition),\n            findIndx = _this$findContentInde.findIndx,\n            itemNo = _this$findContentInde.itemNo;\n\n        foundIndex = findIndx;\n        foundItemNo = itemNo;\n\n        if (IS_IOS === true && avoidStopSelectionForIOS === false && !(foundIndex === content.length - 1 && foundItemNo === content[foundIndex].len)) {\n          this.justToolAdded = true;\n        }\n      }\n\n      this.checkKeyPressAndroid = 0;\n      this.textLength += textToAdd.length;\n      content[foundIndex].len += textToAdd.length;\n      content[foundIndex].text = content[foundIndex].text.substring(0, foundItemNo) + textToAdd + content[foundIndex].text.substring(foundItemNo);\n      var newLineIndex = content[foundIndex].text.substring(1).indexOf('\\n');\n\n      if (newLineIndex >= 0) {\n        var res = this.updateNewLine(content, foundIndex, newLineIndex + 1);\n        content = res.content;\n\n        if (!recalcText) {\n          recalcText = res.recalcText;\n        }\n      } else if (content[foundIndex].text.substring(0, 1) == '\\n' && content[foundIndex].NewLine != true) {\n        var _res2 = this.updateNewLine(content, foundIndex, 0);\n\n        content = _res2.content;\n\n        if (!recalcText) {\n          recalcText = _res2.recalcText;\n        }\n      }\n\n      return {\n        content: content,\n        recalcText: recalcText\n      };\n    }\n  }, {\n    key: \"removeTextFromContent\",\n    value: function removeTextFromContent(content, cursorPosition, removeLength) {\n      var _this2 = this;\n\n      var recalcText = false;\n      var newLineIndexs = [];\n      var removeIndexes = [];\n      var upComing = null;\n      var result = this.findContentIndex(content, cursorPosition);\n      var foundIndex = result.findIndx;\n      var foundItemNo = result.itemNo;\n      var remDiff = removeLength;\n      this.textLength -= remDiff;\n\n      if (foundItemNo >= remDiff) {\n        var txt = content[foundIndex].text;\n        content[foundIndex].len -= remDiff;\n        content[foundIndex].text = txt.substring(0, foundItemNo - remDiff) + txt.substring(foundItemNo, txt.length);\n\n        if (content[foundIndex].NewLine === true) {\n          newLineIndexs.push(foundIndex);\n        }\n\n        if (content[foundIndex].readOnly === true) {\n          removeIndexes.push(content[foundIndex].id);\n        }\n\n        if (content[foundIndex].len === 0 && content.length > 1) {\n          upComing = {\n            len: 0,\n            text: '',\n            stype: content[foundIndex].stype,\n            styleList: content[foundIndex].styleList,\n            tag: content[foundIndex].tag,\n            sel: {\n              start: cursorPosition - 1,\n              end: cursorPosition - 1\n            }\n          };\n          removeIndexes.push(content[foundIndex].id);\n        } else if (foundItemNo === 1) {\n          upComing = {\n            len: 0,\n            text: '',\n            stype: content[foundIndex].stype,\n            styleList: content[foundIndex].styleList,\n            tag: content[foundIndex].tag,\n            sel: {\n              start: cursorPosition - 1,\n              end: cursorPosition - 1\n            }\n          };\n        }\n      } else {\n        var rem = remDiff - foundItemNo;\n        content[foundIndex].len = content[foundIndex].len - foundItemNo;\n        content[foundIndex].text = content[foundIndex].text.substring(foundItemNo);\n\n        if (rem > 0) {\n          for (var i = foundIndex - 1; i >= 0; i--) {\n            if (content[i].NewLine === true) {\n              newLineIndexs.push(i);\n            }\n\n            if (content[i].len >= rem) {\n              content[i].text = content[i].text.substring(0, content[i].len - rem);\n              content[i].len -= rem;\n              break;\n            } else {\n              rem -= content[i].len;\n              content[i].len = 0;\n              content[i].text = '';\n            }\n          }\n        }\n\n        for (var i = content.length - 1; i >= foundIndex; i--) {\n          if (content[i].len === 0) {\n            removeIndexes.push(content[i].id);\n          }\n        }\n      }\n\n      newLineIndexs = newLineIndexs.sort(function (a, b) {\n        return b - a;\n      });\n\n      for (var _i = 0; _i < newLineIndexs.length; _i++) {\n        var index = newLineIndexs[_i];\n        var newLineIndex = content[index].text.indexOf('\\n');\n\n        if (newLineIndex < 0) {\n          if (index > 0) {\n            content[index].NewLine = false;\n            beforeTag = content[index - 1].tag;\n            var res = this.changeToTagIn(content, content[index - 1].tag, index, false);\n            content = res.content;\n            if (!recalcText) recalcText = res.recalcText;\n          } else if (removeIndexes.indexOf(content[index].id) >= 0) {\n            var tagg = content[index].tag;\n\n            if (tagg == 'ul' || tagg === 'ol') {\n              var _res3 = this.changeToTagIn(content, 'body', 0, false);\n\n              content = _res3.content;\n              if (!recalcText) recalcText = _res3.recalcText;\n            }\n\n            if (content.length > 1) {\n              content[index + 1].NewLine = true;\n            } else {}\n          }\n        } else if (removeIndexes.indexOf(content[index].id) >= 0) {\n          content[index].NewLine = false;\n          content[index].readOnly = false;\n\n          if (index > 0) {\n            beforeTag = content[index - 1].tag;\n\n            var _res4 = this.changeToTagIn(content, content[index - 1].tag, index, false);\n\n            content = _res4.content;\n            if (!recalcText) recalcText = _res4.recalcText;\n          }\n        }\n      }\n\n      var _loop = function _loop(_i2) {\n        var remIndex = content.findIndex(function (x) {\n          return x.id == removeIndexes[_i2];\n        });\n        if (remIndex < 0) return \"continue\";\n\n        if (content[remIndex].len > 0) {\n          if (IS_IOS !== true) {\n            _this2.androidSelectionJump -= content[remIndex].len;\n          }\n\n          _this2.textLength -= content[remIndex].len;\n        }\n\n        if (remIndex == 0 && (content.length == 1 || content.length > 1 && content[1].NewLine == true && content[0].len == 0)) {\n          content[0].text = '';\n          content[0].len = 0;\n          content[0].readOnly = false;\n        } else {\n          content = content.filter(function (item) {\n            return item.id != removeIndexes[_i2];\n          });\n        }\n      };\n\n      for (var _i2 = 0; _i2 < removeIndexes.length; _i2++) {\n        var _ret = _loop(_i2);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      return {\n        content: content,\n        upComing: upComing,\n        recalcText: recalcText\n      };\n    }\n  }, {\n    key: \"updateNewLine\",\n    value: function updateNewLine(content, index, itemNo) {\n      var newContent = content;\n      var recalcText = false;\n      var prevTag = newContent[index].tag;\n      var isPrevList = false;\n\n      if (prevTag === 'ol' || prevTag == 'ul') {\n        isPrevList = true;\n\n        if (IS_IOS === false) {}\n      }\n\n      var isPrevHeading = prevTag === 'heading' || prevTag === 'title';\n      var foundElement = newContent[index];\n\n      if (itemNo === 0) {\n        newContent[index].NewLine = true;\n        var res = this.changeToTagIn(newContent, isPrevList ? prevTag : 'body', index, true);\n        newContent = res.content;\n        if (!recalcText) recalcText = res.recalcText;\n      } else if (itemNo === foundElement.len - 1) {\n        newContent[index].len = foundElement.len - 1;\n        newContent[index].text = foundElement.text.substring(0, foundElement.text.length - 1);\n        newContent[index].NewLine = newContent[index].text.indexOf('\\n') === 0 || index === 0;\n\n        if (newContent.length > index + 1 && newContent[index + 1].NewLine !== true) {\n          newContent[index + 1].len += 1;\n          newContent[index + 1].NewLine = true;\n          newContent[index + 1].text = \"\\n\" + newContent[index + 1].text;\n\n          var _res5 = this.changeToTagIn(newContent, isPrevList ? prevTag : 'body', index + 1, true);\n\n          newContent = _res5.content;\n          if (!recalcText) recalcText = _res5.recalcText;\n        } else {\n          beforeContent = {\n            id: shortid.generate(),\n            len: 1,\n            stype: isPrevHeading === true ? [] : newContent[index].stype,\n            styleList: [],\n            tag: 'body',\n            text: '\\n',\n            NewLine: true\n          };\n          beforeContent.styleList = StyleSheet.flatten(this.convertStyleList(update(beforeContent.stype, {\n            $push: [beforeContent.tag]\n          })));\n          newContent = update(newContent, {\n            $splice: [[index + 1, 0, beforeContent]]\n          });\n\n          if (isPrevList === true) {\n            var _res6 = this.changeToTagIn(newContent, prevTag, index + 1, true);\n\n            newContent = _res6.content;\n            if (!recalcText) recalcText = _res6.recalcText;\n          }\n        }\n      } else {\n        beforeContent = {\n          id: foundElement.id,\n          len: itemNo,\n          stype: foundElement.stype,\n          styleList: foundElement.styleList,\n          tag: foundElement.tag,\n          text: foundElement.text.substring(0, itemNo),\n          NewLine: foundElement.text.substring(0, itemNo).indexOf('\\n') === 0 || index === 0\n        };\n        afterContent = {\n          id: shortid.generate(),\n          len: foundElement.len - itemNo,\n          text: foundElement.text.substring(itemNo, foundElement.len),\n          stype: foundElement.stype,\n          styleList: foundElement.styleList,\n          tag: isPrevList ? prevTag : 'body',\n          NewLine: true\n        };\n        newContent = update(newContent, _defineProperty({}, index, {\n          $set: beforeContent\n        }));\n        newContent = update(newContent, {\n          $splice: [[index + 1, 0, afterContent]]\n        });\n\n        var _res7 = this.changeToTagIn(newContent, isPrevList ? prevTag : 'body', index + 1, true);\n\n        newContent = _res7.content;\n        if (!recalcText) recalcText = _res7.recalcText;\n      }\n\n      return {\n        content: newContent,\n        recalcText: recalcText\n      };\n    }\n  }, {\n    key: \"createUpComing\",\n    value: function createUpComing(start, end, tag, stype) {\n      this.upComingStype = {\n        sel: {\n          start: start,\n          end: end\n        },\n        tag: tag,\n        text: '',\n        stype: stype,\n        styleList: StyleSheet.flatten(this.convertStyleList(update(stype, {\n          $push: [tag]\n        })))\n      };\n    }\n  }, {\n    key: \"addToUpComming\",\n    value: function addToUpComming(toolType) {\n      if (this.upComingStype) {\n        var indexOfUpToolType = this.upComingStype.stype.indexOf(toolType);\n        var newUpStype = this.upComingStype ? indexOfUpToolType != -1 ? update(this.upComingStype.stype, {\n          $splice: [[indexOfUpToolType, 1]]\n        }) : update(this.upComingStype.stype, {\n          $push: [toolType]\n        }) : [toolType];\n        this.upComingStype.stype = newUpStype;\n        this.upComingStype.styleList = StyleSheet.flatten(this.convertStyleList(update(newUpStype, {\n          $push: [this.upComingStype.tag]\n        })));\n      }\n    }\n  }, {\n    key: \"applyStyle\",\n    value: function applyStyle(toolType) {\n      var _this$state$selection = this.state.selection,\n          start = _this$state$selection.start,\n          end = _this$state$selection.end;\n      var items = this.props.items;\n      var newCollection = [];\n      var content = items;\n      var indx = 0;\n      var upComingAdded = false;\n\n      for (var i = 0; i < content.length; i++) {\n        var _content$i = content[i],\n            id = _content$i.id,\n            len = _content$i.len,\n            stype = _content$i.stype,\n            tag = _content$i.tag,\n            text = _content$i.text,\n            styleList = _content$i.styleList;\n        var NewLine = content[i].NewLine ? content[i].NewLine : false;\n        var readOnly = content[i].readOnly ? content[i].readOnly : false;\n        var indexOfToolType = stype.indexOf(toolType);\n        var newStype = indexOfToolType != -1 ? update(stype, {\n          $splice: [[indexOfToolType, 1]]\n        }) : update(stype, {\n          $push: [toolType]\n        });\n        var newStyles = StyleSheet.flatten(this.convertStyleList(update(newStype, {\n          $push: [tag]\n        })));\n        var from = indx;\n        indx += len;\n        var to = indx;\n\n        if (readOnly) {\n          newCollection.push({\n            id: id,\n            text: text,\n            len: to - from,\n            tag: tag,\n            stype: stype,\n            styleList: styleList,\n            NewLine: NewLine,\n            readOnly: readOnly\n          });\n\n          if (i === content.length - 1 && start === end && end === to) {\n            if (upComingAdded === false) {\n              if (this.upComingStype === null || (this.upComingStype.sel.start === start && this.upComingStype.sel.end === end) == false) {\n                this.createUpComing(start, end, tag, newStype);\n              } else {\n                this.addToUpComming(toolType);\n              }\n\n              upComingAdded = true;\n            }\n          }\n        } else if (start >= from && start < to && end >= from && end < to) {\n          if (start !== end) {\n            if (start !== from) {\n              newCollection.push({\n                id: id,\n                text: text.substring(0, start - from),\n                len: start - from,\n                stype: stype,\n                styleList: styleList,\n                tag: tag,\n                NewLine: NewLine,\n                readOnly: readOnly\n              });\n            }\n\n            newCollection.push({\n              id: shortid.generate(),\n              text: text.substring(start - from, end - from),\n              len: end - start,\n              tag: tag,\n              stype: newStype,\n              styleList: newStyles\n            });\n\n            if (end !== to) {\n              newCollection.push({\n                id: shortid.generate(),\n                text: text.substring(end - from, to - from),\n                len: to - end,\n                tag: tag,\n                stype: stype,\n                styleList: styleList\n              });\n            }\n          } else {\n            newCollection.push({\n              id: id,\n              text: text,\n              len: to - from,\n              tag: tag,\n              stype: stype,\n              styleList: styleList,\n              NewLine: NewLine,\n              readOnly: readOnly\n            });\n\n            if (upComingAdded === false) {\n              if (this.upComingStype === null || (this.upComingStype.sel.start === start && this.upComingStype.sel.end === end) == false) {\n                this.createUpComing(start, end, tag, newStype);\n              } else {\n                this.addToUpComming(toolType);\n              }\n\n              upComingAdded = true;\n            }\n          }\n        } else if (start >= from && start < to) {\n          if (start !== from) {\n            newCollection.push({\n              id: id,\n              len: start - from,\n              text: text.substring(0, start - from),\n              stype: stype,\n              styleList: styleList,\n              tag: tag,\n              NewLine: NewLine,\n              readOnly: readOnly\n            });\n          }\n\n          newCollection.push({\n            id: shortid.generate(),\n            len: to - start,\n            text: text.substring(start - from, to - from),\n            tag: tag,\n            stype: newStype,\n            styleList: newStyles\n          });\n        } else if (end > from && end <= to) {\n          if (start === end) {\n            newCollection.push({\n              id: id,\n              text: text,\n              len: to - from,\n              stype: stype,\n              styleList: styleList,\n              tag: tag,\n              NewLine: NewLine,\n              readOnly: readOnly\n            });\n\n            if (upComingAdded === false) {\n              if (this.upComingStype === null || (this.upComingStype.sel.start === start && this.upComingStype.sel.end === end) == false) {\n                this.createUpComing(start, end, tag, newStype);\n              } else {\n                this.addToUpComming(toolType);\n              }\n\n              upComingAdded = true;\n            }\n          } else {\n            newCollection.push({\n              id: shortid.generate(),\n              text: text.substring(0, end - from),\n              len: end - from,\n              tag: tag,\n              NewLine: NewLine,\n              stype: newStype,\n              styleList: newStyles\n            });\n\n            if (end !== to) {\n              newCollection.push({\n                id: id,\n                text: text.substring(end - from, to - from),\n                len: to - end,\n                tag: tag,\n                stype: stype,\n                styleList: styleList,\n                readOnly: readOnly\n              });\n            }\n          }\n        } else if (from === to && start === from && end === to) {\n          newCollection.push({\n            id: id,\n            text: text,\n            len: to - from,\n            tag: tag,\n            stype: stype,\n            styleList: styleList,\n            NewLine: NewLine,\n            readOnly: readOnly\n          });\n\n          if (upComingAdded === false) {\n            if (this.upComingStype === null || (this.upComingStype.sel.start === start && this.upComingStype.sel.end === end) == false) {\n              this.createUpComing(start, end, tag, newStype);\n            } else {\n              this.addToUpComming(toolType);\n            }\n\n            upComingAdded = true;\n          }\n        } else if (from >= start && from <= end && to >= start && to <= end) {\n          newCollection.push({\n            id: id,\n            text: text,\n            len: to - from,\n            tag: tag,\n            stype: newStype,\n            styleList: newStyles,\n            NewLine: NewLine,\n            readOnly: readOnly\n          });\n        } else {\n          newCollection.push({\n            id: id,\n            text: text,\n            len: to - from,\n            tag: tag,\n            stype: stype,\n            styleList: styleList,\n            NewLine: NewLine,\n            readOnly: readOnly\n          });\n        }\n      }\n\n      var res = this.findContentIndex(newCollection, this.state.selection.end);\n      var styles = [];\n\n      if (this.upComingStype != null) {\n        styles = this.upComingStype.stype;\n      } else {\n        styles = newCollection[res.findIndx].stype;\n      }\n\n      this.justToolAdded = start !== end;\n      this.props.onContentChanged(newCollection);\n      if (this.props.onSelectedStyleChanged) this.props.onSelectedStyleChanged(styles);\n    }\n  }, {\n    key: \"applyTag\",\n    value: function applyTag(tagType) {\n      var items = this.props.items;\n      var selection = this.state.selection;\n      var res = this.findContentIndex(items, selection.end);\n\n      var _this$changeToTagIn = this.changeToTagIn(items, tagType, res.findIndx),\n          content = _this$changeToTagIn.content,\n          recalcText = _this$changeToTagIn.recalcText;\n\n      if (recalcText == true) {\n        this.oldText = this.reCalculateText(content);\n      }\n\n      if (this.props.onContentChanged) {\n        this.props.onContentChanged(content);\n      }\n\n      if (this.props.onSelectedTagChanged) {\n        this.props.onSelectedTagChanged(tagType);\n      }\n\n      this.notifyMeasureContentChanged(content);\n    }\n  }, {\n    key: \"notifyMeasureContentChanged\",\n    value: function notifyMeasureContentChanged(content) {\n      var _this3 = this;\n\n      if (this.props.onMeasureContentChanged) {\n        try {\n          setTimeout(function () {\n            var res = _this3.findContentIndex(content, _this3.state.selection.end);\n\n            var measureArray = content.slice(0, res.findIndx);\n            measureArray.push({\n              id: shortid.generate(),\n              len: res.itemNo,\n              stype: content[res.findIndx].stype,\n              styleList: content[res.findIndx].styleList,\n              text: content[res.findIndx].text.substring(0, res.itemNo + 1),\n              tag: content[res.findIndx].tag,\n              NewLine: content[res.findIndx].NewLine,\n              readOnly: content[res.findIndx].readOnly\n            });\n\n            _this3.props.onMeasureContentChanged(measureArray);\n          }, 100);\n        } catch (error) {}\n      }\n    }\n  }, {\n    key: \"changeToTagIn\",\n    value: function changeToTagIn(items, tag, index) {\n      var fromTextChange = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var recalcText = false;\n      var needBold = tag === 'heading' || tag === 'title';\n      var content = items;\n\n      for (var i = index + 1; i < content.length; i++) {\n        if (content[i].NewLine === true) {\n          break;\n        } else {\n          if (needBold === true && content[i].stype.indexOf('bold') == -1) {\n            content[i].stype = update(content[i].stype, {\n              $push: ['bold']\n            });\n          } else if (needBold === false && (content[i].tag === 'heading' || content[i].tag === 'title') && content[i].stype.indexOf('bold') != -1) {\n            content[i].stype = content[i].stype.filter(function (typ) {\n              return typ != 'bold';\n            });\n          }\n\n          content[i].tag = tag;\n          content[i].styleList = StyleSheet.flatten(this.convertStyleList(update(content[i].stype, {\n            $push: [content[i].tag]\n          })));\n        }\n      }\n\n      var shouldReorderList = false;\n\n      for (var _i3 = index; _i3 >= 0; _i3--) {\n        if (content[_i3].NewLine === true && content[_i3].tag === 'ol') {\n          shouldReorderList = true;\n        }\n\n        if (needBold === true && content[_i3].stype.indexOf('bold') == -1) {\n          content[_i3].stype = update(content[_i3].stype, {\n            $push: ['bold']\n          });\n        } else if (needBold === false && (content[_i3].tag === 'heading' || content[_i3].tag === 'title') && content[_i3].stype.indexOf('bold') != -1) {\n          content[_i3].stype = content[_i3].stype.filter(function (typ) {\n            return typ != 'bold';\n          });\n        }\n\n        content[_i3].tag = tag;\n        content[_i3].styleList = StyleSheet.flatten(this.convertStyleList(update(content[_i3].stype, {\n          $push: [content[_i3].tag]\n        })));\n\n        if (content[_i3].NewLine === true) {\n          recalcText = true;\n\n          if (tag === 'ul') {\n            if (content[_i3].readOnly === true) {\n              this.textLength -= content[_i3].len;\n\n              if (_i3 === 0) {\n                content[_i3].text = \"\\u2022 \";\n                content[_i3].len = 2;\n              } else {\n                content[_i3].text = \"\\n\\u2022 \";\n                content[_i3].len = 3;\n              }\n\n              this.textLength += content[_i3].len;\n\n              if (fromTextChange === true && IS_IOS !== true) {\n                this.androidSelectionJump += content[_i3].len;\n              }\n            } else {\n              if (content[_i3].len > (_i3 === 0 ? 0 : 1)) {\n                content[_i3].text = content[_i3].text.substring(_i3 === 0 ? 0 : 1);\n                content[_i3].len = content[_i3].len - (_i3 === 0 ? 0 : 1);\n                content[_i3].NewLine = false;\n                listContent = {\n                  id: shortid.generate(),\n                  len: _i3 === 0 ? 2 : 3,\n                  stype: [],\n                  text: _i3 === 0 ? \"\\u2022 \" : \"\\n\\u2022 \",\n                  tag: 'ul',\n                  NewLine: true,\n                  readOnly: true\n                };\n                content = update(content, {\n                  $splice: [[_i3, 0, listContent]]\n                });\n              } else {\n                content[_i3].text = _i3 === 0 ? \"\\u2022 \" : \"\\n\\u2022 \";\n                content[_i3].len = _i3 === 0 ? 2 : 3;\n                content[_i3].readOnly = true;\n                content[_i3].stype = [];\n                content[_i3].styleList = [];\n              }\n\n              this.textLength += 2;\n\n              if (fromTextChange === true && IS_IOS !== true) {\n                this.androidSelectionJump += 2;\n              }\n            }\n          } else if (tag === 'ol') {\n            shouldReorderList = true;\n\n            if (content[_i3].readOnly === true) {\n              this.textLength -= content[_i3].len;\n\n              if (_i3 === 0) {\n                content[_i3].text = '1- ';\n                content[_i3].len = 3;\n              } else {\n                content[_i3].text = '\\n1- ';\n                content[_i3].len = 4;\n              }\n\n              this.textLength += content[_i3].len;\n\n              if (fromTextChange === true && IS_IOS !== true) {\n                this.androidSelectionJump += content[_i3].len;\n              }\n            } else {\n              if (content[_i3].len > (_i3 === 0 ? 0 : 1)) {\n                content[_i3].text = content[_i3].text.substring(_i3 === 0 ? 0 : 1);\n                content[_i3].len = content[_i3].len - (_i3 === 0 ? 0 : 1);\n                content[_i3].NewLine = false;\n                listContent = {\n                  id: shortid.generate(),\n                  len: _i3 === 0 ? 3 : 4,\n                  stype: [],\n                  text: _i3 === 0 ? '1- ' : '\\n1- ',\n                  tag: 'ol',\n                  NewLine: true,\n                  readOnly: true\n                };\n                content = update(content, {\n                  $splice: [[_i3, 0, listContent]]\n                });\n              } else {\n                content[_i3].text = _i3 === 0 ? '1- ' : '\\n1- ';\n                content[_i3].len = _i3 === 0 ? 3 : 4;\n                content[_i3].readOnly = true;\n                content[_i3].stype = [];\n              }\n\n              this.textLength += 3;\n\n              if (fromTextChange === true && IS_IOS !== true) {\n                this.androidSelectionJump += 3;\n              }\n            }\n          } else if (content[_i3].readOnly === true) {\n            if (_i3 !== 0) {\n              this.textLength -= content[_i3].len - 1;\n              content[_i3].text = '\\n';\n              content[_i3].len = 1;\n              content[_i3].readOnly = false;\n            } else {\n              this.textLength -= content[_i3].len;\n\n              if (content.length > 1 && !(content[1].NewLine === true)) {\n                content = update(content, {\n                  $splice: [[_i3, 1]]\n                });\n                content[0].NewLine = true;\n              } else {\n                content[0].NewLine = true;\n                content[0].readOnly = false;\n                content[0].len = 0;\n                content[0].text = '';\n              }\n            }\n          }\n\n          break;\n        }\n      }\n\n      if (shouldReorderList === true) {\n        recalcText = true;\n        content = this.reorderList(content);\n      }\n\n      return {\n        content: content,\n        recalcText: recalcText\n      };\n    }\n  }, {\n    key: \"reorderList\",\n    value: function reorderList(items) {\n      var listNo = 1;\n\n      for (var i = 0; i < items.length; i++) {\n        var element = items[i];\n\n        if (element.NewLine === true && element.tag === 'ol') {\n          this.textLength -= element.len;\n          items[i].text = i === 0 ? listNo + \"- \" : \"\\n\" + listNo + \"- \";\n          items[i].len = items[i].text.length;\n          this.textLength += items[i].len;\n          listNo += 1;\n        } else if (element.tag !== 'ol') {\n          listNo = 1;\n        }\n      }\n\n      return items;\n    }\n  }, {\n    key: \"convertStyleList\",\n    value: function convertStyleList(stylesArr) {\n      var _this4 = this;\n\n      var styls = [];\n      stylesArr.forEach(function (element) {\n        var styleObj = _this4.txtToStyle(element);\n\n        if (styleObj !== null) styls.push(styleObj);\n      });\n      return styls;\n    }\n  }, {\n    key: \"forceSelectedStyles\",\n    value: function forceSelectedStyles() {\n      var content = this.props.items;\n      var selection = this.state.selection;\n\n      var _this$findContentInde2 = this.findContentIndex(content, selection.end),\n          findIndx = _this$findContentInde2.findIndx;\n\n      var styles = content[findIndx].stype;\n      var selectedTag = content[findIndx].tag;\n\n      if (this.props.onSelectedStyleChanged) {\n        this.props.onSelectedStyleChanged(styles);\n      }\n\n      if (this.props.onSelectedTagChanged) {\n        this.props.onSelectedTagChanged(selectedTag);\n      }\n    }\n  }, {\n    key: \"avoidSelectionChangeOnFocus\",\n    value: function avoidSelectionChangeOnFocus() {\n      this.avoidSelectionChangeOnFocus = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props = this.props,\n          items = _this$props.items,\n          foreColor = _this$props.foreColor,\n          style = _this$props.style,\n          returnKeyType = _this$props.returnKeyType,\n          styleList = _this$props.styleList;\n      var selection = this.state.selection;\n      var color = foreColor || '#000';\n      var fontSize = styleList && styleList.body && styleList.body.fontSize ? styleList.body.fontSize : 20;\n      return React.createElement(TextInput, {\n        underlineColorAndroid: \"rgba(0,0,0,0)\",\n        onSelectionChange: this.onSelectionChange,\n        multiline: true,\n        style: [{\n          color: color,\n          fontSize: fontSize,\n          paddingTop: 5,\n          paddingBottom: 5,\n          paddingLeft: 2,\n          paddingRight: 2,\n          textAlignVertical: 'top'\n        }, style || {}],\n        scrollEnabled: false,\n        returnKeyType: returnKeyType || 'next',\n        keyboardType: \"default\",\n        ref: function ref(component) {\n          return _this5.textInput = component;\n        },\n        onChangeText: this.handleChangeText,\n        onKeyPress: this.handleKeyDown,\n        selection: selection,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onContentSizeChange: this.handleContentSizeChange,\n        placeholder: this.props.placeholder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1316,\n          columnNumber: 9\n        }\n      }, _.map(items, function (item) {\n        return React.createElement(CNStyledText, {\n          key: item.id,\n          style: item.styleList,\n          text: item.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1343,\n            columnNumber: 17\n          }\n        });\n      }));\n    }\n  }, {\n    key: \"splitItems\",\n    value: function splitItems() {\n      var selection = this.state.selection;\n      var items = this.props.items;\n      var content = items;\n      var result = this.findContentIndex(content, selection.end);\n      var beforeContent = [];\n      var afterContent = [];\n\n      for (var i = 0; i < result.findIndx; i++) {\n        var element = content[i];\n        beforeContent.push(element);\n      }\n\n      var foundElement = content[result.findIndx];\n\n      if (result.itemNo != 0) {\n        beforeContent.push({\n          id: foundElement.id,\n          text: foundElement.text.substring(0, result.itemNo),\n          len: result.itemNo,\n          stype: foundElement.stype,\n          styleList: foundElement.styleList,\n          tag: foundElement.tag,\n          NewLine: foundElement.NewLine,\n          readOnly: foundElement.readOnly\n        });\n      }\n\n      if (result.itemNo !== foundElement.len) {\n        afterContent.push({\n          id: result.itemNo === 0 ? foundElement.id : shortid.generate(),\n          text: foundElement.text.substring(result.itemNo, foundElement.len),\n          len: foundElement.len - result.itemNo,\n          stype: foundElement.stype,\n          styleList: foundElement.styleList,\n          tag: foundElement.tag,\n          NewLine: true,\n          readOnly: foundElement.readOnly\n        });\n      }\n\n      for (var _i4 = result.findIndx + 1; _i4 < content.length; _i4++) {\n        var _element = content[_i4];\n        afterContent.push(_element);\n      }\n\n      beforeContent = this.reorderList(beforeContent);\n      afterContent = this.reorderList(afterContent);\n      return {\n        before: beforeContent,\n        after: afterContent\n      };\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var _this6 = this;\n\n      var selection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this.textInput.focus();\n\n      if (selection != null && selection.start && selection.end) {\n        setTimeout(function () {\n          _this6.setState({\n            selection: selection\n          });\n        }, 300);\n      }\n    }\n  }]);\n\n  return CNTextInput;\n}(Component);\n\nexport default CNTextInput;","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/node_modules/react-native-cn-richtext-editor/src/CNTextInput.js"],"names":["React","Component","_","update","DiffMatchPatch","CNStyledText","shortid","require","IS_IOS","Platform","OS","CNTextInput","props","onSelectionChange","event","selection","nativeEvent","justToolAdded","start","end","textLength","state","checkKeyPressAndroid","androidSelectionJump","upComingStype","beforePrevSelection","prevSelection","styles","selectedTag","sel","stype","tag","content","items","res","findContentIndex","findIndx","avoidSelectionChangeOnFocus","avoidAndroidJump","setState","avoidUpdateStyle","onSelectedStyleChanged","onSelectedTagChanged","notifyMeasureContentChanged","handleChangeText","text","recalcText","myText","txtLen","length","prevLen","textDiff","cursorPosition","shouldAddText","shouldRemText","remDiff","Math","abs","addDiff","addCursorPosition","diff","console","log","upComing","txt","substr","bef","substring","aft","lstIndx","lastIndexOf","AvoidAndroidIssueWhenPressSpace","preparedText","oldText","cursor","addedText","result","removeTextFromContent","addTextToContent","mydiff","dmp","diff_main","myIndex","index","element","reCalculateText","tagg","onContentChanged","i","txtToStyle","styleName","styleList","onFocus","e","onBlur","handleKeyDown","key","onConnectToPrevClicked","handleContentSizeChange","onContentSizeChange","textInput","turnOnJustToolOnFocus","avoidAndroidIssueWhenPressSpaceText","avoidUpdateText","reCalculateTextOnUpate","DIFF_DELETE","DIFF_INSERT","DIFF_EQUAL","Array","isArray","StyleSheet","flatten","convertStyleList","prevProps","prevState","indx","checknext","itemNo","ending","len","item","newContent","$set","$splice","foundElement","beforeContent","id","afterContent","generate","textToAdd","avoidStopSelectionForIOS","foundIndex","foundItemNo","startWithReadonly","readOnly","NewLine","updateContent","newLineIndex","indexOf","updateNewLine","removeLength","newLineIndexs","removeIndexes","push","rem","sort","a","b","beforeTag","changeToTagIn","remIndex","findIndex","x","filter","prevTag","isPrevList","isPrevHeading","$push","toolType","indexOfUpToolType","newUpStype","newCollection","upComingAdded","indexOfToolType","newStype","newStyles","from","to","createUpComing","addToUpComming","tagType","onMeasureContentChanged","setTimeout","measureArray","slice","error","fromTextChange","needBold","typ","shouldReorderList","listContent","reorderList","listNo","stylesArr","styls","forEach","styleObj","foreColor","style","returnKeyType","color","fontSize","body","paddingTop","paddingBottom","paddingLeft","paddingRight","textAlignVertical","component","placeholder","map","before","after","focus"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TextInput, StyleSheet, Platform } from 'react-native';\r\nimport _ from 'lodash';\r\nimport update from 'immutability-helper';\r\nimport DiffMatchPatch from 'diff-match-patch';\r\nimport CNStyledText from './CNStyledText';\r\n\r\nconst shortid = require('shortid');\r\n\r\nconst IS_IOS = Platform.OS == 'ios';\r\n\r\n\r\nclass CNTextInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.textInput = null;\r\n    this.prevSelection = { start: 0, end: 0 };\r\n    this.beforePrevSelection = { start: 0, end: 0 };\r\n    this.avoidSelectionChangeOnFocus = false;\r\n    this.turnOnJustToolOnFocus = false;\r\n    this.textLength = 0;\r\n    this.upComingStype = null;\r\n    this.androidSelectionJump = 0;\r\n\r\n    this.AvoidAndroidIssueWhenPressSpace = 0;\r\n    this.checkKeyPressAndroid = 0;\r\n\r\n    this.avoidAndroidIssueWhenPressSpaceText = '';\r\n    this.justToolAdded = false;\r\n    this.state = {\r\n      selectedTag: 'body',\r\n      selection: { start: 0, end: 0 },\r\n      avoidUpdateText: false,\r\n    };\r\n\r\n    this.dmp = new DiffMatchPatch();\r\n    this.oldText = '';\r\n    this.reCalculateTextOnUpate = false;\r\n    // You can also use the following properties:\r\n    DiffMatchPatch.DIFF_DELETE = -1;\r\n    DiffMatchPatch.DIFF_INSERT = 1;\r\n    DiffMatchPatch.DIFF_EQUAL = 0;\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { items } = this.props;\r\n    if(items && Array.isArray(items) === true) {\r\n      let content = items;\r\n      for (let i = 0; i < content.length; i++) {\r\n        content[i].styleList = StyleSheet.flatten(this.convertStyleList(content[i].stype));\r\n      }\r\n      if (this.props.onContentChanged) {\r\n        this.props.onContentChanged(content);\r\n      }\r\n    }   \r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.items) {\r\n      this.textLength = 0;\r\n      // for (let index = 0; index < this.props.items.length; index++) {\r\n      //     const element = this.props.items[index];\r\n      //     this.textLength += element.text.length;\r\n      // }\r\n      this.oldText = this.reCalculateText(this.props.items);\r\n      this.textLength = this.oldText.length;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.reCalculateTextOnUpate === true) {\r\n      this.oldText = this.reCalculateText(this.props.items);\r\n      this.textLength = this.oldText.length;\r\n      this.reCalculateTextOnUpate = false;\r\n    }\r\n  }\r\n\r\n  findContentIndex(content, cursorPosition) {\r\n    let indx = 0;\r\n    let findIndx = -1;\r\n    let checknext = true;\r\n    let itemNo = 0;\r\n\r\n    for (let index = 0; index < content.length; index++) {\r\n      const element = content[index];\r\n\r\n      const ending = indx + element.len;\r\n\r\n      if (checknext === false) {\r\n        if (element.len === 0) {\r\n          findIndx = index;\r\n          itemNo = 0;\r\n          break;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      if (cursorPosition <= ending && cursorPosition >= indx) {\r\n        findIndx = index;\r\n        itemNo = cursorPosition - indx;\r\n        checknext = false;\r\n      }\r\n\r\n      indx += element.len;\r\n    }\r\n\r\n    if (findIndx == -1) {\r\n      findIndx = content.length - 1;\r\n    }\r\n    // console.log('itemno', itemNo);\r\n\r\n    return { findIndx, itemNo };\r\n  }\r\n\r\n  updateContent(content, item, index, itemNo = 0) {\r\n    let newContent = content;\r\n    if (index >= 0 && newContent[index].len === 0) {\r\n      if (item !== null) {\r\n        newContent = update(newContent, { [index]: { $set: item } });\r\n      }\r\n    } else if (itemNo === 0) {\r\n      if (item !== null && index >= 0) {\r\n        newContent = update(newContent, { $splice: [[index, 0, item]] });\r\n      }\r\n    } else if (itemNo === content[index].len) {\r\n      if (item !== null && index >= 0) {\r\n        newContent = update(newContent, { $splice: [[index + 1, 0, item]] });\r\n      }\r\n    } else if (itemNo > 0) {\r\n      const foundElement = content[index];\r\n      beforeContent = {\r\n        id: foundElement.id,\r\n        len: itemNo,\r\n        stype: foundElement.stype,\r\n        styleList: foundElement.styleList,\r\n        tag: foundElement.tag,\r\n        text: foundElement.text.substring(0, itemNo),\r\n      };\r\n\r\n      afterContent = {\r\n        id: shortid.generate(),\r\n        len: foundElement.len - itemNo,\r\n        stype: foundElement.stype,\r\n        styleList: foundElement.styleList,\r\n        tag: foundElement.tag,\r\n        text: foundElement.text.substring(itemNo),\r\n      };\r\n\r\n      newContent = update(newContent, { [index]: { $set: beforeContent } });\r\n      newContent = update(newContent, { $splice: [[index + 1, 0, afterContent]] });\r\n      newContent = update(newContent, { $splice: [[index + 1, 0, item]] });\r\n    }\r\n\r\n    return newContent;\r\n  }\r\n\r\n    onSelectionChange = (event) => {\r\n      const { selection } = event.nativeEvent;\r\n\r\n      if ((this.justToolAdded == true\r\n            && selection.start == selection.end\r\n            && selection.end >= this.textLength\r\n      )\r\n            || (\r\n              selection.end == this.state.selection.end\r\n                && selection.start == this.state.selection.start\r\n            )\r\n            || (\r\n              this.justToolAdded == true\r\n                && this.checkKeyPressAndroid > 0\r\n            )\r\n      ) {\r\n        this.justToolAdded = false;\r\n      } else {\r\n        if (this.justToolAdded == true) {\r\n          this.justToolAdded = false;\r\n        }\r\n\r\n        if (this.androidSelectionJump !== 0) {\r\n          selection.start += this.androidSelectionJump;\r\n          selection.end += this.androidSelectionJump;\r\n          this.androidSelectionJump = 0;\r\n        }\r\n        const { upComingStype } = this;\r\n        this.beforePrevSelection = this.prevSelection;\r\n        this.prevSelection = this.state.selection;\r\n\r\n        let styles = [];\r\n        let selectedTag = '';\r\n\r\n        if (upComingStype !== null) {\r\n          if (upComingStype.sel.start === this.prevSelection.start\r\n                && upComingStype.sel.end === this.prevSelection.end) {\r\n            styles = upComingStype.stype;\r\n            selectedTag = upComingStype.tag;\r\n          } else {\r\n            this.upComingStype = null;\r\n          }\r\n        } else {\r\n          const content = this.props.items;\r\n\r\n          const res = this.findContentIndex(content, selection.end);\r\n\r\n          styles = content[res.findIndx].stype;\r\n          selectedTag = content[res.findIndx].tag;\r\n        }\r\n\r\n        if (this.avoidSelectionChangeOnFocus) {\r\n          this.justToolAdded = true;\r\n        }\r\n        this.avoidSelectionChangeOnFocus = false;\r\n        // if(this.avoidAndroidJump == true) {\r\n\r\n        //     this.avoidSelectionChangeOnFocus = true;\r\n        // }\r\n        this.avoidAndroidJump = false;\r\n\r\n        if (selection.end >= selection.start) {\r\n          this.setState({\r\n            selection,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            selection: { start: selection.end, end: selection.start },\r\n          });\r\n        }\r\n\r\n        if (this.avoidUpdateStyle != true) {\r\n          if (this.props.onSelectedStyleChanged) {\r\n            this.props.onSelectedStyleChanged(styles);\r\n          }\r\n          if (this.props.onSelectedTagChanged) {\r\n            this.props.onSelectedTagChanged(selectedTag);\r\n          }\r\n        }\r\n\r\n        this.notifyMeasureContentChanged(this.props.items);\r\n      }\r\n      this.avoidUpdateStyle = false;\r\n    }\r\n\r\n    handleChangeText = (text) => {\r\n      let recalcText = false;\r\n      const { selection } = this.state;\r\n      const { items } = this.props;\r\n\r\n      // index of items that newLine should be applied or remove\r\n\r\n      const myText = text;\r\n\r\n      // get length of current text\r\n      const txtLen = myText.length;\r\n      // get lenght of text last called by handletextchange\r\n      const prevLen = this.textLength;\r\n\r\n      const textDiff = txtLen - prevLen;\r\n      let cursorPosition = 0;\r\n      let shouldAddText = textDiff >= 0;\r\n      let shouldRemText = textDiff < 0;\r\n      let remDiff = Math.abs(textDiff);\r\n      let addDiff = Math.abs(textDiff);\r\n      let addCursorPosition = -1;\r\n\r\n      if (IS_IOS) {\r\n        if (this.prevSelection.end !== this.prevSelection.start) {\r\n          remDiff = Math.abs(this.prevSelection.end - this.prevSelection.start);\r\n          addDiff = myText.length - (this.textLength - remDiff);\r\n          if (addDiff < 0) {\r\n            remDiff += Math.abs(addDiff);\r\n            addDiff = 0;\r\n          }\r\n          shouldRemText = true;\r\n          shouldAddText = addDiff > 0;\r\n          cursorPosition = this.prevSelection.end;\r\n          addCursorPosition = this.prevSelection.start;\r\n        } else if (textDiff === 0 && this.prevSelection.end === selection.end) {\r\n          remDiff = 1;\r\n          addDiff = 1;\r\n          shouldRemText = true;\r\n          shouldAddText = addDiff > 0;\r\n          cursorPosition = this.prevSelection.end;\r\n          addCursorPosition = this.prevSelection.end - 1;\r\n        } else if (Math.abs(this.prevSelection.end - selection.end) == Math.abs(textDiff)) {\r\n          cursorPosition = this.prevSelection.end;\r\n        } else if (Math.abs(this.prevSelection.end - selection.end) + Math.abs(this.beforePrevSelection.end - this.prevSelection.end) == Math.abs(textDiff)) {\r\n          cursorPosition = this.beforePrevSelection.end;\r\n        } else {\r\n          const diff = Math.abs(textDiff) - Math.abs(this.prevSelection.end - selection.end) - Math.abs(this.beforePrevSelection.end - this.prevSelection.end);\r\n\r\n          if (this.beforePrevSelection.end + diff <= prevLen) {\r\n            cursorPosition = this.beforePrevSelection.end + diff;\r\n          } else if (this.textLength < myText.length) {\r\n            cursorPosition = this.prevSelection.end - Math.abs(textDiff);\r\n          } else {\r\n            console.log('error may occure');\r\n            cursorPosition = this.beforePrevSelection.end;\r\n          }\r\n        }\r\n      } else if (selection.end !== selection.start) {\r\n        remDiff = Math.abs(selection.end - selection.start);\r\n        addDiff = Math.abs(this.textLength - remDiff - myText.length);\r\n        shouldRemText = true;\r\n        shouldAddText = addDiff > 0;\r\n        cursorPosition = selection.end;\r\n        addCursorPosition = selection.start;\r\n      } else {\r\n        cursorPosition = selection.end;\r\n      }\r\n\r\n      let content = items;\r\n\r\n      let upComing = null;\r\n\r\n      if (IS_IOS === false\r\n            && shouldAddText === true\r\n            && text.length > cursorPosition + addDiff\r\n      ) {\r\n        const txt = text.substr(cursorPosition + addDiff, 1);\r\n        if (txt !== ' ') {\r\n          const bef = text.substring(0, cursorPosition + addDiff);\r\n          const aft = text.substring(cursorPosition + addDiff);\r\n\r\n          const lstIndx = bef.lastIndexOf(' ');\r\n          if (lstIndx > 0) {\r\n            this.AvoidAndroidIssueWhenPressSpace = 3;\r\n          } else {\r\n            this.AvoidAndroidIssueWhenPressSpace = 3;\r\n          }\r\n        }\r\n      }\r\n\r\n      let preparedText = this.oldText;\r\n      if (shouldRemText === true) {\r\n        preparedText = preparedText.substring(0, cursorPosition - remDiff) + preparedText.substring(cursorPosition);\r\n      }\r\n\r\n      if (shouldAddText === true) {\r\n        let cursor = cursorPosition;\r\n        if (shouldRemText === true) {\r\n          if (addCursorPosition >= 0) {\r\n            cursor = addCursorPosition;\r\n          }\r\n        }\r\n        const addedText = text.substring(cursor, cursor + addDiff);\r\n        preparedText = preparedText.substring(0, cursor) + addedText + preparedText.substring(cursor);\r\n      }\r\n\r\n      if (preparedText === myText) {\r\n        if (shouldRemText === true) {\r\n          const result = this.removeTextFromContent(content, cursorPosition, remDiff);\r\n\r\n          upComing = result.upComing;\r\n          content = result.content;\r\n          if (!recalcText) recalcText = result.recalcText;\r\n        }\r\n\r\n\r\n        if (shouldAddText === true) {\r\n          if (shouldRemText === true) {\r\n            if (addCursorPosition >= 0) {\r\n              cursorPosition = addCursorPosition;\r\n            }\r\n          }\r\n          const addedText = text.substring(cursorPosition, cursorPosition + addDiff);\r\n\r\n          const res = this.addTextToContent(content, cursorPosition, addedText);\r\n          content = res.content;\r\n          if (!recalcText) recalcText = res.recalcText;\r\n        }\r\n      } else {\r\n        // shoud compare with\r\n\r\n        const mydiff = this.dmp.diff_main(this.oldText, text);\r\n\r\n        let myIndex = 0;\r\n        for (let index = 0; index < mydiff.length; index++) {\r\n          const element = mydiff[index];\r\n          let result = null;\r\n          switch (element[0]) {\r\n            case 1:\r\n              result = this.addTextToContent(content, myIndex, element[1]);\r\n              content = result.content;\r\n              myIndex += element[1].length;\r\n              if (!recalcText) recalcText = result.recalcText;\r\n              break;\r\n            case -1:\r\n              myIndex += element[1].length;\r\n\r\n              result = this.removeTextFromContent(content, myIndex, element[1].length);\r\n              content = result.content;\r\n              upComing = result.upComing;\r\n              myIndex -= element[1].length;\r\n\r\n              if (!recalcText) recalcText = result.recalcText;\r\n\r\n              break;\r\n            default:\r\n              myIndex += element[1].length;\r\n              break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (recalcText === true) {\r\n        this.oldText = this.reCalculateText(content);\r\n      } else {\r\n        this.oldText = text;\r\n      }\r\n\r\n      let styles = [];\r\n      let tagg = 'body';\r\n      if (upComing === null) {\r\n        const res = this.findContentIndex(content, this.state.selection.end);\r\n        styles = content[res.findIndx].stype;\r\n        tagg = content[res.findIndx].tag;\r\n      } else {\r\n        styles = upComing.stype;\r\n        tagg = upComing.tag;\r\n      }\r\n\r\n      this.upComingStype = upComing;\r\n\r\n      this.props.onContentChanged(content);\r\n      if (this.props.onSelectedStyleChanged) {\r\n        this.props.onSelectedStyleChanged(styles);\r\n      }\r\n\r\n      if (this.props.onSelectedTagChanged) {\r\n        this.props.onSelectedTagChanged(tagg);\r\n      }\r\n\r\n      this.notifyMeasureContentChanged(content);\r\n    }\r\n\r\n\r\n    addTextToContent(content, cursorPosition, textToAdd) {\r\n      let avoidStopSelectionForIOS = false;\r\n      let recalcText = false;\r\n      const result = this.findContentIndex(content, cursorPosition);\r\n\r\n      let foundIndex = result.findIndx;\r\n      let foundItemNo = result.itemNo;\r\n\r\n      let startWithReadonly = false;\r\n\r\n      if (content[foundIndex].readOnly === true) {\r\n        if (content[foundIndex].text.length === foundItemNo) {\r\n          if (content.length > foundIndex + 1\r\n                        && !(content[foundIndex + 1].readOnly === true)\r\n                        && !(content[foundIndex + 1].NewLine === true)\r\n                        && !(this.upComingStype && this.upComingStype.sel.end === cursorPosition)\r\n          ) {\r\n            foundIndex += 1;\r\n            foundItemNo = 0;\r\n          } else if (this.upComingStype\r\n                            && this.upComingStype.sel.end === cursorPosition) {\r\n\r\n          } else {\r\n            avoidStopSelectionForIOS = true;\r\n            this.upComingStype = {\r\n              text: '',\r\n              len: 0,\r\n              sel: { start: cursorPosition, end: cursorPosition },\r\n              stype: content[foundIndex].stype,\r\n              tag: content[foundIndex].tag,\r\n              styleList: content[foundIndex].styleList,\r\n            };\r\n          }\r\n        } else {\r\n          startWithReadonly = true;\r\n        }\r\n      }\r\n\r\n      if (this.upComingStype !== null && startWithReadonly === false\r\n                && this.upComingStype.sel.end === cursorPosition) {\r\n        content = this.updateContent(content, {\r\n          id: shortid.generate(),\r\n          text: '',\r\n          len: 0,\r\n          stype: this.upComingStype.stype,\r\n          tag: this.upComingStype.tag,\r\n          styleList: this.upComingStype.styleList,\r\n        }, foundIndex, foundItemNo);\r\n\r\n        const { findIndx, itemNo } = this.findContentIndex(content, cursorPosition);\r\n        foundIndex = findIndx;\r\n        foundItemNo = itemNo;\r\n\r\n        if (IS_IOS === true\r\n                    && avoidStopSelectionForIOS === false\r\n                    && !(foundIndex === content.length - 1\r\n                        && foundItemNo === content[foundIndex].len)\r\n        ) {\r\n          this.justToolAdded = true;\r\n        }\r\n      }\r\n\r\n      this.checkKeyPressAndroid = 0;\r\n      this.textLength += textToAdd.length;\r\n\r\n      content[foundIndex].len += textToAdd.length;\r\n      content[foundIndex].text = content[foundIndex].text.substring(0, foundItemNo) + textToAdd + content[foundIndex].text.substring(foundItemNo);\r\n\r\n      const newLineIndex = content[foundIndex].text.substring(1).indexOf('\\n');\r\n      if (newLineIndex >= 0) {\r\n        const res = this.updateNewLine(content, foundIndex, newLineIndex + 1);\r\n        content = res.content;\r\n        if (!recalcText) {\r\n          recalcText = res.recalcText;\r\n        }\r\n      } else if (content[foundIndex].text.substring(0, 1) == '\\n' && content[foundIndex].NewLine != true) {\r\n        const res = this.updateNewLine(content, foundIndex, 0);\r\n        content = res.content;\r\n        if (!recalcText) {\r\n          recalcText = res.recalcText;\r\n        }\r\n      }\r\n\r\n      return { content, recalcText };\r\n    }\r\n\r\n    removeTextFromContent(content, cursorPosition, removeLength) {\r\n      let recalcText = false;\r\n      let newLineIndexs = [];\r\n      const removeIndexes = [];\r\n      let upComing = null;\r\n      const result = this.findContentIndex(content, cursorPosition);\r\n\r\n      const foundIndex = result.findIndx;\r\n      const foundItemNo = result.itemNo;\r\n\r\n      const remDiff = removeLength;\r\n\r\n      this.textLength -= remDiff;\r\n\r\n      if (foundItemNo >= remDiff) {\r\n        const txt = content[foundIndex].text;\r\n\r\n        content[foundIndex].len -= remDiff;\r\n        content[foundIndex].text = txt.substring(0, foundItemNo - remDiff) + txt.substring(foundItemNo, txt.length);\r\n\r\n        if (content[foundIndex].NewLine === true) {\r\n          newLineIndexs.push(foundIndex);\r\n        }\r\n        if (content[foundIndex].readOnly === true) {\r\n          removeIndexes.push(content[foundIndex].id);\r\n        }\r\n\r\n        if (content[foundIndex].len === 0 && content.length > 1) {\r\n          upComing = {\r\n            len: 0,\r\n            text: '',\r\n            stype: content[foundIndex].stype,\r\n            styleList: content[foundIndex].styleList,\r\n            tag: content[foundIndex].tag,\r\n            sel: {\r\n              start: cursorPosition - 1,\r\n              end: cursorPosition - 1,\r\n            },\r\n          };\r\n\r\n          removeIndexes.push(content[foundIndex].id);\r\n        } else if (foundItemNo === 1) {\r\n          upComing = {\r\n            len: 0,\r\n            text: '',\r\n            stype: content[foundIndex].stype,\r\n            styleList: content[foundIndex].styleList,\r\n            tag: content[foundIndex].tag,\r\n            sel: {\r\n              start: cursorPosition - 1,\r\n              end: cursorPosition - 1,\r\n            },\r\n          };\r\n        }\r\n      } else {\r\n        let rem = remDiff - (foundItemNo);\r\n\r\n        content[foundIndex].len = content[foundIndex].len - foundItemNo;\r\n        content[foundIndex].text = content[foundIndex].text.substring(foundItemNo);\r\n\r\n        if (rem > 0) {\r\n          for (var i = foundIndex - 1; i >= 0; i--) {\r\n            if (content[i].NewLine === true) {\r\n              newLineIndexs.push(i);\r\n            }\r\n\r\n            if (content[i].len >= rem) {\r\n              content[i].text = content[i].text.substring(0, content[i].len - rem);\r\n              content[i].len -= rem;\r\n              break;\r\n            } else {\r\n              rem -= content[i].len;\r\n              content[i].len = 0;\r\n              content[i].text = '';\r\n            }\r\n          }\r\n        }\r\n\r\n        for (var i = content.length - 1; i >= foundIndex; i--) {\r\n          if (content[i].len === 0) {\r\n            removeIndexes.push(content[i].id);\r\n          }\r\n        }\r\n      }\r\n\r\n      // ///// fix //////\r\n\r\n      newLineIndexs = newLineIndexs.sort((a, b) => b - a);\r\n\r\n      for (let i = 0; i < newLineIndexs.length; i++) {\r\n        const index = newLineIndexs[i];\r\n        const newLineIndex = content[index].text.indexOf('\\n');\r\n\r\n        if (newLineIndex < 0) {\r\n          if (index > 0) {\r\n            content[index].NewLine = false;\r\n            beforeTag = content[index - 1].tag;\r\n            const res = this.changeToTagIn(content, content[index - 1].tag, index, false);\r\n            content = res.content;\r\n            if (!recalcText) recalcText = res.recalcText;\r\n          } else if (removeIndexes.indexOf(content[index].id) >= 0) {\r\n            const tagg = content[index].tag;\r\n            if (tagg == 'ul' || tagg === 'ol') {\r\n              const res = this.changeToTagIn(content, 'body', 0, false);\r\n              content = res.content;\r\n              if (!recalcText) recalcText = res.recalcText;\r\n            }\r\n            if (content.length > 1) {\r\n              content[index + 1].NewLine = true;\r\n            } else {\r\n\r\n            }\r\n          }\r\n        } else if (removeIndexes.indexOf(content[index].id) >= 0) {\r\n          content[index].NewLine = false;\r\n          content[index].readOnly = false;\r\n          if (index > 0) {\r\n            beforeTag = content[index - 1].tag;\r\n\r\n            const res = this.changeToTagIn(content, content[index - 1].tag, index, false);\r\n            content = res.content;\r\n            if (!recalcText) recalcText = res.recalcText;\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      for (let i = 0; i < removeIndexes.length; i++) {\r\n        const remIndex = content.findIndex(x => x.id == removeIndexes[i]);\r\n        if (remIndex < 0) continue;\r\n\r\n        if (content[remIndex].len > 0) {\r\n          if (IS_IOS !== true) {\r\n            this.androidSelectionJump -= (content[remIndex].len);\r\n          }\r\n          this.textLength -= content[remIndex].len;\r\n        }\r\n\r\n        if (remIndex == 0 && (content.length == 1 || (content.length > 1 && content[1].NewLine == true && content[0].len == 0))) {\r\n          content[0].text = '';\r\n          content[0].len = 0;\r\n          content[0].readOnly = false;\r\n        } else {\r\n          content = content.filter(item => item.id != removeIndexes[i]);\r\n        }\r\n      }\r\n\r\n      return {\r\n        content,\r\n        upComing,\r\n        recalcText,\r\n      };\r\n    }\r\n\r\n    updateNewLine(content, index, itemNo) {\r\n      let newContent = content;\r\n      let recalcText = false;\r\n      const prevTag = newContent[index].tag;\r\n      let isPrevList = false;\r\n\r\n      if (prevTag === 'ol' || prevTag == 'ul') {\r\n        isPrevList = true;\r\n        if (IS_IOS === false) {\r\n          // this.avoidAndroidJump = true;\r\n        }\r\n      }\r\n\r\n      const isPrevHeading = prevTag === 'heading' || prevTag === 'title';\r\n\r\n      const foundElement = newContent[index];\r\n\r\n      if (itemNo === 0) {\r\n        newContent[index].NewLine = true;\r\n        const res = this.changeToTagIn(newContent, isPrevList ? prevTag : 'body', index, true);\r\n        newContent = res.content;\r\n        if (!recalcText) recalcText = res.recalcText;\r\n      } else if (itemNo === foundElement.len - 1) {\r\n        newContent[index].len = foundElement.len - 1;\r\n        newContent[index].text = foundElement.text.substring(0, foundElement.text.length - 1);\r\n\r\n        newContent[index].NewLine = newContent[index].text.indexOf('\\n') === 0 || index === 0;\r\n        if (newContent.length > index + 1 && newContent[index + 1].NewLine !== true) {\r\n          newContent[index + 1].len += 1;\r\n          newContent[index + 1].NewLine = true;\r\n          newContent[index + 1].text = `\\n${newContent[index + 1].text}`;\r\n          const res = this.changeToTagIn(newContent, isPrevList ? prevTag : 'body', index + 1, true);\r\n          newContent = res.content;\r\n          if (!recalcText) recalcText = res.recalcText;\r\n        } else {\r\n          beforeContent = {\r\n            id: shortid.generate(),\r\n            len: 1,\r\n            stype: isPrevHeading === true ? [] : newContent[index].stype,\r\n            styleList: [],\r\n            tag: 'body',\r\n            text: '\\n',\r\n            NewLine: true,\r\n          };\r\n          beforeContent.styleList = StyleSheet.flatten(this.convertStyleList(update(beforeContent.stype, { $push: [beforeContent.tag] })));\r\n\r\n          newContent = update(newContent, { $splice: [[index + 1, 0, beforeContent]] });\r\n          if (isPrevList === true) {\r\n            const res = this.changeToTagIn(newContent, prevTag, index + 1, true);\r\n            newContent = res.content;\r\n            if (!recalcText) recalcText = res.recalcText;\r\n          }\r\n        }\r\n      } else {\r\n        beforeContent = {\r\n          id: foundElement.id,\r\n          len: itemNo,\r\n          stype: foundElement.stype,\r\n          styleList: foundElement.styleList,\r\n          tag: foundElement.tag,\r\n          text: foundElement.text.substring(0, itemNo),\r\n          NewLine: foundElement.text.substring(0, itemNo).indexOf('\\n') === 0 || index === 0,\r\n        };\r\n\r\n        afterContent = {\r\n          id: shortid.generate(),\r\n          len: foundElement.len - itemNo,\r\n          text: foundElement.text.substring(itemNo, foundElement.len),\r\n          stype: foundElement.stype,\r\n          styleList: foundElement.styleList,\r\n          tag: isPrevList ? prevTag : 'body',\r\n          NewLine: true,\r\n        };\r\n\r\n        newContent = update(newContent, { [index]: { $set: beforeContent } });\r\n        newContent = update(newContent, { $splice: [[index + 1, 0, afterContent]] });\r\n\r\n        const res = this.changeToTagIn(newContent, isPrevList ? prevTag : 'body', index + 1, true);\r\n        newContent = res.content;\r\n        if (!recalcText) recalcText = res.recalcText;\r\n      }\r\n\r\n      return { content: newContent, recalcText };\r\n    }\r\n\r\n    createUpComing(start, end, tag, stype) {\r\n      this.upComingStype = {\r\n        sel: { start, end },\r\n        tag,\r\n        text: '',\r\n        stype,\r\n        styleList: StyleSheet.flatten(this.convertStyleList(update(stype, { $push: [tag] }))),\r\n      };\r\n    }\r\n\r\n    addToUpComming(toolType) {\r\n      if (this.upComingStype) {\r\n        const indexOfUpToolType = this.upComingStype.stype.indexOf(toolType);\r\n        const newUpStype = this.upComingStype ? (indexOfUpToolType != -1 ? update(this.upComingStype.stype, { $splice: [[indexOfUpToolType, 1]] })\r\n          : update(this.upComingStype.stype, { $push: [toolType] })) : [toolType];\r\n        this.upComingStype.stype = newUpStype;\r\n        this.upComingStype.styleList = StyleSheet.flatten(this.convertStyleList(update(newUpStype, { $push: [this.upComingStype.tag] })));\r\n      }\r\n    }\r\n\r\n    applyStyle(toolType) {\r\n      const { selection: { start, end } } = this.state;\r\n      const { items } = this.props;\r\n\r\n      const newCollection = [];\r\n\r\n      const content = items;\r\n      let indx = 0;\r\n      let upComingAdded = false;\r\n\r\n      for (let i = 0; i < content.length; i++) {\r\n        const {\r\n          id, len, stype, tag, text, styleList,\r\n        } = content[i];\r\n        const NewLine = content[i].NewLine ? content[i].NewLine : false;\r\n        const readOnly = content[i].readOnly ? content[i].readOnly : false;\r\n\r\n        const indexOfToolType = stype.indexOf(toolType);\r\n        const newStype = (indexOfToolType != -1)\r\n          ? update(stype, { $splice: [[indexOfToolType, 1]] })\r\n          : update(stype, { $push: [toolType] });\r\n\r\n        const newStyles = StyleSheet.flatten(this.convertStyleList(update(newStype, { $push: [tag] })));\r\n\r\n        const from = indx;\r\n        indx += len;\r\n        const to = indx;\r\n\r\n        if (readOnly) {\r\n          newCollection.push({\r\n            id,\r\n            text,\r\n            len: to - from,\r\n            tag,\r\n            stype,\r\n            styleList,\r\n            NewLine,\r\n            readOnly,\r\n          });\r\n\r\n          if (i === content.length - 1 && start === end && end === to) {\r\n            if (upComingAdded === false) {\r\n              if (this.upComingStype === null\r\n                                    || (this.upComingStype.sel.start === start && this.upComingStype.sel.end === end) == false) {\r\n                this.createUpComing(start, end, tag, newStype);\r\n              } else {\r\n                this.addToUpComming(toolType);\r\n              }\r\n\r\n              upComingAdded = true;\r\n            }\r\n          }\r\n        } else if ((start >= from && start < to) && (end >= from && end < to)) {\r\n          if (start !== end) {\r\n            if (start !== from) {\r\n              newCollection.push({\r\n                id,\r\n                text: text.substring(0, start - from),\r\n                len: start - from,\r\n                stype,\r\n                styleList,\r\n                tag,\r\n                NewLine,\r\n                readOnly,\r\n              });\r\n            }\r\n\r\n            newCollection.push({\r\n              id: shortid.generate(),\r\n              text: text.substring(start - from, end - from),\r\n              len: end - start,\r\n              tag,\r\n              stype: newStype,\r\n              styleList: newStyles,\r\n            });\r\n\r\n            if (end !== to) {\r\n              newCollection.push({\r\n                id: shortid.generate(),\r\n                text: text.substring(end - from, to - from),\r\n                len: to - end,\r\n                tag,\r\n                stype,\r\n                styleList,\r\n              });\r\n            }\r\n          } else {\r\n            newCollection.push({\r\n              id,\r\n              text,\r\n              len: to - from,\r\n              tag,\r\n              stype,\r\n              styleList,\r\n              NewLine,\r\n              readOnly,\r\n            });\r\n\r\n            if (upComingAdded === false) {\r\n              if (this.upComingStype === null\r\n                                    || (this.upComingStype.sel.start === start && this.upComingStype.sel.end === end) == false) {\r\n                this.createUpComing(start, end, tag, newStype);\r\n              } else {\r\n                this.addToUpComming(toolType);\r\n              }\r\n              upComingAdded = true;\r\n            }\r\n          }\r\n        } else if (start >= from && start < to) {\r\n          if (start !== from) {\r\n            newCollection.push({\r\n              id,\r\n              len: start - from,\r\n              text: text.substring(0, start - from),\r\n              stype,\r\n              styleList,\r\n              tag,\r\n              NewLine,\r\n              readOnly,\r\n            });\r\n          }\r\n\r\n          newCollection.push({\r\n            id: shortid.generate(),\r\n            len: to - start,\r\n            text: text.substring(start - from, to - from),\r\n            tag,\r\n            stype: newStype,\r\n            styleList: newStyles,\r\n          });\r\n        } else if (end > from && end <= to) {\r\n          if (start === end) {\r\n            newCollection.push({\r\n              id,\r\n              text,\r\n              len: to - from,\r\n              stype,\r\n              styleList,\r\n              tag,\r\n              NewLine,\r\n              readOnly,\r\n\r\n            });\r\n\r\n            if (upComingAdded === false) {\r\n              if (this.upComingStype === null || (this.upComingStype.sel.start === start && this.upComingStype.sel.end === end) == false) {\r\n                this.createUpComing(start, end, tag, newStype);\r\n              } else {\r\n                this.addToUpComming(toolType);\r\n              }\r\n              upComingAdded = true;\r\n            }\r\n          } else {\r\n            newCollection.push({\r\n              id: shortid.generate(),\r\n              text: text.substring(0, end - from),\r\n              len: end - from,\r\n              tag,\r\n              NewLine,\r\n              stype: newStype,\r\n              styleList: newStyles,\r\n            });\r\n\r\n            if (end !== to) {\r\n              newCollection.push({\r\n                id,\r\n                text: text.substring(end - from, to - from),\r\n                len: to - end,\r\n                tag,\r\n                stype,\r\n                styleList,\r\n                readOnly,\r\n\r\n              });\r\n            }\r\n          }\r\n        } else if (from === to && start === from && end === to) {\r\n          newCollection.push({\r\n            id,\r\n            text,\r\n            len: to - from,\r\n            tag,\r\n            stype,\r\n            styleList,\r\n            NewLine,\r\n            readOnly,\r\n          });\r\n\r\n          if (upComingAdded === false) {\r\n            if (this.upComingStype === null || (this.upComingStype.sel.start === start && this.upComingStype.sel.end === end) == false) {\r\n              this.createUpComing(start, end, tag, newStype);\r\n            } else {\r\n              this.addToUpComming(toolType);\r\n            }\r\n\r\n            upComingAdded = true;\r\n          }\r\n        } else if ((from >= start && from <= end) && (to >= start && to <= end)) {\r\n          newCollection.push({\r\n            id,\r\n            text,\r\n            len: to - from,\r\n            tag,\r\n            stype: newStype,\r\n            styleList: newStyles,\r\n            NewLine,\r\n            readOnly,\r\n\r\n          });\r\n        } else {\r\n          newCollection.push({\r\n            id,\r\n            text,\r\n            len: to - from,\r\n            tag,\r\n            stype,\r\n            styleList,\r\n            NewLine,\r\n            readOnly,\r\n\r\n          });\r\n        }\r\n      }\r\n\r\n      const res = this.findContentIndex(newCollection, this.state.selection.end);\r\n\r\n      let styles = [];\r\n      if (this.upComingStype != null) {\r\n        styles = this.upComingStype.stype;\r\n      } else {\r\n        styles = newCollection[res.findIndx].stype;\r\n      }\r\n\r\n      this.justToolAdded = start !== end;\r\n      this.props.onContentChanged(newCollection);\r\n      if (this.props.onSelectedStyleChanged) this.props.onSelectedStyleChanged(styles);\r\n    }\r\n\r\n    reCalculateText = (content) => {\r\n      let text = '';\r\n      for (let i = 0; i < content.length; i++) {\r\n        text += content[i].text;\r\n      }\r\n      return text;\r\n    }\r\n\r\n    applyTag(tagType) {\r\n      const { items } = this.props;\r\n      const { selection } = this.state;\r\n\r\n      const res = this.findContentIndex(items, selection.end);\r\n      const { content, recalcText } = this.changeToTagIn(items, tagType, res.findIndx);\r\n\r\n      if (recalcText == true) {\r\n        this.oldText = this.reCalculateText(content);\r\n      }\r\n\r\n      if (this.props.onContentChanged) {\r\n        this.props.onContentChanged(content);\r\n      }\r\n\r\n      if (this.props.onSelectedTagChanged) {\r\n        this.props.onSelectedTagChanged(tagType);\r\n      }\r\n\r\n      this.notifyMeasureContentChanged(content);\r\n    }\r\n\r\n    notifyMeasureContentChanged(content) {\r\n      if (this.props.onMeasureContentChanged) {\r\n        try {\r\n          setTimeout(() => {\r\n            const res = this.findContentIndex(content, this.state.selection.end);\r\n\r\n            const measureArray = content.slice(0, res.findIndx);\r\n            measureArray.push({\r\n              id: shortid.generate(),\r\n              len: res.itemNo,\r\n              stype: content[res.findIndx].stype,\r\n              styleList: content[res.findIndx].styleList,\r\n              text: content[res.findIndx].text.substring(0, res.itemNo + 1),\r\n              tag: content[res.findIndx].tag,\r\n              NewLine: content[res.findIndx].NewLine,\r\n              readOnly: content[res.findIndx].readOnly,\r\n            });\r\n            this.props.onMeasureContentChanged(measureArray);\r\n          }, 100);\r\n        } catch (error) {\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    changeToTagIn(items, tag, index, fromTextChange = false) {\r\n      let recalcText = false;\r\n      const needBold = tag === 'heading' || tag === 'title';\r\n      let content = items;\r\n\r\n      for (let i = index + 1; i < content.length; i++) {\r\n        if (content[i].NewLine === true) {\r\n          break;\r\n        } else {\r\n          if (needBold === true && content[i].stype.indexOf('bold') == -1) {\r\n            content[i].stype = update(content[i].stype, { $push: ['bold'] });\r\n          } else if (needBold === false\r\n                    && (content[i].tag === 'heading' || content[i].tag === 'title')\r\n                    && content[i].stype.indexOf('bold') != -1) {\r\n            content[i].stype = content[i].stype.filter(typ => typ != 'bold');\r\n          }\r\n          content[i].tag = tag;\r\n          content[i].styleList = StyleSheet.flatten(this.convertStyleList(update(content[i].stype, { $push: [content[i].tag] })));\r\n        }\r\n      }\r\n      let shouldReorderList = false;\r\n\r\n      for (let i = index; i >= 0; i--) {\r\n        if (content[i].NewLine === true && content[i].tag === 'ol') {\r\n          shouldReorderList = true;\r\n        }\r\n\r\n        if (needBold === true\r\n                // (content[i].tag === 'heading' || content[i].tag === 'title') &&\r\n                && content[i].stype.indexOf('bold') == -1) {\r\n          content[i].stype = update(content[i].stype, { $push: ['bold'] });\r\n        } else if (needBold === false\r\n                && (content[i].tag === 'heading' || content[i].tag === 'title')\r\n                && content[i].stype.indexOf('bold') != -1) {\r\n          content[i].stype = content[i].stype.filter(typ => typ != 'bold');\r\n        }\r\n\r\n        content[i].tag = tag;\r\n        content[i].styleList = StyleSheet.flatten(this.convertStyleList(update(content[i].stype, { $push: [content[i].tag] })));\r\n\r\n        if (content[i].NewLine === true) {\r\n          recalcText = true;\r\n          if (tag === 'ul') {\r\n            if (content[i].readOnly === true) {\r\n              this.textLength -= content[i].len;\r\n              if (i === 0) {\r\n                content[i].text = '\\u2022 ';\r\n                content[i].len = 2;\r\n              } else {\r\n                content[i].text = '\\n\\u2022 ';\r\n                content[i].len = 3;\r\n              }\r\n              this.textLength += content[i].len;\r\n\r\n              if (fromTextChange === true && IS_IOS !== true) {\r\n                this.androidSelectionJump += content[i].len;\r\n              }\r\n            } else {\r\n              if (content[i].len > (i === 0 ? 0 : 1)) {\r\n                content[i].text = content[i].text.substring((i === 0 ? 0 : 1));\r\n                content[i].len = content[i].len - (i === 0 ? 0 : 1);\r\n                content[i].NewLine = false;\r\n                listContent = {\r\n                  id: shortid.generate(),\r\n                  len: i === 0 ? 2 : 3,\r\n                  stype: [],\r\n                  text: i === 0 ? '\\u2022 ' : '\\n\\u2022 ',\r\n                  tag: 'ul',\r\n                  NewLine: true,\r\n                  readOnly: true,\r\n                };\r\n                content = update(content, { $splice: [[i, 0, listContent]] });\r\n              } else {\r\n                content[i].text = i === 0 ? '\\u2022 ' : '\\n\\u2022 ';\r\n                content[i].len = i === 0 ? 2 : 3;\r\n                content[i].readOnly = true;\r\n                content[i].stype = [];\r\n                content[i].styleList = [];\r\n              }\r\n              this.textLength += 2;\r\n              if (fromTextChange === true && IS_IOS !== true) {\r\n                this.androidSelectionJump += 2;\r\n              }\r\n\r\n              // }\r\n            }\r\n          } else if (tag === 'ol') {\r\n            shouldReorderList = true;\r\n            if (content[i].readOnly === true) {\r\n              this.textLength -= content[i].len;\r\n              if (i === 0) {\r\n                content[i].text = '1- ';\r\n                content[i].len = 3;\r\n              } else {\r\n                content[i].text = '\\n1- ';\r\n                content[i].len = 4;\r\n              }\r\n              this.textLength += content[i].len;\r\n              if (fromTextChange === true && IS_IOS !== true) {\r\n                this.androidSelectionJump += content[i].len;\r\n              }\r\n            } else {\r\n              if (content[i].len > (i === 0 ? 0 : 1)) {\r\n                content[i].text = content[i].text.substring((i === 0 ? 0 : 1));\r\n                content[i].len = content[i].len - (i === 0 ? 0 : 1);\r\n                content[i].NewLine = false;\r\n                listContent = {\r\n                  id: shortid.generate(),\r\n                  len: i === 0 ? 3 : 4,\r\n                  stype: [],\r\n                  text: i === 0 ? '1- ' : '\\n1- ',\r\n                  tag: 'ol',\r\n                  NewLine: true,\r\n                  readOnly: true,\r\n                };\r\n                content = update(content, { $splice: [[i, 0, listContent]] });\r\n              } else {\r\n                content[i].text = i === 0 ? '1- ' : '\\n1- ';\r\n                content[i].len = i === 0 ? 3 : 4;\r\n                content[i].readOnly = true;\r\n                content[i].stype = [];\r\n              }\r\n\r\n              this.textLength += 3;\r\n              if (fromTextChange === true && IS_IOS !== true) {\r\n                this.androidSelectionJump += 3;\r\n              }\r\n            }\r\n          } else if (content[i].readOnly === true) {\r\n            if (i !== 0) {\r\n              this.textLength -= (content[i].len - 1);\r\n              content[i].text = '\\n';\r\n              content[i].len = 1;\r\n              content[i].readOnly = false;\r\n            } else {\r\n              this.textLength -= content[i].len;\r\n              if (content.length > 1 && !(content[1].NewLine === true)) {\r\n                content = update(content, { $splice: [[i, 1]] });\r\n                content[0].NewLine = true;\r\n              } else {\r\n                content[0].NewLine = true;\r\n                content[0].readOnly = false;\r\n                content[0].len = 0;\r\n                content[0].text = '';\r\n              }\r\n            }\r\n          }\r\n\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n\r\n      if (shouldReorderList === true) {\r\n        recalcText = true;\r\n        content = this.reorderList(content);\r\n      }\r\n\r\n      return { content, recalcText };\r\n    }\r\n\r\n    reorderList(items) {\r\n      let listNo = 1;\r\n      for (let i = 0; i < items.length; i++) {\r\n        const element = items[i];\r\n        if (element.NewLine === true && element.tag === 'ol') {\r\n          this.textLength -= element.len;\r\n          items[i].text = i === 0 ? (`${listNo}- `) : (`\\n${listNo}- `);\r\n          items[i].len = items[i].text.length;\r\n          this.textLength += items[i].len;\r\n          listNo += 1;\r\n        } else if (element.tag !== 'ol') {\r\n          listNo = 1;\r\n        }\r\n      }\r\n      return items;\r\n    }\r\n\r\n    convertStyleList(stylesArr) {\r\n      const styls = [];\r\n      (stylesArr).forEach((element) => {\r\n        const styleObj = this.txtToStyle(element);\r\n        if (styleObj !== null) styls.push(styleObj);\r\n      });\r\n      return styls;\r\n    }\r\n\r\n    txtToStyle = (styleName) => {\r\n      const styles = this.props.styleList;\r\n      return styles[styleName];\r\n    }\r\n\r\n    forceSelectedStyles() {\r\n      const content = this.props.items;\r\n      const { selection } = this.state;\r\n\r\n      const { findIndx } = this.findContentIndex(content, selection.end);\r\n      const styles = content[findIndx].stype;\r\n      const selectedTag = content[findIndx].tag;\r\n\r\n      if (this.props.onSelectedStyleChanged) {\r\n        this.props.onSelectedStyleChanged(styles);\r\n      }\r\n      if (this.props.onSelectedTagChanged) {\r\n        this.props.onSelectedTagChanged(selectedTag);\r\n      }\r\n    }\r\n\r\n    onFocus = (e) => {\r\n      if (this.props.onFocus) this.props.onFocus(e);\r\n    }\r\n\r\n    onBlur = (e) => {\r\n      if (this.props.onBlur) this.props.onBlur(e);\r\n    }\r\n\r\n    avoidSelectionChangeOnFocus() {\r\n      this.avoidSelectionChangeOnFocus = true;\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n      this.checkKeyPressAndroid += 1;\r\n      if (e.nativeEvent.key === 'Backspace' && this.state.selection.start === 0\r\n        && this.state.selection.end === 0) {\r\n        if (this.props.onConnectToPrevClicked) this.props.onConnectToPrevClicked();\r\n      }\r\n    }\r\n\r\n    handleContentSizeChange = (event) => {\r\n      if (this.props.onContentSizeChange) this.props.onContentSizeChange(event);\r\n    }\r\n\r\n    render() {\r\n      const {\r\n        items, foreColor, style, returnKeyType, styleList\r\n      } = this.props;\r\n      const { selection } = this.state;\r\n      const color = foreColor || '#000';\r\n      const fontSize =styleList && styleList.body && styleList.body.fontSize ? styleList.body.fontSize : 20;\r\n      \r\n      return (\r\n        <TextInput\r\n          underlineColorAndroid=\"rgba(0,0,0,0)\"\r\n          onSelectionChange={this.onSelectionChange}\r\n          multiline\r\n          style={[{\r\n            color,\r\n            fontSize: fontSize,\r\n            paddingTop: 5,\r\n            paddingBottom: 5,\r\n            paddingLeft: 2,\r\n            paddingRight: 2,\r\n            textAlignVertical: 'top',\r\n          }, style || {}]}\r\n          scrollEnabled={false}\r\n          returnKeyType={returnKeyType || 'next'}\r\n          keyboardType=\"default\"\r\n          ref={component => this.textInput = component}\r\n          onChangeText={this.handleChangeText}\r\n          onKeyPress={this.handleKeyDown}\r\n          selection={selection}\r\n          onFocus={this.onFocus}\r\n          onBlur={this.onBlur}\r\n          onContentSizeChange={this.handleContentSizeChange}\r\n\t\t      placeholder={this.props.placeholder}\r\n        >\r\n          {\r\n              _.map(items, item => (\r\n                <CNStyledText key={item.id} style={item.styleList} text={item.text} />\r\n              ))\r\n            }\r\n        </TextInput>\r\n      );\r\n    }\r\n\r\n    splitItems() {\r\n      const { selection } = this.state;\r\n      const { items } = this.props;\r\n      const content = items;\r\n      const result = this.findContentIndex(content, selection.end);\r\n      let beforeContent = [];\r\n      let afterContent = [];\r\n\r\n      for (let i = 0; i < result.findIndx; i++) {\r\n        const element = content[i];\r\n        beforeContent.push(element);\r\n      }\r\n\r\n      const foundElement = content[result.findIndx];\r\n      if (result.itemNo != 0) {\r\n        beforeContent.push({\r\n          id: foundElement.id,\r\n          text: foundElement.text.substring(0, result.itemNo),\r\n          len: result.itemNo,\r\n          stype: foundElement.stype,\r\n          styleList: foundElement.styleList,\r\n          tag: foundElement.tag,\r\n          NewLine: foundElement.NewLine,\r\n          readOnly: foundElement.readOnly,\r\n        });\r\n      }\r\n\r\n      if (result.itemNo !== foundElement.len) {\r\n        afterContent.push({\r\n          id: (result.itemNo === 0) ? foundElement.id : shortid.generate(),\r\n          text: foundElement.text.substring(result.itemNo, foundElement.len),\r\n          len: foundElement.len - result.itemNo,\r\n          stype: foundElement.stype,\r\n          styleList: foundElement.styleList,\r\n          tag: foundElement.tag,\r\n          NewLine: true,\r\n          readOnly: foundElement.readOnly,\r\n        });\r\n      }\r\n\r\n      for (let i = result.findIndx + 1; i < content.length; i++) {\r\n        const element = content[i];\r\n        afterContent.push(element);\r\n      }\r\n      beforeContent = this.reorderList(beforeContent);\r\n      afterContent = this.reorderList(afterContent);\r\n\r\n      return {\r\n        before: beforeContent,\r\n        after: afterContent,\r\n      };\r\n    }\r\n\r\n    focus(selection = null) {\r\n      this.textInput.focus();\r\n\r\n      if (selection != null && selection.start && selection.end) {\r\n        setTimeout(() => {\r\n          this.setState({\r\n            selection,\r\n          });\r\n        }, 300);\r\n      }\r\n    }\r\n}\r\n\r\nexport default CNTextInput;\r\n"]},"metadata":{},"sourceType":"module"}