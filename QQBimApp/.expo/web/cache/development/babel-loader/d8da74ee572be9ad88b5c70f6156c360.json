{"ast":null,"code":"import update from 'immutability-helper';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar _require = require('xmldom'),\n    DOMParser = _require.DOMParser;\n\nvar _require2 = require('xmldom'),\n    XMLSerializer = _require2.XMLSerializer;\n\nvar shortid = require('shortid');\n\nexport function convertToHtmlString(contents) {\n  var styleList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var availableStyles = styleList == null ? defaultStyles : styleList;\n  var myDoc = new DOMParser().parseFromString('<div></div>', 'text/xml');\n\n  for (var i = 0; i < contents.length; i++) {\n    var input = contents[i];\n\n    if (input.component === 'text') {\n      var element = null;\n      var parent = null;\n      var olStarted = false;\n      var ulStarted = false;\n\n      for (var j = 0; j < input.content.length; j++) {\n        var item = input.content[j];\n        var isBold = item.stype.indexOf('bold') > -1;\n        var isItalic = item.stype.indexOf('italic') > -1;\n        var isUnderLine = item.stype.indexOf('underline') > -1;\n        var isOverline = item.stype.indexOf('lineThrough') > -1;\n        var isBlue = item.stype.indexOf('blue') > -1;\n        var isRed = item.stype.indexOf('red') > -1;\n        var isGreen = item.stype.indexOf('green') > -1;\n        var isBlueMarker = item.stype.indexOf('blue_hl') > -1;\n        var isGreenMarker = item.stype.indexOf('green_hl') > -1;\n        var isPinkMarker = item.stype.indexOf('pink_hl') > -1;\n        var isPurpleMarker = item.stype.indexOf('purple_hl') > -1;\n        var isYellowMarker = item.stype.indexOf('yellow_hl') > -1;\n        var isOrangeMarker = item.stype.indexOf('orange_hl') > -1;\n        var tag = '';\n\n        switch (item.tag) {\n          case 'heading':\n            tag = 'h3';\n            break;\n\n          case 'title':\n            tag = 'h1';\n            break;\n\n          case 'body':\n            tag = 'p';\n            break;\n\n          case 'ol':\n            tag = 'ol';\n            break;\n\n          case 'ul':\n            tag = 'ul';\n            break;\n\n          default:\n            tag = 'p';\n            break;\n        }\n\n        var styles = '';\n        styles += isBold ? 'font-weight: bold;' : '';\n        styles += isItalic ? 'font-style: italic;' : '';\n        styles += isOverline ? 'text-decoration: line-through;' : '';\n        styles += isUnderLine ? 'text-decoration: underline;' : '';\n        styles += isBlue ? \"color: \" + availableStyles.blue.color + \";\" : '';\n        styles += isRed ? \"color: \" + availableStyles.red.color + \";\" : '';\n        styles += isGreen ? \"color: \" + availableStyles.green.color + \";\" : '';\n        styles += isBlueMarker ? \"background-color: \" + availableStyles.blue_hl.backgroundColor + \";\" : '';\n        styles += isGreenMarker ? \"background-color: \" + availableStyles.green_hl.backgroundColor + \";\" : '';\n        styles += isPinkMarker ? \"background-color: \" + availableStyles.pink_hl.backgroundColor + \";\" : '';\n        styles += isPurpleMarker ? \"background-color: \" + availableStyles.purple_hl.backgroundColor + \";\" : '';\n        styles += isYellowMarker ? \"background-color: \" + availableStyles.yellow_hl.backgroundColor + \";\" : '';\n        styles += isOrangeMarker ? \"background-color: \" + availableStyles.orange_hl.backgroundColor + \";\" : '';\n\n        if (item.NewLine == true || j == 0) {\n          element = myDoc.createElement(tag);\n\n          if (tag === 'ol') {\n            if (olStarted !== true) {\n              olStarted = true;\n              parent = myDoc.createElement(tag);\n              myDoc.documentElement.appendChild(parent);\n            }\n\n            ulStarted = false;\n            element = myDoc.createElement('li');\n            parent.appendChild(element);\n          } else if (tag === 'ul') {\n            if (ulStarted !== true) {\n              ulStarted = true;\n              parent = myDoc.createElement(tag);\n              myDoc.documentElement.appendChild(parent);\n            }\n\n            olStarted = false;\n            element = myDoc.createElement('li');\n            parent.appendChild(element);\n          } else {\n            olStarted = false;\n            ulStarted = false;\n            element = myDoc.createElement(tag);\n            myDoc.documentElement.appendChild(element);\n          }\n        }\n\n        if (item.readOnly === true) {} else {\n          var child = myDoc.createElement('span');\n\n          if (item.NewLine === true && j != 0) {\n            child.appendChild(myDoc.createTextNode(item.text.substring(1)));\n          } else {\n            child.appendChild(myDoc.createTextNode(item.text));\n          }\n\n          if (styles.length > 0) {\n            child.setAttribute('style', styles);\n          }\n\n          element.appendChild(child);\n        }\n      }\n    } else if (input.component === 'image') {\n      element = myDoc.createElement('img');\n      element.setAttribute('src', input.url);\n      element.setAttribute('width', input.size.width);\n      element.setAttribute('height', input.size.height);\n\n      if (input.imageId) {\n        element.setAttribute('data-id', input.imageId);\n      }\n\n      myDoc.documentElement.appendChild(element);\n    }\n  }\n\n  return new XMLSerializer().serializeToString(myDoc);\n}\nexport function convertToObject(htmlString) {\n  var styleList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var availableStyles = styleList == null ? defaultStyles : styleList;\n  var doc = new DOMParser().parseFromString(htmlString, 'text/xml');\n  var contents = [];\n  var item = null;\n\n  for (var i = 0; i < doc.documentElement.childNodes.length; i++) {\n    var element = doc.documentElement.childNodes[i];\n    var tag = '';\n\n    switch (element.nodeName) {\n      case 'h1':\n        tag = 'title';\n        break;\n\n      case 'h3':\n        tag = 'heading';\n        break;\n\n      case 'p':\n        tag = 'body';\n        break;\n\n      case 'img':\n        tag = 'image';\n        break;\n\n      case 'ul':\n        tag = 'ul';\n        break;\n\n      case 'ol':\n        tag = 'ol';\n        break;\n\n      default:\n        break;\n    }\n\n    if (tag === 'image') {\n      if (item != null) {\n        contents = update(contents, {\n          $push: [item]\n        });\n        item = null;\n      }\n\n      var url = '';\n      var imageId = null;\n      var size = {};\n\n      if (element.hasAttribute('src') === true) {\n        url = element.getAttribute('src');\n      }\n\n      if (element.hasAttribute('data-id') === true) {\n        imageId = element.getAttribute('data-id');\n      }\n\n      if (element.hasAttribute('width') === true) {\n        try {\n          size.width = parseInt(element.getAttribute('width'));\n        } catch (error) {}\n      }\n\n      if (element.hasAttribute('height') === true) {\n        try {\n          size.height = parseInt(element.getAttribute('height'));\n        } catch (error) {}\n      }\n\n      contents.push({\n        component: 'image',\n        imageId: imageId,\n        url: url,\n        size: size\n      });\n    } else {\n      if (item == null) {\n        item = {\n          component: 'text',\n          id: shortid.generate(),\n          content: []\n        };\n      }\n\n      var firstLine = i == 0 || i > 0 && contents.length > 0 && contents[contents.length - 1].component == 'image';\n\n      if (tag == 'ul' || tag == 'ol') {\n        for (var k = 0; k < element.childNodes.length; k++) {\n          var ro = {\n            id: shortid.generate(),\n            text: tag == 'ol' ? firstLine == true & k == 0 ? k + 1 + \"- \" : \"\\n\" + (k + 1) + \"- \" : firstLine === true && k == 0 ? \"\\u2022 \" : \"\\n\\u2022 \",\n            len: 2,\n            stype: [],\n            styleList: StyleSheet.flatten(convertStyleList(update([], {\n              $push: [tag]\n            }), availableStyles)),\n            tag: tag,\n            NewLine: true,\n            readOnly: true\n          };\n          ro.len = ro.text.length;\n          item.content.push(ro);\n          var node = element.childNodes[k];\n\n          for (var j = 0; j < node.childNodes.length; j++) {\n            var child = node.childNodes[j];\n            item.content.push(xmlNodeToItem(child, tag, false, availableStyles));\n          }\n        }\n      } else {\n        if (element.childNodes) {\n          for (var _j = 0; _j < element.childNodes.length; _j++) {\n            var _child = element.childNodes[_j];\n            var childItem = xmlNodeToItem(_child, tag, firstLine == false && _j == 0, availableStyles);\n\n            if (firstLine) {\n              childItem.NewLine = _j == 0;\n            }\n\n            item.content.push(childItem);\n          }\n        }\n      }\n    }\n  }\n\n  if (item != null) {\n    contents = update(contents, {\n      $push: [item]\n    });\n    item = null;\n  }\n\n  return contents;\n}\n\nfunction xmlNodeToItem(child, tag, newLine) {\n  var styleList = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var availableStyles = styleList === null ? defaultStyles : styleList;\n  var isBold = false;\n  var isItalic = false;\n  var isUnderLine = false;\n  var isOverline = false;\n  var isGreen = false;\n  var isBlue = false;\n  var isRed = false;\n  var isBlueMarker = false;\n  var isOrangeMarker = false;\n  var isPinkMarker = false;\n  var isPurpleMarker = false;\n  var isGreenMarker = false;\n  var isYellowMarker = false;\n  var text = '';\n\n  if (child.nodeName === 'span') {\n    if (child.hasAttribute('style') === true) {\n      var styles = child.getAttribute('style');\n      isBold = styles.indexOf('font-weight: bold;') > -1;\n      isItalic = styles.indexOf('font-style: italic;') > -1;\n      isOverline = styles.indexOf('text-decoration: line-through;') > -1;\n      isUnderLine = styles.indexOf('text-decoration: underline;') > -1;\n      isBlue = styles.indexOf(\"color: \" + availableStyles.blue.color + \";\") > -1;\n      isRed = styles.indexOf(\"color: \" + availableStyles.red.color + \";\") > -1;\n      isGreen = styles.indexOf(\"color: \" + availableStyles.green.color + \";\") > -1;\n      isBlueMarker = styles.indexOf(\"background-color: \" + availableStyles.blue_hl.backgroundColor + \";\") > -1;\n      isGreenMarker = styles.indexOf(\"background-color: \" + availableStyles.green_hl.backgroundColor + \";\") > -1;\n      isPinkMarker = styles.indexOf(\"background-color: \" + availableStyles.pink_hl.backgroundColor + \";\") > -1;\n      isPurpleMarker = styles.indexOf(\"background-color: \" + availableStyles.purple_hl.backgroundColor + \";\") > -1;\n      isYellowMarker = styles.indexOf(\"background-color: \" + availableStyles.yellow_hl.backgroundColor + \";\") > -1;\n      isOrangeMarker = styles.indexOf(\"background-color: \" + availableStyles.orange_hl.backgroundColor + \";\") > -1;\n    }\n\n    try {\n      text = child.childNodes[0].nodeValue;\n    } catch (error) {}\n  } else {\n    if (child.nodeValue) {\n      text = child.nodeValue;\n    } else {\n      text = '';\n    }\n  }\n\n  var stype = [];\n\n  if (isBold) {\n    stype.push('bold');\n  }\n\n  if (isItalic) {\n    stype.push('italic');\n  }\n\n  if (isUnderLine) {\n    stype.push('underline');\n  }\n\n  if (isOverline) {\n    stype.push('lineThrough');\n  }\n\n  if (isBlue) {\n    stype.push('blue');\n  }\n\n  if (isGreen) {\n    stype.push('green');\n  }\n\n  if (isRed) {\n    stype.push('red');\n  }\n\n  if (isBlueMarker) {\n    stype.push('blue_hl');\n  }\n\n  if (isOrangeMarker) {\n    stype.push('orange_hl');\n  }\n\n  if (isYellowMarker) {\n    stype.push('yellow_hl');\n  }\n\n  if (isGreenMarker) {\n    stype.push('green_hl');\n  }\n\n  if (isPinkMarker) {\n    stype.push('pink_hl');\n  }\n\n  if (isPurpleMarker) {\n    stype.push('purple_hl');\n  }\n\n  return {\n    id: shortid.generate(),\n    text: newLine === true ? \"\\n\" + text : text,\n    len: newLine === true ? text.length + 1 : text.length,\n    stype: stype,\n    styleList: StyleSheet.flatten(convertStyleList(update(stype, {\n      $push: [tag]\n    }), styleList)),\n    tag: tag,\n    NewLine: newLine\n  };\n}\n\nexport function getInitialObject() {\n  return {\n    id: shortid.generate(),\n    component: 'text',\n    content: [{\n      id: shortid.generate(),\n      text: '',\n      len: 0,\n      stype: [],\n      styleList: [{\n        fontSize: 20\n      }],\n      tag: 'body',\n      NewLine: true\n    }]\n  };\n}\n\nfunction convertStyleList(stylesArr) {\n  var styleList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var styls = [];\n  stylesArr.forEach(function (element) {\n    var styleObj = txtToStyle(element, styleList);\n    if (styleObj !== null) styls.push(styleObj);\n  });\n  return styls;\n}\n\nfunction txtToStyle(styleName) {\n  var styleList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var styles = styleList == null ? defaultStyles : styleList;\n  return styles[styleName];\n}\n\nexport function getDefaultStyles() {\n  return defaultStyles;\n}\nvar defaultStyles = StyleSheet.create({\n  bold: {\n    fontWeight: 'bold'\n  },\n  italic: {\n    fontStyle: 'italic'\n  },\n  underline: {\n    textDecorationLine: 'underline'\n  },\n  lineThrough: {\n    textDecorationLine: 'line-through'\n  },\n  heading: {\n    fontSize: 25\n  },\n  body: {\n    fontSize: 20\n  },\n  title: {\n    fontSize: 30\n  },\n  ul: {\n    fontSize: 20\n  },\n  ol: {\n    fontSize: 20\n  },\n  red: {\n    color: '#d23431'\n  },\n  green: {\n    color: '#4a924d'\n  },\n  blue: {\n    color: '#0560ab'\n  },\n  black: {\n    color: '#33363d'\n  },\n  blue_hl: {\n    backgroundColor: '#34f3f4'\n  },\n  green_hl: {\n    backgroundColor: '#2df149'\n  },\n  pink_hl: {\n    backgroundColor: '#f53ba7'\n  },\n  yellow_hl: {\n    backgroundColor: '#f6e408'\n  },\n  orange_hl: {\n    backgroundColor: '#f07725'\n  },\n  purple_hl: {\n    backgroundColor: '#c925f2'\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/node_modules/react-native-cn-richtext-editor/src/Convertors.js"],"names":["update","require","DOMParser","XMLSerializer","shortid","convertToHtmlString","contents","styleList","availableStyles","defaultStyles","myDoc","parseFromString","i","length","input","component","element","parent","olStarted","ulStarted","j","content","item","isBold","stype","indexOf","isItalic","isUnderLine","isOverline","isBlue","isRed","isGreen","isBlueMarker","isGreenMarker","isPinkMarker","isPurpleMarker","isYellowMarker","isOrangeMarker","tag","styles","blue","color","red","green","blue_hl","backgroundColor","green_hl","pink_hl","purple_hl","yellow_hl","orange_hl","NewLine","createElement","documentElement","appendChild","readOnly","child","createTextNode","text","substring","setAttribute","url","size","width","height","imageId","serializeToString","convertToObject","htmlString","doc","childNodes","nodeName","$push","hasAttribute","getAttribute","parseInt","error","push","id","generate","firstLine","k","ro","len","StyleSheet","flatten","convertStyleList","node","xmlNodeToItem","childItem","newLine","nodeValue","getInitialObject","fontSize","stylesArr","styls","forEach","styleObj","txtToStyle","styleName","getDefaultStyles","create","bold","fontWeight","italic","fontStyle","underline","textDecorationLine","lineThrough","heading","body","title","ul","ol","black"],"mappings":"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","sourcesContent":["import update from 'immutability-helper';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nconst { DOMParser } = require('xmldom');\r\nconst { XMLSerializer } = require('xmldom');\r\nconst shortid = require('shortid');\r\n\r\nexport function convertToHtmlString(contents, styleList = null) {\r\n  const availableStyles = styleList == null ? defaultStyles : styleList;\r\n\r\n  // let keys = Object.keys(availableStyles);\r\n  const myDoc = new DOMParser().parseFromString(\r\n    '<div></div>', 'text/xml',\r\n  );\r\n\r\n  for (let i = 0; i < contents.length; i++) {\r\n    const input = contents[i];\r\n\r\n    if (input.component === 'text') {\r\n      var element = null;\r\n      let parent = null;\r\n      let olStarted = false;\r\n      let ulStarted = false;\r\n      for (let j = 0; j < input.content.length; j++) {\r\n        const item = input.content[j];\r\n        const isBold = item.stype.indexOf('bold') > -1;\r\n        const isItalic = item.stype.indexOf('italic') > -1;\r\n        const isUnderLine = item.stype.indexOf('underline') > -1;\r\n        const isOverline = item.stype.indexOf('lineThrough') > -1;\r\n        const isBlue = item.stype.indexOf('blue') > -1;\r\n        const isRed = item.stype.indexOf('red') > -1;\r\n        const isGreen = item.stype.indexOf('green') > -1;\r\n        const isBlueMarker = item.stype.indexOf('blue_hl') > -1;\r\n        const isGreenMarker = item.stype.indexOf('green_hl') > -1;\r\n        const isPinkMarker = item.stype.indexOf('pink_hl') > -1;\r\n        const isPurpleMarker = item.stype.indexOf('purple_hl') > -1;\r\n        const isYellowMarker = item.stype.indexOf('yellow_hl') > -1;\r\n        const isOrangeMarker = item.stype.indexOf('orange_hl') > -1;\r\n        let tag = '';\r\n\r\n\r\n        switch (item.tag) {\r\n          case 'heading':\r\n            tag = 'h3';\r\n            break;\r\n          case 'title':\r\n            tag = 'h1';\r\n            break;\r\n          case 'body':\r\n            tag = 'p';\r\n            break;\r\n          case 'ol':\r\n            tag = 'ol';\r\n            break;\r\n          case 'ul':\r\n            tag = 'ul';\r\n            break;\r\n\r\n          default:\r\n            tag = 'p';\r\n            break;\r\n        }\r\n        let styles = '';\r\n        styles += isBold ? 'font-weight: bold;' : '';\r\n        styles += isItalic ? 'font-style: italic;' : '';\r\n        styles += isOverline ? 'text-decoration: line-through;' : '';\r\n        styles += isUnderLine ? 'text-decoration: underline;' : '';\r\n        styles += isBlue ? `color: ${availableStyles.blue.color};` : '';\r\n        styles += isRed ? `color: ${availableStyles.red.color};` : '';\r\n        styles += isGreen ? `color: ${availableStyles.green.color};` : '';\r\n        styles += isBlueMarker ? `background-color: ${availableStyles.blue_hl.backgroundColor};` : '';\r\n        styles += isGreenMarker ? `background-color: ${availableStyles.green_hl.backgroundColor};` : '';\r\n        styles += isPinkMarker ? `background-color: ${availableStyles.pink_hl.backgroundColor};` : '';\r\n        styles += isPurpleMarker ? `background-color: ${availableStyles.purple_hl.backgroundColor};` : '';\r\n        styles += isYellowMarker ? `background-color: ${availableStyles.yellow_hl.backgroundColor};` : '';\r\n        styles += isOrangeMarker ? `background-color: ${availableStyles.orange_hl.backgroundColor};` : '';\r\n\r\n        if (item.NewLine == true || j == 0) {\r\n          element = myDoc.createElement(tag);\r\n\r\n          if (tag === 'ol') {\r\n            if (olStarted !== true) {\r\n              olStarted = true;\r\n              parent = myDoc.createElement(tag);\r\n              myDoc.documentElement.appendChild(parent);\r\n            }\r\n            ulStarted = false;\r\n            element = myDoc.createElement('li');\r\n            parent.appendChild(element);\r\n          } else if (tag === 'ul') {\r\n            if (ulStarted !== true) {\r\n              ulStarted = true;\r\n              parent = myDoc.createElement(tag);\r\n              myDoc.documentElement.appendChild(parent);\r\n            }\r\n            olStarted = false;\r\n            element = myDoc.createElement('li');\r\n            parent.appendChild(element);\r\n          } else {\r\n            olStarted = false;\r\n            ulStarted = false;\r\n\r\n            element = myDoc.createElement(tag);\r\n            myDoc.documentElement.appendChild(element);\r\n          }\r\n        }\r\n        if (item.readOnly === true) {\r\n\r\n        } else {\r\n          const child = myDoc.createElement('span');\r\n          if (item.NewLine === true && j != 0) {\r\n            child.appendChild(myDoc.createTextNode(item.text.substring(1)));\r\n          } else {\r\n            child.appendChild(myDoc.createTextNode(item.text));\r\n          }\r\n\r\n          if (styles.length > 0) {\r\n            child.setAttribute('style', styles);\r\n          }\r\n\r\n          element.appendChild(child);\r\n        }\r\n      }\r\n    } else if (input.component === 'image') {\r\n      element = myDoc.createElement('img');\r\n      element.setAttribute('src', input.url);\r\n      element.setAttribute('width', input.size.width);\r\n      element.setAttribute('height', input.size.height);\r\n      if (input.imageId) {\r\n        element.setAttribute('data-id', input.imageId);\r\n      }\r\n      myDoc.documentElement.appendChild(element);\r\n    }\r\n  }\r\n\r\n  return new XMLSerializer().serializeToString(myDoc);\r\n}\r\n\r\nexport function convertToObject(htmlString, styleList = null) {\r\n\r\n  const availableStyles = styleList == null ? defaultStyles : styleList;\r\n  \r\n  const doc = new DOMParser().parseFromString(htmlString, 'text/xml');\r\n  let contents = [];\r\n  let item = null;\r\n\r\n  for (let i = 0; i < doc.documentElement.childNodes.length; i++) {\r\n    const element = doc.documentElement.childNodes[i];\r\n    let tag = '';\r\n    switch (element.nodeName) {\r\n      case 'h1':\r\n        tag = 'title';\r\n        break;\r\n      case 'h3':\r\n        tag = 'heading';\r\n        break;\r\n      case 'p':\r\n        tag = 'body';\r\n        break;\r\n      case 'img':\r\n        tag = 'image';\r\n        break;\r\n      case 'ul':\r\n        tag = 'ul';\r\n        break;\r\n      case 'ol':\r\n        tag = 'ol';\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n    if (tag === 'image') {\r\n      if (item != null) {\r\n        // contents.push(item);\r\n\r\n        contents = update(contents, { $push: [item] });\r\n        item = null;\r\n      }\r\n\r\n      let url = '';\r\n      let imageId = null;\r\n      const size = {};\r\n      if (element.hasAttribute('src') === true) {\r\n        url = element.getAttribute('src');\r\n      }\r\n      if (element.hasAttribute('data-id') === true) {\r\n        imageId = element.getAttribute('data-id');\r\n      }\r\n\r\n      if (element.hasAttribute('width') === true) {\r\n        try {\r\n          size.width = parseInt(element.getAttribute('width'));\r\n        } catch (error) {\r\n\r\n        }\r\n      }\r\n      if (element.hasAttribute('height') === true) {\r\n        try {\r\n          size.height = parseInt(element.getAttribute('height'));\r\n        } catch (error) {\r\n\r\n        }\r\n      }\r\n\r\n      contents.push({\r\n        component: 'image',\r\n        imageId,\r\n        url,\r\n        size,\r\n      });\r\n    } else {\r\n      if (item == null) {\r\n        item = {\r\n          component: 'text',\r\n          id: shortid.generate(),\r\n          content: [],\r\n        };\r\n      }\r\n\r\n      const firstLine = (i == 0) || (i > 0 && contents.length > 0 && contents[contents.length - 1].component == 'image');\r\n\r\n\r\n      if (tag == 'ul' || tag == 'ol') {\r\n        for (let k = 0; k < element.childNodes.length; k++) {\r\n          \r\n          const ro = {\r\n            id: shortid.generate(),\r\n            text: tag == 'ol' ? (firstLine == true & k == 0 ? `${k + 1}- ` : `\\n${k + 1}- `) : ((firstLine === true && k == 0) ? '\\u2022 ' : '\\n\\u2022 '),\r\n            len: 2,\r\n            stype: [],\r\n            styleList: StyleSheet.flatten(convertStyleList(update([], { $push: [tag] }), availableStyles)),\r\n            tag,\r\n            NewLine: true,\r\n            readOnly: true,\r\n          };\r\n\r\n\r\n          ro.len = ro.text.length;\r\n          item.content.push(ro);\r\n\r\n          const node = element.childNodes[k];\r\n          for (let j = 0; j < node.childNodes.length; j++) {\r\n            const child = node.childNodes[j];\r\n\r\n            item.content.push(\r\n              xmlNodeToItem(child, tag, false, availableStyles),\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        if(element.childNodes){\r\n                for (let j = 0; j < element.childNodes.length; j++) {\r\n                  const child = element.childNodes[j];\r\n                  const childItem = xmlNodeToItem(child, tag, firstLine == false && j == 0, availableStyles);\r\n                  if (firstLine) {\r\n                    childItem.NewLine = j == 0;\r\n                  }\r\n                  item.content.push(\r\n                    childItem,\r\n                  );\r\n                }\r\n            }\r\n      }\r\n    }\r\n  }\r\n  if (item != null) {\r\n    contents = update(contents, { $push: [item] });\r\n    item = null;\r\n  }\r\n  \r\n  return contents;\r\n}\r\n\r\nfunction xmlNodeToItem(child, tag, newLine, styleList = null) {\r\n  const availableStyles = styleList === null ? defaultStyles : styleList;\r\n  let isBold = false;\r\n  let isItalic = false;\r\n  let isUnderLine = false;\r\n  let isOverline = false;\r\n  let isGreen = false;\r\n  let isBlue = false;\r\n  let isRed = false;\r\n\r\n  let isBlueMarker = false;\r\n  let isOrangeMarker = false;\r\n  let isPinkMarker = false;\r\n  let isPurpleMarker = false;\r\n  let isGreenMarker = false;\r\n  let isYellowMarker = false;\r\n\r\n  let text = '';\r\n  if (child.nodeName === 'span') {\r\n    if (child.hasAttribute('style') === true) {\r\n      const styles = child.getAttribute('style');\r\n      isBold = styles.indexOf('font-weight: bold;') > -1;\r\n      isItalic = styles.indexOf('font-style: italic;') > -1;\r\n      isOverline = styles.indexOf('text-decoration: line-through;') > -1;\r\n      isUnderLine = styles.indexOf('text-decoration: underline;') > -1;\r\n      isBlue = styles.indexOf(`color: ${availableStyles.blue.color};`) > -1;\r\n      isRed = styles.indexOf(`color: ${availableStyles.red.color};`) > -1;\r\n      isGreen = styles.indexOf(`color: ${availableStyles.green.color};`) > -1;\r\n      isBlueMarker = styles.indexOf(`background-color: ${availableStyles.blue_hl.backgroundColor};`) > -1;\r\n      isGreenMarker = styles.indexOf(`background-color: ${availableStyles.green_hl.backgroundColor};`) > -1;\r\n      isPinkMarker = styles.indexOf(`background-color: ${availableStyles.pink_hl.backgroundColor};`) > -1;\r\n      isPurpleMarker = styles.indexOf(`background-color: ${availableStyles.purple_hl.backgroundColor};`) > -1;\r\n      isYellowMarker = styles.indexOf(`background-color: ${availableStyles.yellow_hl.backgroundColor};`) > -1;\r\n      isOrangeMarker = styles.indexOf(`background-color: ${availableStyles.orange_hl.backgroundColor};`) > -1;\r\n    }\r\n    try {\r\n      text = child.childNodes[0].nodeValue;\r\n    } catch (error) {\r\n\r\n    }\r\n  } else {\r\n    if(child.nodeValue){\r\n      text = child.nodeValue;\r\n    } else {\r\n      text = '';\r\n    }\r\n    \r\n  }\r\n\r\n  const stype = [];\r\n  if (isBold) {\r\n    stype.push('bold');\r\n  }\r\n  if (isItalic) {\r\n    stype.push('italic');\r\n  }\r\n  if (isUnderLine) {\r\n    stype.push('underline');\r\n  }\r\n  if (isOverline) {\r\n    stype.push('lineThrough');\r\n  }\r\n  if (isBlue) {\r\n    stype.push('blue');\r\n  }\r\n  if (isGreen) {\r\n    stype.push('green');\r\n  }\r\n  if (isRed) {\r\n    stype.push('red');\r\n  }\r\n\r\n  if (isBlueMarker) {\r\n    stype.push('blue_hl');\r\n  }\r\n\r\n  if (isOrangeMarker) {\r\n    stype.push('orange_hl');\r\n  }\r\n\r\n  if (isYellowMarker) {\r\n    stype.push('yellow_hl');\r\n  }\r\n\r\n  if (isGreenMarker) {\r\n    stype.push('green_hl');\r\n  }\r\n\r\n  if (isPinkMarker) {\r\n    stype.push('pink_hl');\r\n  }\r\n\r\n  if (isPurpleMarker) {\r\n    stype.push('purple_hl');\r\n  }\r\n  \r\n  return {\r\n    id: shortid.generate(),\r\n    text: newLine === true ? `\\n${text}` : text,\r\n    len: newLine === true ? text.length + 1 : text.length,\r\n    stype,\r\n    styleList: StyleSheet.flatten(convertStyleList(update(stype, { $push: [tag] }), styleList)),\r\n    tag,\r\n    NewLine: newLine,\r\n  };\r\n}\r\n\r\nexport function getInitialObject() {\r\n  return {\r\n    id: shortid.generate(),\r\n    component: 'text',\r\n    content: [{\r\n      id: shortid.generate(),\r\n      text: '',\r\n      len: 0,\r\n      stype: [],\r\n      styleList: [{\r\n        fontSize: 20,\r\n      }],\r\n      tag: 'body',\r\n      NewLine: true,\r\n    },\r\n    ],\r\n  };\r\n}\r\n\r\n\r\nfunction convertStyleList(stylesArr, styleList = null) {\r\n  const styls = [];\r\n  (stylesArr).forEach((element) => {\r\n    const styleObj = txtToStyle(element, styleList);\r\n    if (styleObj !== null) styls.push(styleObj);\r\n  });\r\n\r\n\r\n  return styls;\r\n}\r\n\r\nfunction txtToStyle(styleName, styleList = null) {\r\n  const styles = styleList == null ? defaultStyles : styleList;\r\n\r\n  return styles[styleName];\r\n}\r\n\r\nexport function getDefaultStyles() {\r\n  return defaultStyles;\r\n}\r\n\r\n\r\nconst defaultStyles = StyleSheet.create(\r\n  {\r\n    bold: {\r\n      fontWeight: 'bold',\r\n    },\r\n    italic: {\r\n      fontStyle: 'italic',\r\n    },\r\n    underline: { textDecorationLine: 'underline' },\r\n    lineThrough: { textDecorationLine: 'line-through' },\r\n    heading: {\r\n      fontSize: 25,\r\n    },\r\n    body: {\r\n      fontSize: 20,\r\n    },\r\n    title: {\r\n      fontSize: 30,\r\n    },\r\n    ul: {\r\n      fontSize: 20,\r\n    },\r\n    ol: {\r\n      fontSize: 20,\r\n    },\r\n    red: {\r\n      color: '#d23431',\r\n    },\r\n    green: {\r\n      color: '#4a924d',\r\n    },\r\n    blue: {\r\n      color: '#0560ab',\r\n    },\r\n    black: {\r\n      color: '#33363d',\r\n    },\r\n    blue_hl: {\r\n      backgroundColor: '#34f3f4',\r\n    },\r\n    green_hl: {\r\n      backgroundColor: '#2df149',\r\n    },\r\n    pink_hl: {\r\n      backgroundColor: '#f53ba7',\r\n    },\r\n    yellow_hl: {\r\n      backgroundColor: '#f6e408',\r\n    },\r\n    orange_hl: {\r\n      backgroundColor: '#f07725',\r\n    },\r\n    purple_hl: {\r\n      backgroundColor: '#c925f2',\r\n    },\r\n  },\r\n);\r\n"]},"metadata":{},"sourceType":"module"}