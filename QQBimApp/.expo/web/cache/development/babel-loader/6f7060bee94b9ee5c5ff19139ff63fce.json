{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\node_modules\\\\react-native-cn-richtext-editor\\\\src\\\\CNRichTextView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport _ from 'lodash';\nimport { convertToObject } from \"./Convertors\";\nimport CNStyledText from \"./CNStyledText\";\n\nvar CNRichTextView = function (_Component) {\n  _inherits(CNRichTextView, _Component);\n\n  var _super = _createSuper(CNRichTextView);\n\n  function CNRichTextView(props) {\n    var _this;\n\n    _classCallCheck(this, CNRichTextView);\n\n    _this = _super.call(this, props);\n\n    _this.onLayout = function (event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          x = _event$nativeEvent$la.x,\n          y = _event$nativeEvent$la.y,\n          width = _event$nativeEvent$la.width,\n          height = _event$nativeEvent$la.height;\n\n      _this.setState({\n        layoutWidth: width - 2\n      });\n    };\n\n    _this.state = {\n      contents: [],\n      layoutWidth: 400\n    };\n    _this.touchX = -1;\n    _this.touchY = -1;\n    _this.flip = _this.flip.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CNRichTextView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          text = _this$props.text,\n          styleList = _this$props.styleList;\n      var styles = styleList ? styleList : null;\n      var items = convertToObject(text, styles);\n      this.setState({\n        contents: items\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props2 = this.props,\n          text = _this$props2.text,\n          styleList = _this$props2.styleList;\n\n      if (prevProps.text != text) {\n        var styles = styleList ? styleList : null;\n        var items = convertToObject(text, styles);\n        this.setState({\n          contents: items\n        });\n      }\n    }\n  }, {\n    key: \"flip\",\n    value: function flip() {\n      if (this.props.onTap) {\n        this.props.onTap();\n      }\n    }\n  }, {\n    key: \"renderText\",\n    value: function renderText(input, index) {\n      var color = this.props.color ? this.props.color : '#000';\n      return React.createElement(Text, {\n        key: input.id,\n        style: {\n          borderWidth: 0,\n          color: color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, _.map(input.content, function (item) {\n        return React.createElement(CNStyledText, {\n          key: item.id,\n          style: item.styleList,\n          text: item.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 23\n          }\n        });\n      }));\n    }\n  }, {\n    key: \"renderImage\",\n    value: function renderImage(image, index) {\n      var _image$size = image.size,\n          width = _image$size.width,\n          height = _image$size.height;\n      var layoutWidth = this.state.layoutWidth;\n      var _this$props$ImageComp = this.props.ImageComponent,\n          ImageComponent = _this$props$ImageComp === void 0 ? Image : _this$props$ImageComp;\n      var myHeight = layoutWidth - 4 < width ? height * ((layoutWidth - 4) / width) : height;\n      var myWidth = layoutWidth - 4 < width ? layoutWidth - 4 : width;\n      return React.createElement(View, {\n        key: \"image\" + index,\n        style: {\n          flexDirection: 'row',\n          alignItems: 'flex-start'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, React.createElement(ImageComponent, {\n        style: {\n          width: myWidth,\n          height: myHeight,\n          opacity: this.state.imageHighLightedInex === index ? 0.8 : 1\n        },\n        source: {\n          uri: image.url\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var contents = this.state.contents;\n      var style = this.props.style;\n      var styles = style || {};\n      return React.createElement(View, {\n        onLayout: this.onLayout,\n        style: [styles],\n        onStartShouldSetResponder: function onStartShouldSetResponder(evt) {\n          _this2.touchX = evt.nativeEvent.pageX;\n          _this2.touchY = evt.nativeEvent.pageY;\n          return true;\n        },\n        onResponderRelease: function onResponderRelease(evt) {\n          if (Math.abs(evt.nativeEvent.pageX - _this2.touchX) < 25 && Math.abs(evt.nativeEvent.pageY - _this2.touchY) < 25) {\n            setTimeout(_this2.flip, 50);\n          }\n\n          _this2.touchX = -1;\n          _this2.touchY = -1;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }, _.map(contents, function (item, index) {\n        if (item.component === 'text') {\n          return _this2.renderText(item, index);\n        }\n\n        if (item.component === 'image') {\n          return _this2.renderImage(item, index);\n        }\n      }));\n    }\n  }]);\n\n  return CNRichTextView;\n}(Component);\n\nexport default CNRichTextView;","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/node_modules/react-native-cn-richtext-editor/src/CNRichTextView.js"],"names":["React","Component","_","convertToObject","CNStyledText","CNRichTextView","props","onLayout","event","nativeEvent","layout","x","y","width","height","setState","layoutWidth","state","contents","touchX","touchY","flip","bind","text","styleList","styles","items","prevProps","prevState","onTap","input","index","color","id","borderWidth","map","content","item","image","size","ImageComponent","Image","myHeight","myWidth","flexDirection","alignItems","opacity","imageHighLightedInex","uri","url","style","evt","pageX","pageY","Math","abs","setTimeout","component","renderText","renderImage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  View, Text, Image, TouchableWithoutFeedback,\r\n} from 'react-native';\r\nimport _ from 'lodash';\r\nimport { convertToObject } from './Convertors';\r\nimport CNStyledText from './CNStyledText';\r\n\r\nclass CNRichTextView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contents: [],\r\n      layoutWidth: 400,\r\n    };\r\n    this.touchX = -1;\r\n    this.touchY = -1;\r\n    this.flip = this.flip.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { text, styleList} = this.props;\r\n    const styles = styleList ? styleList : null;\r\n\r\n    const items = convertToObject(text, styles);\r\n\r\n    this.setState({\r\n      contents: items,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { text, styleList} = this.props;\r\n\r\n    if (prevProps.text != text) {\r\n      const styles = styleList ? styleList : null;\r\n      const items = convertToObject(text, styles);\r\n\r\n      this.setState({\r\n        contents: items,\r\n      });\r\n    }\r\n  }\r\n\r\n  flip() {\r\n    if (this.props.onTap) {\r\n      this.props.onTap();\r\n    }\r\n  }\r\n\r\n  renderText(input, index) {\r\n    const color = this.props.color ? this.props.color : '#000';\r\n\r\n    return (\r\n      <Text\r\n        key={input.id}\r\n        style={{\r\n          borderWidth: 0,\r\n          color,\r\n        }}\r\n      >\r\n        {\r\n                    _.map(input.content, item => (\r\n                      <CNStyledText key={item.id} style={item.styleList} text={item.text} />\r\n                    ))\r\n\r\n                }\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  renderImage(image, index) {\r\n    const { width, height } = image.size;\r\n    const { layoutWidth } = this.state;\r\n    const { ImageComponent = Image } = this.props;\r\n    const myHeight = (layoutWidth - 4 < width) ? height * ((layoutWidth - 4) / width) : height;\r\n    const myWidth = (layoutWidth - 4 < width) ? layoutWidth - 4 : width;\r\n\r\n    return (\r\n      <View\r\n        key={`image${index}`}\r\n        style={{\r\n          flexDirection: 'row',\r\n          alignItems: 'flex-start',\r\n        }}\r\n      >\r\n        <View>\r\n          <ImageComponent\r\n            style={{\r\n              width: myWidth,\r\n              height: myHeight,\r\n              opacity: this.state.imageHighLightedInex === index ? 0.8 : 1,\r\n            }}\r\n            source={{ uri: image.url }}\r\n          />\r\n        </View>\r\n      </View>\r\n\r\n    );\r\n  }\r\n\r\n    onLayout = (event) => {\r\n      const {\r\n        x,\r\n        y,\r\n        width,\r\n        height,\r\n      } = event.nativeEvent.layout;\r\n\r\n      this.setState({\r\n        layoutWidth: width - 2,\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const { contents } = this.state;\r\n      const { style } = this.props;\r\n\r\n      const styles = style || {};\r\n      return (\r\n        <View\r\n          onLayout={this.onLayout}\r\n          style={[styles]}\r\n          onStartShouldSetResponder={(evt) => {\r\n            this.touchX = evt.nativeEvent.pageX;\r\n            this.touchY = evt.nativeEvent.pageY;\r\n            return true;\r\n          }}\r\n          onResponderRelease={(evt) => {\r\n            if(Math.abs(evt.nativeEvent.pageX - this.touchX) < 25\r\n            && Math.abs(evt.nativeEvent.pageY - this.touchY) < 25\r\n            ) {\r\n               setTimeout(this.flip, 50);\r\n            }\r\n\r\n            this.touchX = -1;\r\n            this.touchY = -1;\r\n            \r\n          }}\r\n        >\r\n          {\r\n            _.map(contents, (item, index) => {\r\n              if (item.component === 'text') {\r\n                return (\r\n                  this.renderText(item, index)\r\n                );\r\n              }\r\n              if (item.component === 'image') {\r\n                return (\r\n                  this.renderImage(item, index)\r\n                );\r\n              }\r\n            })\r\n            }\r\n        </View>\r\n      );\r\n    }\r\n}\r\n\r\nexport default CNRichTextView;\r\n"]},"metadata":{},"sourceType":"module"}