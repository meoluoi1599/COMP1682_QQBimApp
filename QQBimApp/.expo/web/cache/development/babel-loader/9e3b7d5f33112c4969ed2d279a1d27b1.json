{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useMemo, useReducer } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { StackScreen, DrawerScreen } from \"./src/NavigationScreen\";\nimport { SplashScreen } from \"./src/ScreemFolder/OtherScreen\";\nexport var AuthContext = React.createContext();\nvar RootStack = createStackNavigator();\n\nfunction App(props) {\n  var initialState = {\n    isLoading: true,\n    isSignout: false,\n    userToken: null,\n    userName: null\n  };\n\n  var reducer = function reducer(state, action) {\n    switch (action.type) {\n      case 'RESTORE_TOKEN':\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userName: action.userName,\n          userToken: action.userToken,\n          isLoading: false\n        });\n\n      case 'SIGN_IN':\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userName: action.userName,\n          isSignout: false,\n          userToken: action.userToken\n        });\n\n      case 'SIGN_OUT':\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userName: null,\n          isSignout: true,\n          userToken: null\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var authContext = useMemo(function () {\n    return {\n      signIn: function signIn(res) {\n        var userToken, userName;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userToken = res;\n                userName = res.username;\n                _context.prev = 2;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', userToken));\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 10:\n                dispatch({\n                  type: 'SIGN_IN',\n                  userName: userName,\n                  userToken: userToken\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 7]], Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userToken'));\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n                dispatch({\n                  type: 'SIGN_OUT',\n                  userName: null,\n                  userToken: null\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signUp: function signUp(res) {\n        var userToken, userName;\n        return _regeneratorRuntime.async(function signUp$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                userToken = res.token;\n                userName = res.username;\n                _context3.prev = 2;\n                _context3.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', userToken));\n\n              case 5:\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](2);\n                console.log(_context3.t0);\n\n              case 10:\n                dispatch({\n                  type: 'SIGN_IN',\n                  userName: userName,\n                  userToken: userToken\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, [[2, 7]], Promise);\n      }\n    };\n  }, []);\n  useEffect(function () {\n    setTimeout(function _callee() {\n      var userToken;\n      return _regeneratorRuntime.async(function _callee$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              userToken = null;\n              _context4.prev = 1;\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n            case 4:\n              userToken = _context4.sent;\n              _context4.next = 10;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.log(_context4.t0);\n\n            case 10:\n              dispatch({\n                type: 'RESTORE_TOKEN',\n                userToken: userToken\n              });\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[1, 7]], Promise);\n    }, 1000);\n  }, []);\n\n  if (state.isLoading) {\n    return React.createElement(SplashScreen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    });\n  }\n\n  console.log('sdsdsdsd' + state.userToken);\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, React.createElement(RootStack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, state.userToken == null ? React.createElement(RootStack.Screen, {\n    name: \"SignIn\",\n    component: StackScreen,\n    options: {\n      title: 'Sign in',\n      headerShown: false,\n      animationTypeForReplace: state.isSignout ? 'pop' : 'push'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }) : React.createElement(RootStack.Screen, _extends({\n    name: \"Home\",\n    component: DrawerScreen,\n    options: {\n      title: 'Home',\n      headerShown: false\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/App.js"],"names":["React","useEffect","useMemo","useReducer","NavigationContainer","createStackNavigator","AsyncStorage","StackScreen","DrawerScreen","SplashScreen","AuthContext","createContext","RootStack","App","props","initialState","isLoading","isSignout","userToken","userName","reducer","state","action","type","dispatch","authContext","signIn","res","username","setItem","console","log","signOut","removeItem","signUp","token","setTimeout","getItem","title","headerShown","animationTypeForReplace"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,OAA1B,EAAmCC,UAAnC,QAAoD,OAApD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,EAAqBC,YAArB;AACA,SAAQC,YAAR;AAEA,OAAO,IAAMC,WAAW,GAAGV,KAAK,CAACW,aAAN,EAApB;AAEP,IAAMC,SAAS,GAAGP,oBAAoB,EAAtC;;AACA,SAASQ,GAAT,CAAaC,KAAb,EAAoB;AAClB,MAAMC,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAE,IADQ;AAEnBC,IAAAA,SAAS,EAAE,KAFQ;AAGnBC,IAAAA,SAAS,EAAE,IAHQ;AAInBC,IAAAA,QAAQ,EAAE;AAJS,GAArB;;AAOA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,eAAL;AACE,+CACKF,KADL;AAEEF,UAAAA,QAAQ,EAAEG,MAAM,CAACH,QAFnB;AAGED,UAAAA,SAAS,EAAEI,MAAM,CAACJ,SAHpB;AAIEF,UAAAA,SAAS,EAAE;AAJb;;AAMF,WAAK,SAAL;AACE,+CACKK,KADL;AAEEF,UAAAA,QAAQ,EAAEG,MAAM,CAACH,QAFnB;AAGEF,UAAAA,SAAS,EAAE,KAHb;AAIEC,UAAAA,SAAS,EAAEI,MAAM,CAACJ;AAJpB;;AAMF,WAAK,UAAL;AACE,+CACKG,KADL;AAEEF,UAAAA,QAAQ,EAAE,IAFZ;AAGEF,UAAAA,SAAS,EAAE,IAHb;AAIEC,UAAAA,SAAS,EAAE;AAJb;;AAMF;AACE,eAAOG,KAAP;AAvBJ;AAyBD,GA1BD;;AARkB,oBAoCQlB,UAAU,CAACiB,OAAD,EAAUL,YAAV,CApClB;AAAA;AAAA,MAoCXM,KApCW;AAAA,MAoCJG,QApCI;;AAqClB,MAAMC,WAAW,GAAGvB,OAAO,CAAC;AAAA,WAAO;AACjCwB,MAAAA,MAAM,EAAE,gBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAGAT,gBAAAA,SAHA,GAGYS,GAHZ;AAIAR,gBAAAA,QAJA,GAIWQ,GAAG,CAACC,QAJf;AAAA;AAAA;AAAA,iDAMEtB,YAAY,CAACuB,OAAb,CAAqB,WAArB,EAAkCX,SAAlC,CANF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQJY,gBAAAA,OAAO,CAACC,GAAR;;AARI;AAUNP,gBAAAA,QAAQ,CAAC;AAAED,kBAAAA,IAAI,EAAE,SAAR;AAAmBJ,kBAAAA,QAAQ,EAAEA,QAA7B;AAAuCD,kBAAAA,SAAS,EAAEA;AAAlD,iBAAD,CAAR;;AAVM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADyB;AAajCc,MAAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAIC1B,YAAY,CAAC2B,UAAb,CAAwB,WAAxB,CAJD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMLH,gBAAAA,OAAO,CAACC,GAAR;;AANK;AAQPP,gBAAAA,QAAQ,CAAC;AAAED,kBAAAA,IAAI,EAAE,UAAR;AAAoBJ,kBAAAA,QAAQ,EAAE,IAA9B;AAAoCD,kBAAAA,SAAS,EAAE;AAA/C,iBAAD,CAAR;;AARO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAbwB;AAuBjCgB,MAAAA,MAAM,EAAE,gBAAMP,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACAT,gBAAAA,SADA,GACYS,GAAG,CAACQ,KADhB;AAEAhB,gBAAAA,QAFA,GAEWQ,GAAG,CAACC,QAFf;AAAA;AAAA;AAAA,iDAIEtB,YAAY,CAACuB,OAAb,CAAqB,WAArB,EAAkCX,SAAlC,CAJF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMJY,gBAAAA,OAAO,CAACC,GAAR;;AANI;AAQNP,gBAAAA,QAAQ,CAAC;AAAED,kBAAAA,IAAI,EAAE,SAAR;AAAmBJ,kBAAAA,QAAQ,EAAEA,QAA7B;AAAuCD,kBAAAA,SAAS,EAAEA;AAAlD,iBAAD,CAAR;;AARM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvByB,KAAP;AAAA,GAAD,EAiCvB,EAjCuB,CAA3B;AAmCAjB,EAAAA,SAAS,CAAC,YAAM;AACdmC,IAAAA,UAAU,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAGTlB,cAAAA,SAAS,GAAG,IAAZ;AAHS;AAAA;AAAA,+CAKWZ,YAAY,CAAC+B,OAAb,CAAqB,WAArB,CALX;;AAAA;AAKPnB,cAAAA,SALO;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOPY,cAAAA,OAAO,CAACC,GAAR;;AAPO;AAUTP,cAAAA,QAAQ,CAAC;AAAED,gBAAAA,IAAI,EAAE,eAAR;AAAyBL,gBAAAA,SAAS,EAAEA;AAApC,eAAD,CAAR;;AAVS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,EAWP,IAXO,CAAV;AAYD,GAbQ,EAaN,EAbM,CAAT;;AAeA,MAAIG,KAAK,CAACL,SAAV,EAAsB;AACpB,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AACDc,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaV,KAAK,CAACH,SAA/B;AACA,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEO,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACH,SAAN,IAAmB,IAAnB,GAEG,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAEX,WAFb;AAGE,IAAA,OAAO,EAAE;AACP+B,MAAAA,KAAK,EAAE,SADA;AAEPC,MAAAA,WAAW,EAAE,KAFN;AAIPC,MAAAA,uBAAuB,EAAEnB,KAAK,CAACJ,SAAN,GAAkB,KAAlB,GAA0B;AAJ5C,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,GAeG,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,MAAvB;AAA8B,IAAA,SAAS,EAAET,YAAzC;AAAwD,IAAA,OAAO,EAAE;AAC/D8B,MAAAA,KAAK,EAAE,MADwD;AAE/DC,MAAAA,WAAW,EAAE;AAFkD;AAAjE,KAE2BzB,KAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAhBN,CADF,CADF,CADF;AA4BD;;AACD,eAAeD,GAAf","sourcesContent":["import React, {useEffect, useMemo, useReducer} from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport {StackScreen, DrawerScreen} from './src/NavigationScreen';\nimport {SplashScreen} from './src/ScreemFolder/OtherScreen';\n\nexport const AuthContext = React.createContext();\n\nconst RootStack = createStackNavigator();\nfunction App(props) {\n  const initialState = {\n    isLoading: true,\n    isSignout: false,\n    userToken: null,\n    userName: null\n  }\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'RESTORE_TOKEN':\n        return {\n          ...state,\n          userName: action.userName,\n          userToken: action.userToken,\n          isLoading: false,\n        };\n      case 'SIGN_IN':\n        return {\n          ...state,\n          userName: action.userName,\n          isSignout: false,\n          userToken: action.userToken,\n        };\n      case 'SIGN_OUT':\n        return {\n          ...state,\n          userName: null,\n          isSignout: true,\n          userToken: null,\n        };\n      default:\n        return state;\n     }\n  }\n \n  const [state, dispatch] = useReducer(reducer, initialState);\n  const authContext = useMemo(() => ({\n    signIn: async(res) => {\n      // setUserToken('fgkj');\n      // setIsLoading(false);\n      const userToken = res;\n      const userName = res.username;\n      try {\n        await AsyncStorage.setItem('userToken', userToken);\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({ type: 'SIGN_IN', userName: userName, userToken: userToken});\n    },\n    signOut: async() => {\n      // setUserToken(null);\n      // setIsLoading(false);\n      try {\n        await AsyncStorage.removeItem('userToken');\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({ type: 'SIGN_OUT', userName: null, userToken: null });\n    },\n    signUp: async(res) => {\n      const userToken = res.token;\n      const userName = res.username;\n      try {\n        await AsyncStorage.setItem('userToken', userToken);\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({ type: 'SIGN_IN', userName: userName, userToken: userToken });\n    },\n  }), []);\n\n  useEffect(() => {\n    setTimeout(async() => {\n      // setIsLoading(false);\n      let userToken;\n      userToken = null;\n      try {\n        userToken = await AsyncStorage.getItem('userToken');\n      } catch(e) {\n        console.log(e);\n      }\n      // console.log('user token: ', userToken);\n      dispatch({ type: 'RESTORE_TOKEN', userToken: userToken });\n    }, 1000);\n  }, []);\n\n  if( state.isLoading ) {\n    return(\n      <SplashScreen/>\n    );\n  }\n  console.log('sdsdsdsd' + state.userToken)\n  return (\n    <AuthContext.Provider value={authContext}>\n      <NavigationContainer>\n        <RootStack.Navigator>\n          {state.userToken == null ? (\n              // No token found, user isn't signed in\n              <RootStack.Screen\n                name=\"SignIn\"\n                component={StackScreen}\n                options={{\n                  title: 'Sign in',\n                  headerShown: false,\n              // When logging out, a pop animation feels intuitive\n                  animationTypeForReplace: state.isSignout ? 'pop' : 'push',\n                }}\n              />\n            ) : (\n              \n              // User is signed in\n              <RootStack.Screen name=\"Home\" component={DrawerScreen}  options={{\n                title: 'Home',\n                headerShown: false}} {...props}/>\n            )}\n        </RootStack.Navigator>\n      </NavigationContainer>\n    </AuthContext.Provider>\n\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}