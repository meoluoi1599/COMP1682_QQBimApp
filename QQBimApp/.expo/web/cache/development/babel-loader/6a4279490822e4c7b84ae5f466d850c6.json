{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\ScreemFolder\\\\StoryScreen\\\\ListStoryScreen.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { FlatList } from 'react-native-gesture-handler';\n\nfunction ListStoryScreen(props) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  function get_list(jsonValue) {\n    fetch('http://192.168.1.6:19000/get_list/' + jsonValue.user_id).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      console.log('list:' + res);\n      setData(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  }\n\n  React.useEffect(function () {\n    try {\n      AsyncStorage.getItem('user').then(function (value) {\n        var jsonValue = JSON.parse(value);\n        get_list(jsonValue);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item) {\n      return item.list_id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          flexDirection: 'row',\n          margin: 10\n        },\n        onPress: function onPress() {\n          return props.navigation.navigate('DetailList', {\n            item: item\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.textName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, item.list_name)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport { ListStoryScreen };\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 5,\n    marginLeft: 10,\n    marginRight: 10,\n    backgroundColor: 'white',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  img: {\n    width: 80,\n    height: 80,\n    borderRadius: 50\n  },\n  textName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginLeft: 20\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/ScreemFolder/StoryScreen/ListStoryScreen.js"],"names":["React","FlatList","ListStoryScreen","props","useState","data","setData","get_list","jsonValue","fetch","user_id","then","response","json","res","console","log","catch","error","finally","setLoading","useEffect","AsyncStorage","getItem","value","JSON","parse","e","item","list_id","toString","styles","container","flexDirection","margin","navigation","navigate","textName","list_name","StyleSheet","create","marginTop","marginLeft","marginRight","backgroundColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","img","borderRadius","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, Text, Image,TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { FlatList } from 'react-native-gesture-handler';\r\n\r\n\r\nfunction ListStoryScreen(props) {\r\n  const [data, setData] = React.useState([]);\r\n  function get_list(jsonValue) {\r\n    fetch('http://192.168.1.6:19000/get_list/' + jsonValue.user_id)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      console.log('list:' + res); \r\n      setData(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      setLoading(false) \r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    try {\r\n      AsyncStorage.getItem('user').then((value) => {\r\n        const jsonValue = JSON.parse(value);\r\n        get_list(jsonValue);\r\n      })\r\n    } catch(e) {\r\n      console.log(e)\r\n    }\r\n  }, []);\r\n    return (\r\n      <View>\r\n        <FlatList\r\n          data={data}\r\n          keyExtractor= {item => item.list_id.toString()}\r\n          renderItem={({ item }) =>(\r\n            <View style={styles.container}>\r\n              <TouchableOpacity style={{flexDirection: 'row', margin: 10,}} onPress={() =>props.navigation.navigate('DetailList', {item: item})}>\r\n                <Text style={styles.textName}>{item.list_name}</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n        />\r\n      </View>\r\n      \r\n    );\r\n}\r\nexport {ListStoryScreen};\r\n\r\nvar styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 5,\r\n    marginLeft: 10,\r\n    marginRight:10,\r\n    backgroundColor: 'white',\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  img: {\r\n    width: 80, \r\n    height: 80, \r\n    borderRadius: 50\r\n  },\r\n  textName: {\r\n    fontSize: 18, \r\n    fontWeight: 'bold', \r\n    marginLeft: 20}\r\n})"]},"metadata":{},"sourceType":"module"}