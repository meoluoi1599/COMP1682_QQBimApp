{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimAPp\\\\src\\\\ScreemFolder\\\\OtherScreen\\\\RingScreen.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport io from \"socket.io-client\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { Value } from 'react-native-reanimated';\nimport { DrawerItemList } from '@react-navigation/drawer';\n\nfunction RingScreen() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dataSource = _React$useState2[0],\n      setDataSource = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              AsyncStorage.getItem('user').then(function (value) {\n                var jsonValue = JSON.parse(value);\n                console.log('sssssss', jsonValue.user_id);\n                fetchData(jsonValue.user_id);\n              });\n            } catch (e) {\n              console.log(e);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function fetchData(user_id) {\n    fetch('http://192.168.1.2:19000/book_author/' + user_id).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  }\n\n  console.log('sssssss' + dataSource);\n  React.useEffect(function () {\n    getData();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: dataSource,\n    keyExtractor: function keyExtractor(item) {\n      return item.story_id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate('DetailStory', {\n            item: item\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, item.user_id));\n    },\n    showsHorizontalScrollIndicator: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport { RingScreen };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    marginTop: 25\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimAPp/src/ScreemFolder/OtherScreen/RingScreen.js"],"names":["React","io","AsyncStorage","Value","DrawerItemList","RingScreen","useState","dataSource","setDataSource","isLoading","setLoading","getData","getItem","then","value","jsonValue","JSON","parse","console","log","user_id","fetchData","e","fetch","response","json","res","catch","error","finally","useEffect","styles","container","item","story_id","toString","props","navigation","navigate","StyleSheet","create","flex","justifyContent","alignItems","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Dimensions, View, TextInput, Text, FlatList, TouchableOpacity } from 'react-native';\nimport io from \"socket.io-client\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { Value } from 'react-native-reanimated';\nimport { DrawerItemList } from '@react-navigation/drawer';\n\n \nfunction RingScreen() {\n  const [dataSource, setDataSource ]= React.useState([]);\n  const [isLoading, setLoading] = React.useState(true);\n  const getData = async () => {\n    try {\n      AsyncStorage.getItem('user').then((value) => {\n        const jsonValue = JSON.parse(value);\n        console.log('sssssss', jsonValue.user_id);\n        fetchData(jsonValue.user_id);\n      })\n\n    } catch(e) {\n      console.log(e)\n    }\n  }\n\n  function fetchData(user_id) {\n    fetch('http://192.168.1.2:19000/book_author/' + user_id)\n        .then ((response) => response.json())\n        .then ( (res) => { \n          setDataSource(res);\n        })\n        .catch ((error) => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false) \n        });\n      }\n  console.log('sssssss' + dataSource)\n  React.useEffect(() => {\n    getData();\n  }, []);\n  return (\n      <View style={styles.container}>\n        <FlatList\n            data={dataSource}\n            keyExtractor= {item => item.story_id.toString()}\n            renderItem={({ item }) => (\n              <TouchableOpacity onPress={() =>props.navigation.navigate('DetailStory', {item: item})}>            \n                <Text>{item.user_id}</Text>\n              </TouchableOpacity>\n            )}\n            showsHorizontalScrollIndicator={false}\n           \n          /> \n    </View>\n  )   \n} export {RingScreen};\n \nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        marginTop: 25,\n    },\n\n});"]},"metadata":{},"sourceType":"module"}