{"ast":null,"code":"var _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\node_modules\\\\react-native-cn-richtext-editor\\\\src\\\\CNToolbarSetIcon.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { CNToolbarIcon } from \"./CNToolbarIcon\";\nexport var CNToolbarSetIcon = function CNToolbarSetIcon(props) {\n  var size = props.size,\n      color = props.color,\n      backgroundColor = props.backgroundColor,\n      selectedColor = props.selectedColor,\n      selectedBackgroundColor = props.selectedBackgroundColor,\n      selectedStyles = props.selectedStyles,\n      selectedTag = props.selectedTag,\n      iconArray = props.iconArray,\n      iconSetContainerStyle = props.iconSetContainerStyle,\n      iconStyles = props.iconStyles,\n      onStyleKeyPress = props.onStyleKeyPress;\n  return React.createElement(View, {\n    style: iconSetContainerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, iconArray.map(function (object, index) {\n    var toolTypeText = object.toolTypeText,\n        iconComponent = object.iconComponent,\n        buttonTypes = object.buttonTypes;\n    return React.createElement(CNToolbarIcon, {\n      key: index,\n      size: size,\n      backgroundColor: backgroundColor,\n      color: color,\n      iconStyles: iconStyles,\n      toolTypeText: toolTypeText,\n      iconComponent: iconComponent,\n      onStyleKeyPress: onStyleKeyPress,\n      selectedColor: selectedColor,\n      selectedStyles: selectedStyles,\n      selectedTag: selectedTag,\n      buttonTypes: buttonTypes,\n      selectedBackgroundColor: selectedBackgroundColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    });\n  }));\n};","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/node_modules/react-native-cn-richtext-editor/src/CNToolbarSetIcon.js"],"names":["React","Component","CNToolbarIcon","CNToolbarSetIcon","props","size","color","backgroundColor","selectedColor","selectedBackgroundColor","selectedStyles","selectedTag","iconArray","iconSetContainerStyle","iconStyles","onStyleKeyPress","map","object","index","toolTypeText","iconComponent","buttonTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAQA,SAASC,aAAT;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAAA,MAEnCC,IAFmC,GAanCD,KAbmC,CAEnCC,IAFmC;AAAA,MAGnCC,KAHmC,GAanCF,KAbmC,CAGnCE,KAHmC;AAAA,MAInCC,eAJmC,GAanCH,KAbmC,CAInCG,eAJmC;AAAA,MAKnCC,aALmC,GAanCJ,KAbmC,CAKnCI,aALmC;AAAA,MAMnCC,uBANmC,GAanCL,KAbmC,CAMnCK,uBANmC;AAAA,MAOnCC,cAPmC,GAanCN,KAbmC,CAOnCM,cAPmC;AAAA,MAQnCC,WARmC,GAanCP,KAbmC,CAQnCO,WARmC;AAAA,MASnCC,SATmC,GAanCR,KAbmC,CASnCQ,SATmC;AAAA,MAUnCC,qBAVmC,GAanCT,KAbmC,CAUnCS,qBAVmC;AAAA,MAWnCC,UAXmC,GAanCV,KAbmC,CAWnCU,UAXmC;AAAA,MAYnCC,eAZmC,GAanCX,KAbmC,CAYnCW,eAZmC;AAcvC,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,SAAS,CAACI,GAAV,CAAc,UAACC,MAAD,EAASC,KAAT,EAAmB;AAAA,QAE1BC,YAF0B,GAK1BF,MAL0B,CAE1BE,YAF0B;AAAA,QAG1BC,aAH0B,GAK1BH,MAL0B,CAG1BG,aAH0B;AAAA,QAI1BC,WAJ0B,GAK1BJ,MAL0B,CAI1BI,WAJ0B;AAM9B,WACI,oBAAC,aAAD;AACI,MAAA,GAAG,EAAEH,KADT;AAEI,MAAA,IAAI,EAAEb,IAFV;AAGI,MAAA,eAAe,EAAEE,eAHrB;AAII,MAAA,KAAK,EAAED,KAJX;AAKI,MAAA,UAAU,EAAEQ,UALhB;AAMI,MAAA,YAAY,EAAEK,YANlB;AAOI,MAAA,aAAa,EAAEC,aAPnB;AAQI,MAAA,eAAe,EAAEL,eARrB;AASI,MAAA,aAAa,EAAEP,aATnB;AAUI,MAAA,cAAc,EAAEE,cAVpB;AAWI,MAAA,WAAW,EAAEC,WAXjB;AAYI,MAAA,WAAW,EAAEU,WAZjB;AAaI,MAAA,uBAAuB,EAAEZ,uBAb7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAiBH,GAvBA,CADL,CADJ;AA4BH,CA1CM","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    View,\r\n    TouchableWithoutFeedback,\r\n    TouchableHighlight,\r\n    Text,\r\n    StyleSheet\r\n} from 'react-native'\r\nimport { CNToolbarIcon } from './CNToolbarIcon'\r\n\r\nexport const CNToolbarSetIcon = (props) => {\r\n    const {\r\n        size,\r\n        color,\r\n        backgroundColor,\r\n        selectedColor,\r\n        selectedBackgroundColor,\r\n        selectedStyles,\r\n        selectedTag,\r\n        iconArray,\r\n        iconSetContainerStyle,\r\n        iconStyles,\r\n        onStyleKeyPress\r\n    } = props\r\n    return (\r\n        <View style={iconSetContainerStyle}>\r\n            {iconArray.map((object, index) => {\r\n                const {\r\n                    toolTypeText,\r\n                    iconComponent,\r\n                    buttonTypes\r\n                } = object\r\n                return (\r\n                    <CNToolbarIcon\r\n                        key={index}\r\n                        size={size}\r\n                        backgroundColor={backgroundColor}\r\n                        color={color}\r\n                        iconStyles={iconStyles}\r\n                        toolTypeText={toolTypeText}\r\n                        iconComponent={iconComponent}\r\n                        onStyleKeyPress={onStyleKeyPress}\r\n                        selectedColor={selectedColor}\r\n                        selectedStyles={selectedStyles}\r\n                        selectedTag={selectedTag}\r\n                        buttonTypes={buttonTypes}\r\n                        selectedBackgroundColor={selectedBackgroundColor}\r\n                    />\r\n                )\r\n            })}\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}