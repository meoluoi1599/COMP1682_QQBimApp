{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\Components\\\\DetailStoryScreen\\\\ButtonReadingAdd.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\n\nvar ButtonReadingAdd = function ButtonReadingAdd(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate('Reading', {\n        chapter_id: 1,\n        item: props.route.params.item\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.reading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.readingText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Reading\"))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    name: \"ios-add-circle-outline\",\n    style: styles.addButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })))), React.createElement(TouchableWithoutFeedback, {\n    onPressOut: function onPressOut() {\n      setModalVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Add to libary\")), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, styles.openButton), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Hide Modal\")))))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    marginTop: 22,\n    flexDirection: 'column',\n    justifyContent: \"flex-end\"\n  },\n  modalView: {\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  button: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  reading: {\n    height: 40,\n    width: 200,\n    backgroundColor: '#aa4fff',\n    borderRadius: 40,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  readingText: {\n    marginLeft: 5,\n    fontWeight: 'bold',\n    fontSize: 20,\n    color: 'white'\n  },\n  addButton: {\n    color: '#aa4fff',\n    fontSize: 40,\n    marginLeft: 5\n  }\n});\nexport { ButtonReadingAdd };","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/Components/DetailStoryScreen/ButtonReadingAdd.js"],"names":["React","useState","Icon","ButtonReadingAdd","props","modalVisible","setModalVisible","styles","button","navigation","navigate","chapter_id","item","route","params","reading","readingText","addButton","centeredView","modalView","modalText","openButton","backgroundColor","textStyle","StyleSheet","create","flex","marginTop","flexDirection","justifyContent","alignItems","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","borderRadius","padding","color","fontWeight","textAlign","marginBottom","marginLeft","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  Modal,\r\n  StyleSheet,\r\n  Text,\r\n  Dimensions,\r\n  TouchableHighlight,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  View\r\n} from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/Ionicons'\r\n\r\nconst ButtonReadingAdd = (props) => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  return (\r\n    <View >\r\n      <View style={styles.button}>\r\n            <TouchableOpacity onPress={() => props.navigation.navigate('Reading', {chapter_id: 1, item: props.route.params.item})}>\r\n              <View style={styles.reading}>\r\n                <Text style={styles.readingText}>Reading</Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setModalVisible(true);\r\n              }}\r\n            >\r\n              <View>\r\n                <Icon name='ios-add-circle-outline' style={styles.addButton}/>\r\n              </View>                 \r\n            </TouchableOpacity>\r\n      </View>\r\n      <TouchableWithoutFeedback\r\n        onPressOut={() => {\r\n          setModalVisible(false);\r\n        }}\r\n      >\r\n        <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      \r\n      >\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n          <TouchableHighlight\r\n              onPress={() => {\r\n                setModalVisible(!modalVisible);\r\n              }}\r\n            >\r\n              <Text style={styles.modalText}>Add to libary</Text>\r\n            </TouchableHighlight>\r\n\r\n            <TouchableHighlight\r\n              style={{ ...styles.openButton, backgroundColor: \"#2196F3\" }}\r\n              onPress={() => {\r\n                setModalVisible(!modalVisible);\r\n              }}\r\n            >\r\n              <Text style={styles.textStyle}>Hide Modal</Text>\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n      </TouchableWithoutFeedback>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    marginTop: 22,\r\n    flexDirection: 'column',\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  modalView: {\r\n    backgroundColor: \"white\",\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n    //maxheight: Dimensions.get('window').height * 0.3\r\n  },\r\n  openButton: {\r\n    backgroundColor: \"#F194FF\",\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\"\r\n  },\r\n  button: {\r\n    marginTop: 10, \r\n    flexDirection: 'row', \r\n    justifyContent: 'center', \r\n    alignItems: 'center'\r\n  },\r\n  reading: {\r\n    height: 40, width: 200, \r\n    backgroundColor: '#aa4fff', \r\n    borderRadius: 40, \r\n    justifyContent: 'center', \r\n    alignItems: 'center'\r\n  },\r\n  readingText: {\r\n    marginLeft: 5, \r\n    fontWeight: 'bold', \r\n    fontSize: 20, \r\n    color: 'white' \r\n  },\r\n  addButton: {\r\n    color: '#aa4fff', \r\n    fontSize: 40, \r\n    marginLeft: 5\r\n  }\r\n});\r\n\r\nexport {ButtonReadingAdd};"]},"metadata":{},"sourceType":"module"}