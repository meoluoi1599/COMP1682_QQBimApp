{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\Components\\\\HomeScreen\\\\DrawerContent.js\";\nimport * as React from 'react';\nimport { DrawerContentScrollView, DrawerItem, DrawerItemList } from '@react-navigation/drawer';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { AuthContext } from \"../../../App\";\n\nfunction DrawerContent(props) {\n  var _React$useContext = React.useContext(AuthContext),\n      signOut = _React$useContext.signOut;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dataSource = _React$useState2[0],\n      setDataSource = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              AsyncStorage.getItem('user').then(function (value) {\n                var jsonValue = JSON.parse(value);\n                setDataSource(jsonValue);\n              });\n            } catch (e) {\n              console.log(e);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log('sssssss' + dataSource);\n  React.useEffect(function () {\n    getData();\n  }, []);\n  return React.createElement(DrawerContentScrollView, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.profileIcon,\n    source: {\n      uri: dataSource.user_avatar\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, dataSource.name), React.createElement(Text, {\n    style: styles.caption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"@\", dataSource.username))), React.createElement(View, {\n    style: styles.itemList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(DrawerItemList, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), React.createElement(DrawerItem, {\n    icon: function icon(_ref) {\n      var color = _ref.color,\n          size = _ref.size;\n      return React.createElement(Ionicons, {\n        name: \"ios-settings\",\n        color: color,\n        size: size,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      });\n    },\n    label: \"Settings\",\n    drawerContentOptions: {\n      activeBackgroundColor: '#93278f'\n    },\n    onPress: function onPress() {\n      return props.navigation.navigate('Home');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), React.createElement(DrawerItem, {\n    icon: function icon(_ref2) {\n      var color = _ref2.color,\n          size = _ref2.size;\n      return React.createElement(Ionicons, {\n        name: \"ios-exit\",\n        color: color,\n        size: size,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }\n      });\n    },\n    label: \"Sign Out\",\n    drawerContentOptions: {\n      activeBackgroundColor: '#93278f'\n    },\n    onPress: function onPress() {\n      signOut();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport { DrawerContent };\nvar styles = StyleSheet.create({\n  profileIcon: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    marginTop: 20,\n    backgroundColor: 'grey'\n  },\n  title: {\n    fontSize: 16,\n    marginTop: 3,\n    fontWeight: 'bold',\n    color: 'black'\n  },\n  caption: {\n    fontSize: 14,\n    lineHeight: 14,\n    color: 'black'\n  },\n  itemList: {\n    marginTop: 50\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/Components/HomeScreen/DrawerContent.js"],"names":["React","DrawerContentScrollView","DrawerItem","DrawerItemList","Ionicons","AsyncStorage","AuthContext","DrawerContent","props","useContext","signOut","useState","dataSource","setDataSource","isLoading","setLoading","getData","getItem","then","value","jsonValue","JSON","parse","e","console","log","useEffect","flex","justifyContent","alignItems","styles","profileIcon","uri","user_avatar","title","name","caption","username","itemList","color","size","activeBackgroundColor","navigation","navigate","StyleSheet","create","width","height","borderRadius","marginTop","backgroundColor","fontSize","fontWeight","lineHeight"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  DrawerContentScrollView,\n  DrawerItem,\n  DrawerItemList\n} from '@react-navigation/drawer';\nimport  Ionicons  from 'react-native-vector-icons/Ionicons'; \nimport AsyncStorage from '@react-native-community/async-storage';\nimport { View , Image, StyleSheet, Text, ImageBackground} from 'react-native';\n\nimport { AuthContext } from '../../../App';\n\nfunction DrawerContent(props) {\n    const { signOut } = React.useContext(AuthContext);\n    const [dataSource, setDataSource ]= React.useState([]);\n    const [isLoading, setLoading] = React.useState(true);\n    const getData = async () => {\n      try {\n        AsyncStorage.getItem('user').then((value) => {\n          const jsonValue = JSON.parse(value);\n          setDataSource(jsonValue);\n        })\n      } catch(e) {\n        console.log(e)\n      }\n    }\n    console.log('sssssss' + dataSource)\n    React.useEffect(() => {\n      getData();\n    }, []);\n    return (\n      <DrawerContentScrollView {...props}>\n        <View style={{\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}>\n            <Image \n                style={styles.profileIcon}\n                source={{ uri: dataSource.user_avatar }}\n            />\n            <View>\n              <Text style={styles.title}>{dataSource.name}</Text>\n              <Text style={styles.caption}>@{dataSource.username}</Text>\n            </View>\n        </View>\n        <View style={styles.itemList}> \n          <DrawerItemList {...props} />            \n          <DrawerItem \n            icon={({color, size}) => (\n                <Ionicons \n                    name=\"ios-settings\" \n                    color={color}\n                    size={size}\n                />\n            )}\n            label=\"Settings\"\n            drawerContentOptions={{\n                activeBackgroundColor: '#93278f',\n            }}\n            onPress={() => props.navigation.navigate('Home')}\n          />\n          <DrawerItem \n              icon={({color, size}) => (\n                  <Ionicons \n                      name=\"ios-exit\" \n                      color={color}\n                      size={size}\n                  />\n              )}\n              label=\"Sign Out\"\n              drawerContentOptions={{\n                  activeBackgroundColor: '#93278f',\n              }}\n              onPress={() => {signOut()}}\n          />\n        </View>\n      </DrawerContentScrollView>\n    );\n  } export {DrawerContent}\n\n  const styles = StyleSheet.create({\n    profileIcon: {\n        width: 100, \n        height: 100, \n        borderRadius: 50, \n        marginTop: 20,\n        backgroundColor: 'grey'\n    },\n    title: {\n        fontSize: 16,\n        marginTop: 3,\n        fontWeight: 'bold',\n        color: 'black'\n    },\n    caption: {\n        fontSize: 14,\n        lineHeight: 14,\n        color: 'black'\n    },\n    itemList: {\n        marginTop: 50,\n    }\n  });"]},"metadata":{},"sourceType":"module"}