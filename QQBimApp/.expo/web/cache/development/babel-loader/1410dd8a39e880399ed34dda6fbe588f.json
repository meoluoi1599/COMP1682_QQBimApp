{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\node_modules\\\\react-native-cn-richtext-editor\\\\src\\\\CNRichTextEditor.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport _ from 'lodash';\nimport update from 'immutability-helper';\nimport { getInitialObject, getDefaultStyles } from \"./Convertors\";\nimport CNTextInput from \"./CNTextInput\";\n\nvar shortid = require('shortid');\n\nvar IS_IOS = Platform.OS === 'ios';\n\nvar CNRichTextEditor = function (_Component) {\n  _inherits(CNRichTextEditor, _Component);\n\n  var _super = _createSuper(CNRichTextEditor);\n\n  function CNRichTextEditor(props) {\n    var _this;\n\n    _classCallCheck(this, CNRichTextEditor);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      imageHighLightedInex: -1,\n      layoutWidth: 400,\n      styles: [],\n      selection: {\n        start: 0,\n        end: 0\n      },\n      justToolAdded: false,\n      avoidUpdateText: false,\n      focusInputIndex: 0,\n      measureContent: []\n    };\n\n    _this.onConnectToPrevClicked = function (index) {\n      var value = _this.props.value;\n\n      if (index > 0 && value[index - 1].component == 'image') {\n        var ref = _this.textInputs[index - 1];\n        ref.focus();\n      }\n    };\n\n    _this.handleKeyDown = function (e, index) {\n      _this.avoidUpdateStyle = true;\n      var value = _this.props.value;\n      var item = value[index];\n\n      if (item.component === 'image' && e.nativeEvent.key === 'Backspace') {\n        if (_this.state.imageHighLightedInex === index) {\n          _this.removeImage(index);\n        } else {\n          _this.setState({\n            imageHighLightedInex: index\n          });\n        }\n      }\n    };\n\n    _this.onImageClicked = function (index) {\n      var ref = _this.textInputs[index];\n      ref.focus();\n    };\n\n    _this.handleOnBlur = function (e, index) {\n      if (_this.props.onBlur) _this.props.onBlur(e, index);\n    };\n\n    _this.handleOnFocus = function (e, index) {\n      if (_this.state.focusInputIndex === index) {\n        try {\n          _this.textInputs[index].avoidSelectionChangeOnFocus();\n        } catch (error) {}\n\n        _this.setState({\n          imageHighLightedInex: -1\n        });\n      } else {\n        _this.setState({\n          imageHighLightedInex: -1,\n          focusInputIndex: index\n        }, function () {\n          _this.textInputs[index].forceSelectedStyles();\n        });\n\n        _this.avoidSelectionChangeOnFocus = false;\n      }\n\n      if (_this.props.onFocus) _this.props.onFocus(e, index);\n    };\n\n    _this.addImageContent = function (url, id, height, width) {\n      var focusInputIndex = _this.state.focusInputIndex;\n      var value = _this.props.value;\n      var index = focusInputIndex + 1;\n      var myHeight = _this.state.layoutWidth - 4 < width ? height * ((_this.state.layoutWidth - 4) / width) : height;\n      _this.contentHeights[index] = myHeight + 4;\n      var item = {\n        id: shortid.generate(),\n        imageId: id,\n        component: 'image',\n        url: url,\n        size: {\n          height: height,\n          width: width\n        }\n      };\n      var newConents = value;\n\n      if (newConents[index - 1] && newConents[index - 1].component === 'text') {\n        var _this$textInputs$spli = _this.textInputs[index - 1].splitItems(),\n            before = _this$textInputs$spli.before,\n            after = _this$textInputs$spli.after;\n\n        if (Array.isArray(before) && before.length > 0) {\n          var _beforeContent = {\n            component: 'text',\n            id: newConents[index - 1].id,\n            content: []\n          };\n\n          if (before[before.length - 1].text === '\\n' && before[before.length - 1].readOnly !== true) {\n            _beforeContent.content = update(before, {\n              $splice: [[before.length - 1, 1]]\n            });\n          } else {\n            _beforeContent.content = before;\n          }\n\n          newConents = update(newConents, _defineProperty({}, index - 1, {\n            $set: _beforeContent\n          }));\n\n          if (Array.isArray(after) && after.length > 0) {\n            var _afterContent = {\n              component: 'text',\n              id: shortid.generate(),\n              content: []\n            };\n\n            if (after[0].text.startsWith('\\n')) {\n              after[0].text = after[0].text.substring(1);\n              after[0].len = after[0].text.length;\n            }\n\n            _afterContent.content = after;\n            newConents = update(newConents, {\n              $splice: [[index, 0, _afterContent]]\n            });\n            _this.textInputs[index - 1].reCalculateTextOnUpate = true;\n          }\n        } else {\n          index -= 1;\n        }\n      }\n\n      newConents = update(newConents, {\n        $splice: [[index, 0, item]]\n      });\n\n      if (newConents.length === index + 1) {\n        newConents = update(newConents, {\n          $splice: [[index + 1, 0, getInitialObject()]]\n        });\n      }\n\n      _this.focusOnNextUpdate = index + 1;\n\n      _this.props.onValueChanged(newConents);\n    };\n\n    _this.removeImage = function (index) {\n      var value = _this.props.value;\n      var content = value[index];\n\n      if (content.component === 'image') {\n        var newConents = value;\n        var removedUrl = content.url;\n        var removedId = content.imageId;\n        var selectionStart = 0;\n        var removeCout = 1;\n\n        if (index > 0 && value[index - 1].component === 'text') {\n          selectionStart = _this.textInputs[index - 1].textLength;\n        }\n\n        if (value.length > index + 1 && index > 0 && value[index - 1].component === 'text' && value[index + 1].component === 'text') {\n          removeCout = 2;\n          var prevContent = value[index - 1];\n          var nextContent = value[index + 1];\n\n          if (_this.textInputs[index + 1].textLength > 0 && nextContent.content.length > 0) {\n            var firstItem = _objectSpread({}, nextContent.content[0]);\n\n            firstItem.text = \"\\n\" + firstItem.text;\n            firstItem.len = firstItem.text.length;\n            nextContent.content = update(nextContent.content, {\n              $splice: [[0, 1, firstItem]]\n            });\n            nextContent.content = update(nextContent.content, {\n              $splice: [[0, 0, {\n                id: shortid.generate(),\n                len: 1,\n                text: '\\n',\n                tag: 'body',\n                stype: [],\n                styleList: [{\n                  fontSize: 20\n                }],\n                NewLine: true\n              }]]\n            });\n            prevContent.content = update(prevContent.content, {\n              $push: nextContent.content\n            });\n            newConents = update(newConents, _defineProperty({}, index - 1, {\n              $set: prevContent\n            }));\n            var ref = _this.textInputs[index - 1];\n            ref.reCalculateTextOnUpate = true;\n            selectionStart += 1;\n          }\n        }\n\n        newConents = update(newConents, {\n          $splice: [[index, removeCout]]\n        });\n        _this.contentHeights = update(_this.contentHeights, {\n          $splice: [[index, removeCout]]\n        });\n        _this.focusOnNextUpdate = index - 1;\n        _this.selectionOnFocus = {\n          start: selectionStart,\n          end: selectionStart\n        };\n        if (_this.props.onValueChanged) _this.props.onValueChanged(newConents);\n\n        if (_this.props.onRemoveImage) {\n          _this.props.onRemoveImage({\n            id: removedId,\n            url: removedUrl\n          });\n        }\n      }\n    };\n\n    _this.onContentChanged = function (items, index) {\n      var input = _this.props.value[index];\n      input.content = items;\n\n      _this.props.onValueChanged(update(_this.props.value, _defineProperty({}, index, {\n        $set: input\n      })));\n    };\n\n    _this.onSelectedStyleChanged = function (styles) {\n      if (_this.props.onSelectedStyleChanged) {\n        _this.props.onSelectedStyleChanged(styles);\n      }\n    };\n\n    _this.onSelectedTagChanged = function (tag) {\n      if (_this.props.onSelectedTagChanged) {\n        _this.props.onSelectedTagChanged(tag);\n      }\n    };\n\n    _this.handleMeasureContentChanged = function (content) {\n      _this.setState({\n        measureContent: content\n      });\n    };\n\n    _this.onInputLayout = function (event, index, isLast) {\n      var height = event.nativeEvent.layout.height;\n      _this.contentHeights[index] = height;\n    };\n\n    _this.onLayout = function (event) {\n      var width = event.nativeEvent.layout.width;\n\n      _this.setState({\n        layoutWidth: width\n      });\n    };\n\n    _this.onRootLayout = function (event) {\n      var height = event.nativeEvent.layout.height;\n      var style = _this.props.style;\n      var paddingTop = style && style.padding ? style.padding : style && style.paddingTop ? style.paddingTop : 10;\n      var paddingBottom = style && style.padding ? style.padding : style && style.paddingBottom ? style.paddingBottom : 10;\n      _this._rootHei = height - paddingTop - paddingBottom;\n    };\n\n    _this.onMeasureLayout = function (event) {\n      var measureRequiredHei = 0;\n\n      for (var i = 0; i < _this.state.focusInputIndex; i++) {\n        measureRequiredHei += _this.contentHeights[i];\n      }\n\n      measureRequiredHei += event.nativeEvent.layout.height;\n      var measureOffset = Math.ceil(Math.max(0, measureRequiredHei - _this._rootHei));\n\n      if (_this._rootHei < measureRequiredHei && _this.scrollOffset < measureOffset) {\n        _this.scrollview.scrollTo({\n          y: measureOffset,\n          animated: false\n        });\n      }\n    };\n\n    _this.onScroll = function (event) {\n      _this.scrollOffset = Math.ceil(event.nativeEvent.contentOffset.y);\n    };\n\n    _this.textInputs = [];\n    _this.scrollview = null;\n    _this.prevSelection = {\n      start: 0,\n      end: 0\n    };\n    _this.beforePrevSelection = {\n      start: 0,\n      end: 0\n    };\n    _this.avoidSelectionChangeOnFocus = false;\n    _this.turnOnJustToolOnFocus = false;\n    _this.contentHeights = [];\n    _this.upComingStype = null;\n    _this.focusOnNextUpdate = -1;\n    _this.selectionOnFocus = null;\n    _this.scrollOffset = 0;\n    _this.defaultStyles = getDefaultStyles();\n    return _this;\n  }\n\n  _createClass(CNRichTextEditor, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.focusOnNextUpdate != -1 && this.textInputs.length > this.focusOnNextUpdate) {\n        var ref = this.textInputs[this.focusOnNextUpdate];\n        if (ref) ref.focus(this.selectionOnFocus);\n        this.setState({\n          focusInputIndex: this.focusOnNextUpdate\n        });\n        this.focusOnNextUpdate = -1;\n        this.selectionOnFocus = null;\n      }\n    }\n  }, {\n    key: \"findContentIndex\",\n    value: function findContentIndex(content, cursorPosition) {\n      var indx = 0;\n      var findIndx = -1;\n      var checknext = true;\n      var itemNo = 0;\n\n      for (var index = 0; index < content.length; index++) {\n        var element = content[index];\n        var ending = indx + element.len;\n\n        if (checknext === false) {\n          if (element.len === 0) {\n            findIndx = index;\n            itemNo = 0;\n            break;\n          } else {\n            break;\n          }\n        }\n\n        if (cursorPosition <= ending && cursorPosition >= indx) {\n          findIndx = index;\n          itemNo = cursorPosition - indx;\n          checknext = false;\n        }\n\n        indx += element.len;\n      }\n\n      if (findIndx == -1) {\n        findIndx = content.length - 1;\n      }\n\n      return {\n        findIndx: findIndx,\n        itemNo: itemNo\n      };\n    }\n  }, {\n    key: \"updateContent\",\n    value: function updateContent(content, item, index) {\n      var itemNo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var newContent = content;\n\n      if (itemNo > 0 && itemNo != 0 && content[index - 1].len != itemNo) {\n        var foundElement = content[index - 1];\n        beforeContent = {\n          id: foundElement.id,\n          len: itemNo,\n          stype: foundElement.stype,\n          styleList: foundElement.styleList,\n          tag: foundElement.tag,\n          text: foundElement.text.substring(0, itemNo)\n        };\n        afterContent = {\n          id: shortid.generate(),\n          len: foundElement.len - itemNo,\n          stype: foundElement.stype,\n          styleList: foundElement.styleList,\n          tag: foundElement.tag,\n          text: foundElement.text.substring(itemNo)\n        };\n        newContent = update(newContent, _defineProperty({}, index - 1, {\n          $set: beforeContent\n        }));\n        newContent = update(newContent, {\n          $splice: [[index, 0, afterContent]]\n        });\n      }\n\n      if (item !== null) {\n        newContent = update(newContent, {\n          $splice: [[index, 0, item]]\n        });\n      }\n\n      return newContent;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      try {\n        if (this.textInputs.length > 0) {\n          var ref = this.textInputs[this.textInputs.length - 1];\n          ref.focus({\n            start: 0,\n            end: 0\n          });\n        }\n      } catch (error) {}\n    }\n  }, {\n    key: \"insertImage\",\n    value: function insertImage(url) {\n      var _this2 = this;\n\n      var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var width = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n      if (height != null && width != null) {\n        this.addImageContent(url, id, height, width);\n      } else {\n        Image.getSize(url, function (width, height) {\n          _this2.addImageContent(url, id, height, width);\n        });\n      }\n    }\n  }, {\n    key: \"renderInput\",\n    value: function renderInput(input, index, isLast) {\n      var _this3 = this;\n\n      var measureScroll = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var styles = this.props.styleList ? this.props.styleList : this.defaultStyles;\n      return React.createElement(View, {\n        key: input.id,\n        onLayout: function onLayout(e) {\n          return _this3.onInputLayout(e, index, isLast);\n        },\n        style: {\n          flexGrow: isLast === true ? 1 : 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 9\n        }\n      }, React.createElement(CNTextInput, {\n        ref: function ref(input) {\n          _this3.textInputs[index] = input;\n        },\n        items: input.content,\n        onSelectedStyleChanged: this.onSelectedStyleChanged,\n        onSelectedTagChanged: this.onSelectedTagChanged,\n        onContentChanged: function onContentChanged(items) {\n          return _this3.onContentChanged(items, index);\n        },\n        onConnectToPrevClicked: function onConnectToPrevClicked() {\n          return _this3.onConnectToPrevClicked(index);\n        },\n        onMeasureContentChanged: measureScroll ? this.handleMeasureContentChanged : undefined,\n        onFocus: function onFocus(e) {\n          return _this3.handleOnFocus(e, index);\n        },\n        onBlur: function onBlur(e) {\n          return _this3.handleOnBlur(e, index);\n        },\n        returnKeyType: this.props.returnKeyType,\n        foreColor: this.props.foreColor,\n        styleList: styles,\n        placeholder: index === 0 ? this.props.placeholder : undefined,\n        style: [{\n          flexGrow: 1\n        }, this.props.textInputStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }\n      }));\n    }\n  }, {\n    key: \"renderImage\",\n    value: function renderImage(image, index) {\n      var _this4 = this;\n\n      var _image$size = image.size,\n          width = _image$size.width,\n          height = _image$size.height;\n      var myHeight, myWidth;\n\n      if (typeof width === 'undefined' && typeof height === 'undefined') {\n        width = 500;\n        height = 200;\n        Image.getSize(image.url, function (width, height) {\n          width = width;\n          height = height;\n          myHeight = _this4.state.layoutWidth - 4 < width ? height * ((_this4.state.layoutWidth - 4) / width) : height;\n          myWidth = _this4.state.layoutWidth - 4 < width ? _this4.state.layoutWidth - 4 : width;\n        });\n      }\n\n      myHeight = this.state.layoutWidth - 4 < width ? height * ((this.state.layoutWidth - 4) / width) : height;\n      myWidth = this.state.layoutWidth - 4 < width ? this.state.layoutWidth - 4 : width;\n      var _this$props$ImageComp = this.props.ImageComponent,\n          ImageComponent = _this$props$ImageComp === void 0 ? Image : _this$props$ImageComp;\n      return React.createElement(View, {\n        key: \"image\" + index,\n        style: {\n          flexDirection: 'row',\n          alignItems: 'flex-start',\n          backgroundColor: this.state.imageHighLightedInex === index ? 'yellow' : 'transparent',\n          paddingLeft: 2,\n          paddingRight: 2,\n          paddingTop: 2,\n          paddingBottom: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return _this4.onImageClicked(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }\n      }, React.createElement(ImageComponent, {\n        style: {\n          width: myWidth,\n          height: myHeight,\n          opacity: this.state.imageHighLightedInex === index ? 0.8 : 1\n        },\n        source: {\n          uri: image.url\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }\n      })), React.createElement(TextInput, {\n        onKeyPress: function onKeyPress(event) {\n          return _this4.handleKeyDown(event, index);\n        },\n        multiline: false,\n        style: {\n          fontSize: myHeight * 0.65,\n          borderWidth: 0,\n          paddingBottom: 1,\n          width: 1\n        },\n        ref: function ref(component) {\n          return _this4.textInputs[index] = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }\n      }));\n    }\n  }, {\n    key: \"applyToolbar\",\n    value: function applyToolbar(toolType) {\n      var focusInputIndex = this.state.focusInputIndex;\n\n      if (toolType === 'body' || toolType === 'title' || toolType === 'heading' || toolType === 'ul' || toolType === 'ol') {\n        this.textInputs[focusInputIndex].applyTag(toolType);\n      } else if (toolType == 'image') {\n        this.setState({\n          showAddImageModal: true\n        });\n      } else {\n          this.textInputs[focusInputIndex].applyStyle(toolType);\n        }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props = this.props,\n          value = _this$props.value,\n          style = _this$props.style,\n          contentContainerStyle = _this$props.contentContainerStyle,\n          _this$props$measureIn = _this$props.measureInputScroll,\n          measureInputScroll = _this$props$measureIn === void 0 ? true : _this$props$measureIn;\n      var styleList = this.props.styleList ? this.props.styleList : this.defaultStyles;\n      return React.createElement(View, {\n        style: [{\n          flex: 1,\n          padding: 10\n        }, style],\n        onLayout: this.onRootLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 9\n        }\n      }, React.createElement(ScrollView, {\n        ref: function ref(view) {\n          return _this5.scrollview = view;\n        },\n        onScroll: measureInputScroll && IS_IOS ? this.onScroll : undefined,\n        scrollEventThrottle: 16,\n        contentContainerStyle: [{\n          flexGrow: 1,\n          alignContent: 'flex-start',\n          justifyContent: 'flex-start'\n        }, contentContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          alignContent: 'flex-start',\n          justifyContent: 'flex-start'\n        },\n        onLayout: this.onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }\n      }, _.map(value, function (item, index) {\n        if (item.component === 'text') {\n          return _this5.renderInput(item, index, index === value.length - 1, measureInputScroll && IS_IOS);\n        }\n\n        if (item.component === 'image') {\n          return _this5.renderImage(item, index);\n        }\n      }), measureInputScroll && React.createElement(View, {\n        onLayout: this.onMeasureLayout,\n        pointerEvents: \"none\",\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          opacity: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 21\n        }\n      }, React.createElement(CNTextInput, {\n        ref: function ref(input) {\n          _this5.measureInput = input;\n        },\n        items: this.state.measureContent,\n        styleList: styleList,\n        style: {\n          width: this.state.layoutWidth\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 23\n        }\n      })))));\n    }\n  }]);\n\n  return CNRichTextEditor;\n}(Component);\n\nexport default CNRichTextEditor;","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/node_modules/react-native-cn-richtext-editor/src/CNRichTextEditor.js"],"names":["React","Component","_","update","getInitialObject","getDefaultStyles","CNTextInput","shortid","require","IS_IOS","Platform","OS","CNRichTextEditor","props","state","imageHighLightedInex","layoutWidth","styles","selection","start","end","justToolAdded","avoidUpdateText","focusInputIndex","measureContent","onConnectToPrevClicked","index","value","component","ref","textInputs","focus","handleKeyDown","e","avoidUpdateStyle","item","nativeEvent","key","removeImage","setState","onImageClicked","handleOnBlur","onBlur","handleOnFocus","avoidSelectionChangeOnFocus","error","forceSelectedStyles","onFocus","addImageContent","url","id","height","width","myHeight","contentHeights","generate","imageId","size","newConents","splitItems","before","after","Array","isArray","length","beforeContent","content","text","readOnly","$splice","$set","afterContent","startsWith","substring","len","reCalculateTextOnUpate","focusOnNextUpdate","onValueChanged","removedUrl","removedId","selectionStart","removeCout","textLength","prevContent","nextContent","firstItem","tag","stype","styleList","fontSize","NewLine","$push","selectionOnFocus","onRemoveImage","onContentChanged","items","input","onSelectedStyleChanged","onSelectedTagChanged","handleMeasureContentChanged","onInputLayout","event","isLast","layout","onLayout","onRootLayout","style","paddingTop","padding","paddingBottom","_rootHei","onMeasureLayout","measureRequiredHei","i","measureOffset","Math","ceil","max","scrollOffset","scrollview","scrollTo","y","animated","onScroll","contentOffset","prevSelection","beforePrevSelection","turnOnJustToolOnFocus","upComingStype","defaultStyles","prevProps","prevState","cursorPosition","indx","findIndx","checknext","itemNo","element","ending","newContent","foundElement","Image","getSize","measureScroll","flexGrow","undefined","returnKeyType","foreColor","placeholder","textInputStyle","image","myWidth","ImageComponent","flexDirection","alignItems","backgroundColor","paddingLeft","paddingRight","opacity","uri","borderWidth","toolType","applyTag","showAddImageModal","applyStyle","contentContainerStyle","measureInputScroll","flex","view","alignContent","justifyContent","map","renderInput","renderImage","position","top","left","measureInput"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  TextInput, View, Image,\r\n  ScrollView, Platform,\r\n  TouchableWithoutFeedback,\r\n} from 'react-native';\r\nimport _ from 'lodash';\r\nimport update from 'immutability-helper';\r\nimport { getInitialObject, getDefaultStyles } from './Convertors';\r\nimport CNTextInput from './CNTextInput';\r\n\r\nconst shortid = require('shortid');\r\n\r\nconst IS_IOS = Platform.OS === 'ios';\r\n\r\nclass CNRichTextEditor extends Component {\r\n    state = {\r\n      imageHighLightedInex: -1,\r\n      layoutWidth: 400,\r\n      styles: [],\r\n      selection: { start: 0, end: 0 },\r\n      justToolAdded: false,\r\n      avoidUpdateText: false,\r\n      focusInputIndex: 0,\r\n      measureContent: [],\r\n    };\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.textInputs = [];\r\n      this.scrollview = null;\r\n      this.prevSelection = { start: 0, end: 0 };\r\n      this.beforePrevSelection = { start: 0, end: 0 };\r\n      this.avoidSelectionChangeOnFocus = false;\r\n      this.turnOnJustToolOnFocus = false;\r\n      this.contentHeights = [];\r\n      this.upComingStype = null;\r\n      this.focusOnNextUpdate = -1;\r\n      this.selectionOnFocus = null;\r\n      this.scrollOffset = 0;\r\n      this.defaultStyles = getDefaultStyles();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (this.focusOnNextUpdate != -1 && this.textInputs.length > this.focusOnNextUpdate) {\r\n        const ref = this.textInputs[this.focusOnNextUpdate];\r\n         if(ref) ref.focus(this.selectionOnFocus);\r\n        this.setState({focusInputIndex: this.focusOnNextUpdate});\r\n        this.focusOnNextUpdate = -1;\r\n        this.selectionOnFocus = null;\r\n      }\r\n    }\r\n\r\n    findContentIndex(content, cursorPosition) {\r\n      let indx = 0;\r\n      let findIndx = -1;\r\n      let checknext = true;\r\n      let itemNo = 0;\r\n\r\n      for (let index = 0; index < content.length; index++) {\r\n        const element = content[index];\r\n\r\n        const ending = indx + element.len;\r\n\r\n        if (checknext === false) {\r\n          if (element.len === 0) {\r\n            findIndx = index;\r\n            itemNo = 0;\r\n            break;\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n        if (cursorPosition <= ending && cursorPosition >= indx) {\r\n          // element.len += 1;\r\n          findIndx = index;\r\n          itemNo = cursorPosition - indx;\r\n\r\n\r\n          checknext = false;\r\n        }\r\n\r\n        indx += element.len;\r\n      }\r\n\r\n      if (findIndx == -1) {\r\n        findIndx = content.length - 1;\r\n      }\r\n\r\n      return { findIndx, itemNo };\r\n    }\r\n\r\n    updateContent(content, item, index, itemNo = 0) {\r\n      let newContent = content;\r\n      if (itemNo > 0 && itemNo != 0 && content[index - 1].len != itemNo) {\r\n        const foundElement = content[index - 1];\r\n        beforeContent = {\r\n          id: foundElement.id,\r\n          len: itemNo,\r\n          stype: foundElement.stype,\r\n          styleList: foundElement.styleList,\r\n          tag: foundElement.tag,\r\n          text: foundElement.text.substring(0, itemNo),\r\n        };\r\n\r\n        afterContent = {\r\n          id: shortid.generate(),\r\n          len: foundElement.len - itemNo,\r\n          stype: foundElement.stype,\r\n          styleList: foundElement.styleList,\r\n          tag: foundElement.tag,\r\n          text: foundElement.text.substring(itemNo),\r\n        };\r\n\r\n        newContent = update(newContent, { [index - 1]: { $set: beforeContent } });\r\n        newContent = update(newContent, { $splice: [[index, 0, afterContent]] });\r\n      }\r\n      if (item !== null) {\r\n        newContent = update(newContent, { $splice: [[index, 0, item]] });\r\n      }\r\n\r\n\r\n      return newContent;\r\n    }\r\n\r\n    onConnectToPrevClicked = (index) => {\r\n      const { value } = this.props;\r\n\r\n      if (index > 0 && value[index - 1].component == 'image'\r\n      ) {\r\n        const ref = this.textInputs[index - 1];\r\n        ref.focus();\r\n      }\r\n    }\r\n\r\n    handleKeyDown = (e, index) => {\r\n      this.avoidUpdateStyle = true;\r\n\r\n      const { value } = this.props;\r\n\r\n      const item = value[index];\r\n      if (item.component === 'image' && e.nativeEvent.key === 'Backspace') {\r\n        if (this.state.imageHighLightedInex === index) {\r\n          this.removeImage(index);\r\n        } else {\r\n          this.setState({\r\n            imageHighLightedInex: index,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    onImageClicked = (index) => {\r\n      const ref = this.textInputs[index];\r\n      ref.focus();\r\n      //   this.setState({\r\n      //       imageHighLightedInex: index\r\n      //   })\r\n    }\r\n\r\n    handleOnBlur = (e, index) => {\r\n      if(this.props.onBlur)\r\n        this.props.onBlur(e,index);\r\n    }\r\n\r\n    handleOnFocus = (e, index) => {\r\n      if (this.state.focusInputIndex === index) {\r\n        try {\r\n          this.textInputs[index].avoidSelectionChangeOnFocus();\r\n        } catch (error) {\r\n          // console.log(error);\r\n        }\r\n\r\n        this.setState({\r\n          imageHighLightedInex: -1,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          imageHighLightedInex: -1,\r\n          focusInputIndex: index,\r\n\r\n        }, () => {\r\n          this.textInputs[index].forceSelectedStyles();\r\n        });\r\n        this.avoidSelectionChangeOnFocus = false;\r\n      }\r\n\r\n      if(this.props.onFocus)\r\n        this.props.onFocus(e, index);\r\n    }\r\n\r\n    focus() {\r\n      try {\r\n        if (this.textInputs.length > 0) {\r\n          const ref = this.textInputs[this.textInputs.length - 1];\r\n          ref.focus({\r\n            start: 0, // ref.textLength,\r\n            end: 0, // ref.textLength\r\n          });\r\n        }\r\n      } catch (error) {\r\n        // console.log(error);\r\n      }\r\n    }\r\n\r\n    addImageContent = (url, id, height, width) => {\r\n      const { focusInputIndex } = this.state;\r\n      const { value } = this.props;\r\n      let index = focusInputIndex + 1;\r\n\r\n      const myHeight = (this.state.layoutWidth - 4 < width) ? height * ((this.state.layoutWidth - 4) / width) : height;\r\n      this.contentHeights[index] = myHeight + 4;\r\n\r\n      const item = {\r\n        id: shortid.generate(),\r\n        imageId: id,\r\n        component: 'image',\r\n        url,\r\n        size: {\r\n          height,\r\n          width,\r\n        },\r\n      };\r\n\r\n      let newConents = value;\r\n      if (newConents[index - 1] && newConents[index - 1].component === 'text') {\r\n        const { before, after } = this.textInputs[index - 1].splitItems();\r\n\r\n        if (Array.isArray(before) && before.length > 0) {\r\n          const beforeContent = {\r\n            component: 'text',\r\n            id: newConents[index - 1].id,\r\n            content: [],\r\n          };\r\n\r\n          if (before[before.length - 1].text === '\\n' && before[before.length - 1].readOnly !== true) {\r\n            beforeContent.content = update(before, { $splice: [[before.length - 1, 1]] });\r\n          } else {\r\n            beforeContent.content = before;\r\n          }\r\n\r\n          newConents = update(newConents, { [index - 1]: { $set: beforeContent } });\r\n\r\n          if (Array.isArray(after) && after.length > 0) {\r\n            const afterContent = {\r\n              component: 'text',\r\n              id: shortid.generate(),\r\n              content: [],\r\n            };\r\n\r\n            if (after[0].text.startsWith('\\n')) {\r\n              after[0].text = after[0].text.substring(1);\r\n              after[0].len = after[0].text.length;\r\n            }\r\n\r\n            afterContent.content = after;\r\n\r\n            newConents = update(newConents, { $splice: [[index, 0, afterContent]] });\r\n            this.textInputs[index - 1].reCalculateTextOnUpate = true;\r\n          }\r\n        } else {\r\n          index -= 1;\r\n        }\r\n      }\r\n\r\n      newConents = update(newConents, { $splice: [[index, 0, item]] });\r\n\r\n      if (newConents.length === index + 1) {\r\n        newConents = update(newConents, { $splice: [[index + 1, 0, getInitialObject()]] });\r\n      }\r\n\r\n      this.focusOnNextUpdate = index + 1;\r\n\r\n      this.props.onValueChanged(\r\n        newConents,\r\n      );\r\n    }\r\n\r\n    insertImage(url, id = null, height = null, width = null) {\r\n      if (height != null && width != null) {\r\n        this.addImageContent(url, id, height, width);\r\n      } else {\r\n        Image.getSize(url, (width, height) => {\r\n          this.addImageContent(url, id, height, width);\r\n        });\r\n      }\r\n    }\r\n\r\n    removeImage =(index) => {\r\n      const { value } = this.props;\r\n      const content = value[index];\r\n\r\n\r\n      if (content.component === 'image') {\r\n        let newConents = value;\r\n        const removedUrl = content.url;\r\n        const removedId = content.imageId;\r\n\r\n        let selectionStart = 0;\r\n        let removeCout = 1;\r\n\r\n        if (index > 0\r\n                && value[index - 1].component === 'text'\r\n        ) {\r\n          selectionStart = this.textInputs[index - 1].textLength;\r\n        }\r\n\r\n        if (value.length > index + 1\r\n                && index > 0\r\n                && value[index - 1].component === 'text'\r\n                && value[index + 1].component === 'text'\r\n        ) {\r\n          removeCout = 2;\r\n\r\n          const prevContent = value[index - 1];\r\n          const nextContent = value[index + 1];\r\n\r\n          if (this.textInputs[index + 1].textLength > 0\r\n                    && nextContent.content.length > 0) {\r\n            const firstItem = { ...nextContent.content[0] };\r\n            firstItem.text = `\\n${firstItem.text}`;\r\n            firstItem.len = firstItem.text.length;\r\n\r\n            nextContent.content = update(nextContent.content, {\r\n              $splice: [[0, 1,\r\n                firstItem,\r\n              ]],\r\n            });\r\n\r\n\r\n            nextContent.content = update(nextContent.content, {\r\n              $splice: [[0, 0,\r\n                {\r\n                  id: shortid.generate(),\r\n                  len: 1,\r\n                  text: '\\n',\r\n                  tag: 'body',\r\n                  stype: [],\r\n                  styleList: [{\r\n                    fontSize: 20,\r\n                  }],\r\n                  NewLine: true,\r\n                },\r\n              ]],\r\n            });\r\n\r\n            prevContent.content = update(prevContent.content, { $push: nextContent.content });\r\n\r\n            newConents = update(newConents, { [index - 1]: { $set: prevContent } });\r\n            const ref = this.textInputs[index - 1];\r\n            ref.reCalculateTextOnUpate = true;\r\n            selectionStart += 1;\r\n            // ref.textLength = ref.textLength + 2 + this.textInputs[index + 1].textLength;\r\n          }\r\n        }\r\n\r\n        newConents = update(newConents, { $splice: [[index, removeCout]] });\r\n\r\n        this.contentHeights = update(this.contentHeights, { $splice: [[index, removeCout]] });\r\n\r\n        this.focusOnNextUpdate = index - 1;\r\n        this.selectionOnFocus = { start: selectionStart, end: selectionStart };\r\n\r\n        if (this.props.onValueChanged) this.props.onValueChanged(newConents);\r\n\r\n        if (this.props.onRemoveImage) {\r\n          this.props.onRemoveImage(\r\n            { id: removedId, url: removedUrl },\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    onContentChanged = (items, index) => {\r\n      const input = this.props.value[index];\r\n      input.content = items;\r\n\r\n      this.props.onValueChanged(\r\n        update(this.props.value, { [index]: { $set: input } }),\r\n      );\r\n    }\r\n\r\n    onSelectedStyleChanged = (styles) => {\r\n      if (this.props.onSelectedStyleChanged) {\r\n        this.props.onSelectedStyleChanged(styles);\r\n      }\r\n    }\r\n\r\n    onSelectedTagChanged = (tag) => {\r\n      if (this.props.onSelectedTagChanged) {\r\n        this.props.onSelectedTagChanged(tag);\r\n      }\r\n    }\r\n\r\n    handleMeasureContentChanged = (content) => {\r\n      this.setState({\r\n        measureContent: content,\r\n      });\r\n    }\r\n\r\n    onInputLayout = (event, index, isLast) => {\r\n      const { height } = event.nativeEvent.layout;\r\n      this.contentHeights[index] = height;\r\n    }\r\n\r\n    renderInput(input, index, isLast, measureScroll = true) {\r\n      const styles = this.props.styleList ? this.props.styleList : this.defaultStyles;\r\n      return (\r\n        <View\r\n          key={input.id}\r\n          onLayout={e => this.onInputLayout(e, index, isLast)}\r\n          style={{\r\n            flexGrow: isLast === true ? 1 : 0,\r\n          }}\r\n        >\r\n          <CNTextInput\r\n            ref={(input) => { this.textInputs[index] = input; }}\r\n            items={input.content}\r\n            onSelectedStyleChanged={this.onSelectedStyleChanged}\r\n            onSelectedTagChanged={this.onSelectedTagChanged}\r\n            onContentChanged={items => this.onContentChanged(items, index)}\r\n            onConnectToPrevClicked={() => this.onConnectToPrevClicked(index)}\r\n            onMeasureContentChanged={measureScroll ? this.handleMeasureContentChanged : undefined}\r\n            onFocus={(e) => this.handleOnFocus(e, index)}\r\n            onBlur={(e)=> this.handleOnBlur(e, index)}\r\n            returnKeyType={this.props.returnKeyType}\r\n            foreColor={this.props.foreColor}\r\n            styleList={styles}\r\n\t\t\t      placeholder={index === 0 ? this.props.placeholder : undefined}\r\n            style={[{\r\n              flexGrow: 1,\r\n            }, this.props.textInputStyle]\r\n                    }\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n\r\n    renderImage(image, index) {\r\n      let { width, height } = image.size;\r\n      let myHeight, myWidth;\r\n\r\n      if(typeof width === 'undefined' && typeof height === 'undefined'){\r\n        width = 500;\r\n        height = 200;\r\n        Image.getSize(image.url, (width, height) => {\r\n          width = width;\r\n          height = height;\r\n          myHeight = (this.state.layoutWidth - 4 < width) ? height * ((this.state.layoutWidth - 4) / width) : height;\r\n          myWidth = (this.state.layoutWidth - 4 < width) ? this.state.layoutWidth - 4 : width;\r\n        });\r\n      }\r\n      \r\n      myHeight = (this.state.layoutWidth - 4 < width) ? height * ((this.state.layoutWidth - 4) / width) : height;\r\n      myWidth = (this.state.layoutWidth - 4 < width) ? this.state.layoutWidth - 4 : width;\r\n      \r\n      const { ImageComponent = Image } = this.props;\r\n      return (\r\n        <View\r\n          key={`image${index}`}\r\n          style={{\r\n\r\n            flexDirection: 'row',\r\n            alignItems: 'flex-start',\r\n            backgroundColor: this.state.imageHighLightedInex === index ? 'yellow' : 'transparent',\r\n            paddingLeft: 2,\r\n            paddingRight: 2,\r\n            paddingTop: 2,\r\n            paddingBottom: 2,\r\n          }}\r\n        >\r\n          <TouchableWithoutFeedback\r\n            onPress={() => this.onImageClicked(index)}\r\n          >\r\n            <ImageComponent\r\n              style={{\r\n                width: myWidth,\r\n                height: myHeight,\r\n                opacity: this.state.imageHighLightedInex === index ? 0.8 : 1,\r\n              }}\r\n              source={{ uri: image.url }}\r\n            />\r\n          </TouchableWithoutFeedback>\r\n          <TextInput\r\n            onKeyPress={event => this.handleKeyDown(event, index)}\r\n                        // onSelectionChange={(event) =>this.onSelectionChange(event, index)}\r\n            multiline={false}\r\n            style={{\r\n              fontSize: myHeight * 0.65,\r\n              borderWidth: 0,\r\n              paddingBottom: 1,\r\n              width: 1,\r\n            }}\r\n            ref={component => this.textInputs[index] = component}\r\n          />\r\n        </View>\r\n\r\n      );\r\n    }\r\n\r\n    applyToolbar(toolType) {\r\n      const { focusInputIndex } = this.state;\r\n\r\n      if (toolType === 'body' || toolType === 'title' || toolType === 'heading' || toolType === 'ul' || toolType === 'ol') {\r\n        this.textInputs[focusInputIndex].applyTag(toolType);\r\n      } else if (toolType == 'image') {\r\n        // convertToHtmlStringconvertToHtmlString(this.state.contents);\r\n\r\n        this.setState({ showAddImageModal: true });\r\n      } else\r\n      // if(toolType === 'bold' || toolType === 'italic' || toolType === 'underline' || toolType === 'lineThrough')\r\n      { this.textInputs[focusInputIndex].applyStyle(toolType); }\r\n    }\r\n\r\n    onLayout = (event) => {\r\n      const { width } = event.nativeEvent.layout;\r\n\r\n      this.setState({\r\n        layoutWidth: width,\r\n      });\r\n    }\r\n\r\n    onRootLayout = (event) => {\r\n      const { height } = event.nativeEvent.layout;\r\n      const { style } = this.props;\r\n      const paddingTop = (style && style.padding) ? style.padding\r\n        : (style && style.paddingTop) ? style.paddingTop : 10;\r\n      const paddingBottom = (style && style.padding) ? style.padding\r\n        : (style && style.paddingBottom) ? style.paddingBottom : 10;\r\n\r\n      this._rootHei = height - paddingTop - paddingBottom;\r\n    }\r\n\r\n    onMeasureLayout = (event) => {\r\n      let measureRequiredHei = 0;\r\n      for (let i = 0; i < this.state.focusInputIndex; i++) {\r\n        measureRequiredHei += this.contentHeights[i];\r\n      }\r\n      measureRequiredHei += (event.nativeEvent.layout.height);\r\n\r\n      const measureOffset = Math.ceil(Math.max(0, measureRequiredHei - this._rootHei));\r\n\r\n      if (this._rootHei < measureRequiredHei\r\n            && this.scrollOffset < measureOffset\r\n      ) {\r\n        this.scrollview.scrollTo({ y: measureOffset, animated: false });\r\n      }\r\n    }\r\n\r\n    onScroll = (event) => {\r\n      this.scrollOffset = Math.ceil(event.nativeEvent.contentOffset.y);\r\n    }\r\n\r\n    render() {\r\n      const {\r\n        value, style, contentContainerStyle, measureInputScroll = true,\r\n      } = this.props;\r\n      const styleList = this.props.styleList ? this.props.styleList : this.defaultStyles;\r\n\r\n      return (\r\n        <View\r\n          style={[{\r\n            flex: 1,\r\n            padding: 10,\r\n          }, style]}\r\n          onLayout={this.onRootLayout}\r\n        >\r\n          <ScrollView\r\n            ref={view => this.scrollview = view}\r\n            onScroll={measureInputScroll && IS_IOS ? this.onScroll : undefined}\r\n            scrollEventThrottle={16}\r\n            contentContainerStyle={[{\r\n              flexGrow: 1,\r\n              alignContent: 'flex-start',\r\n              justifyContent: 'flex-start',\r\n            }, contentContainerStyle]}\r\n          >\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                alignContent: 'flex-start',\r\n                justifyContent: 'flex-start',\r\n              }}\r\n              onLayout={this.onLayout}\r\n            >\r\n              {\r\n                        _.map(value, (item, index) => {\r\n                          if (item.component === 'text') {\r\n                            return (\r\n                              this.renderInput(item, index, index === value.length - 1, measureInputScroll && IS_IOS)\r\n                            );\r\n                          }\r\n                          if (item.component === 'image') {\r\n                            return (\r\n                              this.renderImage(item, index)\r\n                            );\r\n                          }\r\n                        })\r\n                    }\r\n              {\r\n                    // Invisible Input to measure scroll in Ios\r\n                    measureInputScroll\r\n                    && (\r\n                    <View\r\n                      onLayout={this.onMeasureLayout}\r\n                      pointerEvents=\"none\"\r\n                      style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        opacity: 0,\r\n                      }}\r\n                    >\r\n                      <CNTextInput\r\n                        ref={(input) => { this.measureInput = input; }}\r\n                        items={this.state.measureContent}\r\n                        styleList={styleList}\r\n                        style={{\r\n                          width: this.state.layoutWidth,\r\n                        }}\r\n                      />\r\n                    </View>\r\n                    )\r\n                    }\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n      );\r\n    }\r\n}\r\n\r\nexport default CNRichTextEditor;\r\n"]},"metadata":{},"sourceType":"module"}