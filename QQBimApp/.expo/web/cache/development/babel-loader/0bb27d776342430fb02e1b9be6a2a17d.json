{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useMemo, useReducer } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { StackScreen, DrawerScreen } from \"./src/users/NavigationScreen\";\nimport { SplashScreen } from \"./src/users/ScreemFolder/OtherScreen\";\nimport * as SQLite from 'expo-sqlite';\nimport { navigationAdmin } from \"./src/admin\";\nexport var AuthContext = React.createContext();\nglobal.db = SQLite.openDatabase({\n  name: 'SQLite',\n  location: 'default',\n  createFromLocation: '~SQLite.db'\n}, function () {}, function (error) {\n  console.log(\"ERROR: \" + error);\n});\nvar RootStack = createStackNavigator();\n\nfunction App(props) {\n  var initialState = {\n    isLoading: true,\n    isSignout: false,\n    userToken: null,\n    userRole: null,\n    user: []\n  };\n\n  var reducer = function reducer(state, action) {\n    switch (action.type) {\n      case 'RESTORE_TOKEN':\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userRole: action.userRole,\n          userToken: action.userToken,\n          user: action.user,\n          isLoading: false\n        });\n\n      case 'SIGN_IN':\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userRole: action.userRole,\n          user: action.user,\n          isSignout: false,\n          userToken: action.userToken\n        });\n\n      case 'SIGN_OUT':\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userRole: null,\n          isSignout: true,\n          userToken: null,\n          user: null\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var authContext = useMemo(function () {\n    return {\n      signIn: function signIn(res) {\n        var userToken, userRole, user;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userToken = String(res.token);\n                userRole = res.role;\n                user = JSON.stringify(res);\n                _context.prev = 3;\n                _context.next = 6;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', userToken));\n\n              case 6:\n                _context.next = 8;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('user', user));\n\n              case 8:\n                _context.next = 10;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('userRole', userRole));\n\n              case 10:\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](3);\n                console.log(_context.t0);\n\n              case 15:\n                dispatch({\n                  type: 'SIGN_IN',\n                  userRole: userRole,\n                  userToken: userToken,\n                  user: user\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[3, 12]], Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userToken'));\n\n              case 3:\n                _context2.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('user'));\n\n              case 5:\n                _context2.next = 7;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userRole'));\n\n              case 7:\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 12:\n                dispatch({\n                  type: 'SIGN_OUT',\n                  userRole: null,\n                  userToken: null,\n                  user: null\n                });\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 9]], Promise);\n      },\n      signUp: function signUp(res) {\n        var userToken, userRole;\n        return _regeneratorRuntime.async(function signUp$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                userToken = String(res.token);\n                userRole = String(res.role);\n                _context3.prev = 2;\n                _context3.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', userToken));\n\n              case 5:\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](2);\n                console.log(_context3.t0);\n\n              case 10:\n                dispatch({\n                  type: 'SIGN_IN',\n                  userRole: userRole,\n                  userToken: userToken\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, [[2, 7]], Promise);\n      }\n    };\n  }, []);\n  useEffect(function () {\n    setTimeout(function _callee() {\n      var userToken, userRole;\n      return _regeneratorRuntime.async(function _callee$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              userToken = null;\n              userRole = null;\n              _context4.prev = 2;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n            case 5:\n              userToken = _context4.sent;\n              _context4.next = 8;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userRole'));\n\n            case 8:\n              userRole = _context4.sent;\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](2);\n              console.log(_context4.t0);\n\n            case 14:\n              dispatch({\n                type: 'RESTORE_TOKEN',\n                userToken: userToken,\n                userRole: userRole\n              });\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[2, 11]], Promise);\n    }, 1000);\n  }, []);\n\n  if (state.isLoading) {\n    return React.createElement(SplashScreen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, React.createElement(RootStack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, state.userToken == null ? React.createElement(RootStack.Screen, {\n    name: \"SignIn\",\n    component: StackScreen,\n    options: {\n      title: 'Sign in',\n      headerShown: false,\n      animationTypeForReplace: state.isSignout ? 'pop' : 'push'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }) : state.userRole == 'user' ? React.createElement(RootStack.Screen, {\n    name: \"Home\",\n    component: DrawerScreen,\n    options: {\n      title: 'Home',\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }) : state.userRole == 'manager' ? React.createElement(RootStack.Screen, {\n    name: \"admin\",\n    component: navigationAdmin,\n    options: {\n      title: 'admin',\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }) : React.createElement(RootStack.Screen, {\n    name: \"SignIn\",\n    component: StackScreen,\n    options: {\n      title: 'Sign in',\n      headerShown: false,\n      animationTypeForReplace: state.isSignout ? 'pop' : 'push'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/App.js"],"names":["React","useEffect","useMemo","useReducer","NavigationContainer","createStackNavigator","AsyncStorage","StackScreen","DrawerScreen","SplashScreen","SQLite","navigationAdmin","AuthContext","createContext","global","db","openDatabase","name","location","createFromLocation","error","console","log","RootStack","App","props","initialState","isLoading","isSignout","userToken","userRole","user","reducer","state","action","type","dispatch","authContext","signIn","res","String","token","role","JSON","stringify","setItem","signOut","removeItem","signUp","setTimeout","getItem","title","headerShown","animationTypeForReplace"],"mappings":"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","sourcesContent":["import React, {useEffect, useMemo, useReducer} from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport {StackScreen, DrawerScreen} from './src/users/NavigationScreen';\nimport {SplashScreen} from './src/users/ScreemFolder/OtherScreen';\nimport * as SQLite from 'expo-sqlite';\nimport { navigationAdmin } from \"./src/admin\";\nexport const AuthContext = React.createContext();\n\nglobal.db = SQLite.openDatabase(\n  {\n    name: 'SQLite',\n    location: 'default',\n    createFromLocation: '~SQLite.db',\n  },\n  () => { },\n  error => {\n    console.log(\"ERROR: \" + error);\n  }\n);\n\nconst RootStack = createStackNavigator();\nfunction App(props) {\n  const initialState = {\n    isLoading: true,\n    isSignout: false,\n    userToken: null,\n    userRole: null,\n    user: []\n  }\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'RESTORE_TOKEN':\n        return {\n          ...state,\n          userRole: action.userRole,\n          userToken: action.userToken,\n          user: action.user,\n          isLoading: false,\n        };\n      case 'SIGN_IN':\n        return {\n          ...state,\n          userRole: action.userRole,\n          user: action.user,\n          isSignout: false,\n          userToken: action.userToken,\n        };\n      case 'SIGN_OUT':\n        return {\n          ...state,\n          userRole: null,\n          isSignout: true,\n          userToken: null,\n          user: null\n        };\n      default:\n        return state;\n     }\n  }\n \n  const [state, dispatch] = useReducer(reducer, initialState);\n  const authContext = useMemo(() => ({\n    signIn: async(res) => {\n      const userToken = String(res.token);\n      const userRole = res.role;\n      const user = JSON.stringify(res);\n      // console.log(res);\n      try {\n        await AsyncStorage.setItem('userToken', userToken);\n        await AsyncStorage.setItem('user', user);\n        await AsyncStorage.setItem('userRole', userRole);\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({ type: 'SIGN_IN', userRole: userRole, userToken: userToken, user: user});\n    },\n    signOut: async() => {\n      // setUserToken(null);\n      // setIsLoading(false);\n      try {\n        await AsyncStorage.removeItem('userToken');\n        await AsyncStorage.removeItem('user');\n        await AsyncStorage.removeItem('userRole');\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({ type: 'SIGN_OUT', userRole: null, userToken: null, user: null });\n    },\n    signUp: async(res) => {\n      const userToken = String(res.token);\n      const userRole = String(res.role);\n      try {\n        await AsyncStorage.setItem('userToken', userToken);\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({ type: 'SIGN_IN', userRole: userRole, userToken: userToken });\n    },\n  }), []);\n\n  useEffect(() => {\n    setTimeout(async() => {\n      // setIsLoading(false);\n      let userToken;\n      userToken = null;\n      let userRole = null;\n      try {\n        userToken = await AsyncStorage.getItem('userToken');\n        userRole = await AsyncStorage.getItem('userRole');\n      } catch(e) {\n        console.log(e);\n      }\n      // console.log('user token: ', userToken);\n      dispatch({ type: 'RESTORE_TOKEN', userToken: userToken, userRole: userRole });\n    }, 1000);\n  }, []);\n\n  if( state.isLoading ) {\n    return(\n      <SplashScreen/>\n    );\n  }\n  return (\n    <AuthContext.Provider value={authContext}>\n      <NavigationContainer>\n        <RootStack.Navigator>\n          {state.userToken == null ? (  \n              // No token found, user isn't signed in\n              <RootStack.Screen\n                name=\"SignIn\"\n                component={StackScreen}\n                options={{\n                  title: 'Sign in',\n                  headerShown: false,\n              // When logging out, a pop animation feels intuitive\n                  animationTypeForReplace: state.isSignout ? 'pop' : 'push',\n                }}\n              />\n            ) :  state.userRole == 'user'? (\n              // User is signed in\n              <RootStack.Screen name=\"Home\" component={DrawerScreen}  options={{\n                title: 'Home',\n                headerShown: false}}/>\n            ) : state.userRole == 'manager'? (\n              <RootStack.Screen\n                name=\"admin\"\n                component={navigationAdmin}\n                options={{\n                  title: 'admin',\n                  headerShown: false,\n                }}\n              />\n            ): (\n              <RootStack.Screen\n                name=\"SignIn\"\n                component={StackScreen}\n                options={{\n                  title: 'Sign in',\n                  headerShown: false,\n              // When logging out, a pop animation feels intuitive\n                  animationTypeForReplace: state.isSignout ? 'pop' : 'push',\n                }}\n              />\n            )}\n        </RootStack.Navigator>\n      </NavigationContainer>\n    </AuthContext.Provider>\n\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}