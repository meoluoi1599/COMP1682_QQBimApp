{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\users\\\\ScreemFolder\\\\StoryScreen\\\\EditStory.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Dropdown } from 'react-native-material-dropdown-v2';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useFocusEffect } from '@react-navigation/native';\n\nfunction EditStory(props) {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      title = _React$useState2[0],\n      setTitle = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      description = _React$useState4[0],\n      setDescription = _React$useState4[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _React$useState5 = React.useState(1),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      category = _React$useState6[0],\n      setCategory = _React$useState6[1];\n\n  var data = [{\n    id: 1,\n    value: 'Adventure'\n  }, {\n    id: 2,\n    value: 'LGBTQ+'\n  }, {\n    id: 3,\n    value: 'Humor'\n  }, {\n    id: 4,\n    value: 'Mystery'\n  }, {\n    id: 5,\n    value: 'Romance'\n  }, {\n    id: 6,\n    value: 'Short Story'\n  }, {\n    id: 7,\n    value: 'Teen Fiction'\n  }, {\n    id: 8,\n    value: 'New Adult'\n  }, {\n    id: 9,\n    value: 'Urban'\n  }, {\n    id: 10,\n    value: 'Historical Fiction'\n  }, {\n    id: 11,\n    value: 'Horror'\n  }, {\n    id: 12,\n    value: 'Poetry'\n  }];\n  var formdata = new FormData();\n  formdata.append(\"title_story\", title);\n  formdata.append(\"story_description\", description);\n  formdata.append(\"story_id\", props.route.params.item.author_id);\n  formdata.append(\"category_id\", category);\n\n  var pickImage = function pickImage() {\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            (function _callee() {\n              var _await$ImagePicker$re, status, result;\n\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      if (!(Platform.OS !== 'web')) {\n                        _context.next = 14;\n                        break;\n                      }\n\n                      _context.next = 3;\n                      return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n                    case 3:\n                      _await$ImagePicker$re = _context.sent;\n                      status = _await$ImagePicker$re.status;\n\n                      if (!(status !== 'granted')) {\n                        _context.next = 9;\n                        break;\n                      }\n\n                      alert('Sorry, we need camera roll permissions to make this work!');\n                      _context.next = 14;\n                      break;\n\n                    case 9:\n                      _context.next = 11;\n                      return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                        mediaTypes: ImagePicker.MediaTypeOptions.All,\n                        allowsEditing: true,\n                        aspect: [4, 6],\n                        quality: 1\n                      }));\n\n                    case 11:\n                      result = _context.sent;\n                      console.log(result);\n\n                      if (!result.cancelled) {\n                        formdata.append(\"file\", {\n                          name: 'quyendog.jpg',\n                          uri: result.uri,\n                          type: 'image/jpeg'\n                        });\n                        setImage(result.uri);\n                      }\n\n                    case 14:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            })();\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addNewNotification = function addNewNotification() {\n    fetch('http://192.168.0.102:19000/newNotification', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'user_id': props.route.params.item.author_id,\n        'content': 'Update story: ' + title\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      console.log('susses');\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  useFocusEffect(React.useCallback(function () {\n    setTitle(props.route.params.item.story_title);\n    setCategory(props.route.params.item.category_id);\n    setDescription(props.route.params.item.story_description);\n    setImage(props.route.params.item.story_img);\n    props.navigation.dangerouslyGetParent().setOptions({\n      tabBarVisible: false\n    });\n    return function () {\n      props.navigation.dangerouslyGetParent().setOptions({\n        tabBarVisible: true\n      });\n    };\n  }, []));\n\n  var update_story = function update_story() {\n    if (title.length == 0 || description.length == 0) {\n      alert('Title and description is not empty');\n    } else {\n      formdata.append(\"file\", {\n        name: 'quyendog.jpg',\n        uri: image,\n        type: 'image/jpeg'\n      });\n      fetch('http://192.168.0.102:19000/edit_story', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        body: formdata\n      }).then(function (response) {\n        return response.json();\n      }).then(function (res) {\n        ToastAndroid.show(\"Upload sucessfull!\", ToastAndroid.SHORT);\n        setTitle('');\n        setCategory('');\n        setDescription('');\n        setImage('');\n        props.navigation.goBack();\n        addNewNotification();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      alignItems: \"center\"\n    },\n    onPress: pickImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      width: Dimensions.get('window').width,\n      marginTop: 10,\n      justifyContent: \"center\",\n      alignItems: 'center',\n      height: 280\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: '80%',\n      height: 280\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }))), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Story title:\"), React.createElement(TextInput, {\n    textAlignVertical: 'top',\n    value: title,\n    maxLength: 200,\n    style: {\n      height: 40,\n      backgroundColor: 'white'\n    },\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), React.createElement(Dropdown, {\n    label: \"Please slect type of story\",\n    data: data,\n    onChangeText: function onChangeText(value, index, data) {\n      setCategory(data[index].id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginTop: 10,\n      fontSize: 16,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"Story description:\"), React.createElement(View, {\n    style: {\n      marginTop: 10,\n      backgroundColor: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    textAlignVertical: 'top',\n    multiline: true,\n    value: description,\n    numberOfLines: 20,\n    scrollEnabled: true,\n    onChangeText: function onChangeText(text) {\n      return setDescription(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.upload,\n    onPress: function onPress() {\n      update_story();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 86\n    }\n  }, \"Update your story\"))));\n}\n\nexport { EditStory };\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    marginRight: 30,\n    marginLeft: 30,\n    paddingBottom: 1,\n    alignItems: 'stretch'\n  },\n  upload: {\n    marginTop: 20,\n    paddingTop: 15,\n    paddingBottom: 15,\n    backgroundColor: '#aa4fff',\n    borderRadius: 50,\n    borderWidth: 1,\n    borderColor: '#fff'\n  },\n  imgEmptyStory: {\n    marginTop: 5,\n    width: Dimensions.get('window').width,\n    height: 100,\n    backgroundColor: 'red'\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/users/ScreemFolder/StoryScreen/EditStory.js"],"names":["React","useState","useEffect","Dropdown","ImagePicker","useFocusEffect","EditStory","props","title","setTitle","description","setDescription","image","setImage","category","setCategory","data","id","value","formdata","FormData","append","route","params","item","author_id","pickImage","Platform","OS","requestCameraRollPermissionsAsync","status","alert","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","name","uri","type","addNewNotification","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","res","catch","error","useCallback","story_title","category_id","story_description","story_img","navigation","dangerouslyGetParent","setOptions","tabBarVisible","update_story","length","ToastAndroid","show","SHORT","goBack","styles","main","alignItems","width","Dimensions","get","marginTop","justifyContent","height","fontSize","fontWeight","backgroundColor","text","index","upload","textAlign","color","StyleSheet","create","flex","marginRight","marginLeft","paddingBottom","paddingTop","borderRadius","borderWidth","borderColor","imgEmptyStory"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    View, \r\n    StyleSheet, \r\n    Text, StatusBar,\r\n    ScrollView,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    Alert,\r\n    Platform,\r\n    Image,\r\n    ToastAndroid,\r\n    Dimensions\r\n} from 'react-native';\r\nimport { Dropdown } from 'react-native-material-dropdown-v2';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\nfunction EditStory (props){\r\n    const [title, setTitle] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [category, setCategory] = React.useState(1);\r\n\r\n    let data = [\r\n      {id: 1, value:\t'Adventure'},\r\n      {id: 2, value:\t'LGBTQ+'},\r\n      {id: 3, value:\t'Humor'},\r\n      {id: 4, value:\t'Mystery'},\r\n      {id: 5, value:\t'Romance'},\r\n      {id: 6, value:  'Short Story'},\r\n      {id: 7, value:\t'Teen Fiction'},\r\n      {id: 8, value:\t'New Adult'},\r\n      {id: 9, value:\t'Urban'},\r\n      {id: 10, value:\t'Historical Fiction'},\r\n      {id: 11, value:\t'Horror'},\r\n      {id: 12, value:\t'Poetry'}\r\n    ];\r\n\r\n    let formdata = new FormData();\r\n\r\n    formdata.append(\"title_story\", title)\r\n    formdata.append(\"story_description\", description)\r\n    formdata.append(\"story_id\", props.route.params.item.author_id)\r\n    formdata.append(\"category_id\", category)\r\n    \r\n    const pickImage = async () => {\r\n      (async () => {\r\n        if (Platform.OS !== 'web') {\r\n          const { status } = await ImagePicker.requestCameraRollPermissionsAsync();\r\n          if (status !== 'granted') {\r\n            alert('Sorry, we need camera roll permissions to make this work!');\r\n          } else {\r\n            let result = await ImagePicker.launchImageLibraryAsync({\r\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n              allowsEditing: true,\r\n              aspect: [4, 6],\r\n              quality: 1,\r\n            });\r\n        \r\n            console.log(result);\r\n        \r\n            if (!result.cancelled) {\r\n              formdata.append(\"file\", {name: 'quyendog.jpg' ,uri: result.uri, type:'image/jpeg'})\r\n              setImage(result.uri);\r\n            }\r\n          }\r\n        }\r\n      })();   \r\n    };\r\n    \r\n    const addNewNotification = () => {\r\n      fetch('http://192.168.0.102:19000/newNotification', {\r\n          method: 'POST',\r\n          headers: {\r\n              Accept: 'application/json',\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n              'user_id': props.route.params.item.author_id,\r\n              'content': 'Update story: '+ title,\r\n          })\r\n      })\r\n      .then ((response) => response.json())\r\n      .then ( (res) => { \r\n          console.log('susses')\r\n      })\r\n      .catch ((error) => {\r\n          console.log(error);\r\n      })\r\n    }\r\n\r\n    useFocusEffect(\r\n      React.useCallback(() => {\r\n        setTitle(props.route.params.item.story_title);\r\n        setCategory(props.route.params.item.category_id);\r\n        setDescription(props.route.params.item.story_description);\r\n        setImage(props.route.params.item.story_img);\r\n        props.navigation.dangerouslyGetParent().setOptions({\r\n            tabBarVisible: false\r\n          });\r\n        return () => {\r\n          props.navigation.dangerouslyGetParent().setOptions({\r\n            tabBarVisible: true\r\n          });\r\n        };\r\n      }, [])\r\n    );\r\n\r\n    const update_story = () => {\r\n      if (title.length == 0 || description.length == 0) {\r\n        alert('Title and description is not empty');\r\n      }else{\r\n        formdata.append(\"file\", {name: 'quyendog.jpg' ,uri: image, type:'image/jpeg'})\r\n\r\n        fetch('http://192.168.0.102:19000/edit_story' , {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n          body: formdata\r\n      })\r\n      .then ((response) => response.json())\r\n      .then ( (res) => { \r\n        ToastAndroid.show(\"Upload sucessfull!\", ToastAndroid.SHORT);\r\n        setTitle('');\r\n        setCategory('');\r\n        setDescription('');\r\n        setImage('');\r\n        props.navigation.goBack()\r\n        addNewNotification();\r\n      })\r\n      .catch ((error) => {\r\n        console.log(error);\r\n      })\r\n      }\r\n    }\r\n\r\n    return (               \r\n        <ScrollView> \r\n          <StatusBar hidden/>\r\n          <View style={styles.main}>\r\n            <TouchableOpacity style={{alignItems: \"center\"}}  onPress={pickImage}>\r\n                <View \r\n                  style={{\r\n                    width: Dimensions.get('window').width,\r\n                    marginTop: 10, \r\n                    justifyContent: \"center\", \r\n                    alignItems: 'center',\r\n                    height: 280}}>\r\n                  {image && <Image source={{ uri: image }} style={{  width: '80%', height: 280 }} />}\r\n                </View>\r\n            </TouchableOpacity>\r\n            \r\n            <Text style={{  fontSize: 16, fontWeight: 'bold'}}>Story title:</Text>\r\n            <TextInput\r\n              textAlignVertical={'top'}\r\n              value={title}\r\n              maxLength = {200}\r\n              style={{ height: 40, backgroundColor: 'white' }}\r\n              onChangeText={text => setTitle(text)}\r\n            />\r\n            <Dropdown\r\n                label='Please slect type of story'\r\n                data = {data}\r\n                onChangeText={(value, index, data)=>{setCategory(data[index].id)}}   \r\n              />\r\n            <Text style={{ marginTop: 10, fontSize: 16, fontWeight: 'bold'}}>Story description:</Text>  \r\n            <View  style={{ marginTop: 10, backgroundColor: 'white'}} >\r\n                <TextInput \r\n                  textAlignVertical={'top'}\r\n                  multiline \r\n                  value={description}\r\n                  numberOfLines={20}\r\n                  scrollEnabled={true} \r\n                  onChangeText={text => setDescription(text)} \r\n                />\r\n            </View>\r\n            \r\n            <TouchableOpacity style={styles.upload} onPress={()=> {update_story();}}><Text style={{textAlign: 'center', color: 'white'}}>Update your story</Text></TouchableOpacity>\r\n          </View>\r\n        </ScrollView>\r\n    );\r\n}\r\nexport {EditStory};\r\n\r\n\r\nvar styles = StyleSheet.create({\r\n    main: {\r\n        flex: 1,\r\n        marginRight: 30,\r\n        marginLeft: 30,\r\n        paddingBottom: 1,\r\n        alignItems: 'stretch',\r\n    },\r\n    upload:{\r\n        marginTop: 20,\r\n        paddingTop: 15,\r\n        paddingBottom: 15,\r\n        backgroundColor:'#aa4fff',\r\n        borderRadius: 50,\r\n        borderWidth: 1,\r\n        borderColor: '#fff'\r\n    },\r\n    imgEmptyStory: {\r\n      marginTop: 5,\r\n      width: Dimensions.get('window').width, \r\n      height: 100, \r\n      backgroundColor: 'red',\r\n    }\r\n});\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}