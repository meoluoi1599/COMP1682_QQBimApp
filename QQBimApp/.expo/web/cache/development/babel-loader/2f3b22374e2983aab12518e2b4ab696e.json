{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\ScreemFolder\\\\NotificationScreen\\\\ChatScreen.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport io from \"socket.io-client\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nfunction ChatScreen() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      chatMessage = _React$useState2[0],\n      setChatMessage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      contentMassage = _React$useState4[0],\n      setContentMassage = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      message = _React$useState6[0],\n      setMessage = _React$useState6[1];\n\n  var contact_id = 1;\n  var socket = io(\"http://192.168.1.6:19000\");\n  React.useEffect(function () {\n    socket.emit(\"get_message\", function (contact_id) {\n      socket.on('get', function (data) {\n        console.log(data + 'dshkjffdjskdfsjkfkjjfjsfjhsjhshhfÄ‘sfhdfjshjdsfhjkdfkhdfkdfshkdskjhkfdhkdfdhksdfkfdkkhsdfkh');\n      });\n    });\n  });\n\n  function submitChatMessage() {\n    setMessage([{\n      'contact_id': 1,\n      'content': contentMassage,\n      'upload_by': 1\n    }]);\n    socket.emit(\"emit_message\", message);\n    socket.emit(\"add_message\", message);\n    setContentMassage(\"\");\n    setMessage([]);\n  }\n\n  var renderMassages = chatMessage.map(function (renderMassages) {\n    return React.createElement(Text, {\n      key: renderMassages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, messages);\n  });\n  console.log('dssdsdsdsdsd' + chatMessage);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, renderMassages)), React.createElement(View, {\n    style: {\n      justifyContent: 'flex-end',\n      backgroundColor: 'white',\n      width: '100%',\n      height: 45,\n      flexDirection: 'row',\n      paddingRight: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      height: 45,\n      borderColor: '#8a2be2',\n      borderWidth: 1,\n      width: '80%'\n    },\n    autoCorrect: false,\n    value: contentMassage,\n    onSubmitEditing: function onSubmitEditing() {\n      return submitChatMessage();\n    },\n    onChangeText: function onChangeText(text) {\n      return setContentMassage(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: '#aa4fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-send\",\n    size: 45,\n    color: \"white\",\n    style: {\n      marginLeft: 10,\n      marginRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport { ChatScreen };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: 25\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/ScreemFolder/NotificationScreen/ChatScreen.js"],"names":["React","io","Ionicons","TouchableOpacity","ChatScreen","useState","chatMessage","setChatMessage","contentMassage","setContentMassage","message","setMessage","contact_id","socket","useEffect","emit","on","data","console","log","submitChatMessage","renderMassages","map","messages","styles","container","flex","justifyContent","backgroundColor","width","height","flexDirection","paddingRight","borderColor","borderWidth","text","marginLeft","marginRight","StyleSheet","create","alignItems","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Dimensions, View, TextInput, Text } from 'react-native';\r\nimport io from \"socket.io-client\";\r\nimport { Ionicons } from '@expo/vector-icons'; \r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\n \r\nfunction ChatScreen() {\r\n    const [chatMessage, setChatMessage] = React.useState([]);\r\n    const [contentMassage, setContentMassage] = React.useState('');\r\n    const [message, setMessage] = React.useState([]);\r\n    const contact_id =1;\r\n    const socket = io(\"http://192.168.1.6:19000\");\r\n    React.useEffect(() => {\r\n      socket.emit(\"get_message\", contact_id => {\r\n        socket.on('get',function(data){\r\n          console.log(data+'dshkjffdjskdfsjkfkjjfjsfjhsjhshhfÄ‘sfhdfjshjdsfhjkdfkhdfkdfshkdskjhkfdhkdfdhksdfkfdkkhsdfkh')\r\n        })\r\n      });  \r\n    });\r\n    // React.useEffect(() => {\r\n    //   //connect with socket.io\r\n    //     this.socket = io(\"http://192.168.1.6:19000:19000\");\r\n    //   //get list story of meassage\r\n    //     this.socket.on(\"get_message\",  msg => {\r\n    //     setChatMessages( [...chatMessages, msg]);\r\n    //   });\r\n    // });\r\n    // // when submit will call two function \r\n    //   //emit_message to display in screen  \r\n    //   //add_message to add into db \r\n    //   //then set massage = \"\"\r\n    // submitChatMessage =()=> {\r\n    //     this.\r\n    //     this.\r\n    //     \r\n    // }\r\n\r\n    // const messages = chatMessages.map(messages => (\r\n    //     <Text key={messages}>{chatMessage}</Text>\r\n    //   ));\r\n\r\n    function submitChatMessage() {\r\n      setMessage([\r\n        {\r\n          'contact_id': 1,\r\n          'content': contentMassage,\r\n          'upload_by': 1\r\n        }\r\n      ]);\r\n      socket.emit(\"emit_message\", message);\r\n      socket.emit(\"add_message\", message);\r\n      setContentMassage(\"\");\r\n      setMessage([]);\r\n    }\r\n    const renderMassages = chatMessage.map(renderMassages => (\r\n      <Text key={renderMassages}>{messages}</Text>\r\n    ));\r\n\r\n    console.log('dssdsdsdsdsd' + chatMessage);\r\n  \r\n    return (\r\n        <View style={styles.container}>\r\n        <View style={{flex: 1}}>\r\n          <Text>{renderMassages}</Text>\r\n        </View>\r\n        <View style={{justifyContent: 'flex-end', backgroundColor: 'white', width: '100%', height: 45, flexDirection: 'row', paddingRight: 5}}>\r\n          <TextInput\r\n            style={{ height: 45, borderColor: '#8a2be2', borderWidth: 1, width: '80%'}}\r\n            autoCorrect={false}\r\n            value={contentMassage}\r\n            onSubmitEditing={() => submitChatMessage()}\r\n            onChangeText={text =>  setContentMassage(text)}\r\n          />\r\n          <TouchableOpacity style={{backgroundColor: '#aa4fff'}}>\r\n            <Ionicons name=\"md-send\" size={45} color=\"white\" style={{ marginLeft: 10, marginRight: 10}} />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    )   \r\n} export {ChatScreen};\r\n \r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'flex-start',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginTop: 25,\r\n    },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}