{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\ScreemFolder\\\\StoryScreen\\\\ReadingScreen.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { ReadingTabComponent, ReadingContentComponent, ModalChapterContent } from \"../../Components/ReadingScreen\";\n\nfunction ReadingScreen(props) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dataSource = _React$useState2[0],\n      setDataSource = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(ReadingContentComponent, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })), React.createElement(ReadingTabComponent, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })), React.createElement(ModalChapterContent, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport { ReadingScreen };","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/ScreemFolder/StoryScreen/ReadingScreen.js"],"names":["React","ReadingTabComponent","ReadingContentComponent","ModalChapterContent","ReadingScreen","props","useState","dataSource","setDataSource","isLoading","setLoading","flex"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAAQC,mBAAR,EAA6BC,uBAA7B,EAAsDC,mBAAtD;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,wBACQL,KAAK,CAACM,QAAN,CAAe,EAAf,CADR;AAAA;AAAA,MACrBC,UADqB;AAAA,MACTC,aADS;;AAAA,yBAEIR,KAAK,CAACM,QAAN,CAAe,IAAf,CAFJ;AAAA;AAAA,MAErBG,SAFqB;AAAA,MAEVC,UAFU;;AAW5B,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,uBAAD,eAA6BN,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAEI,oBAAC,mBAAD,eAAyBA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAGI,oBAAC,mBAAD,eAAyBA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHJ,CADF;AAOD;;AACD,SAAQD,aAAR","sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nimport {ReadingTabComponent, ReadingContentComponent, ModalChapterContent} from '../../Components/ReadingScreen'\n\nfunction ReadingScreen(props) {\n  const [dataSource, setDataSource ]= React.useState([]);\n  const [isLoading, setLoading] = React.useState(true);\n\n  // React.useEffect(() => {\n  //   // fetch('http://10.0.2.2:5000/')\n  //   props.navigation.setOptions({\n  //     tabBarVisible: false\n  //   });\n  // });\n\n  return (\n    <View style={{ flex: 1}}>\n        <ReadingContentComponent {...props}/>\n        <ReadingTabComponent {...props}/>\n        <ModalChapterContent {...props}/>\n    </View>\n  );\n}\nexport {ReadingScreen};"]},"metadata":{},"sourceType":"module"}