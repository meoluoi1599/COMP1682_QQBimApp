{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\ScreemFolder\\\\NotificationScreen\\\\ChatScreen.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport io from \"socket.io-client\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nfunction ChatScreen() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      chatMessage = _React$useState2[0],\n      setChatMessage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      contentMassage = _React$useState4[0],\n      setContentMassage = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      message = _React$useState6[0],\n      setMessage = _React$useState6[1];\n\n  var _React$useState7 = React.useState(1),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      contact_id = _React$useState8[0],\n      set_contact_id = _React$useState8[1];\n\n  var socket = io(\"http://192.168.1.6:19000\");\n  React.useEffect(function () {\n    socket.emit(\"get_message\", '1');\n    socket.on('get', function (data) {\n      console.log(data + 'haha11');\n      setChatMessage(data);\n    });\n  });\n\n  function submitChatMessage() {\n    setContentMassage(\"\");\n    setMessage([]);\n  }\n\n  var renderMassages = chatMessage.map(function (renderMassages) {\n    return React.createElement(Text, {\n      key: renderMassages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, message);\n  });\n  console.log('dssdsdsdsdsd' + chatMessage);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, renderMassages)), React.createElement(View, {\n    style: {\n      justifyContent: 'flex-end',\n      backgroundColor: '#aa4fff',\n      width: '100%',\n      height: 50,\n      flexDirection: 'row',\n      paddingRight: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      height: 40,\n      margin: 5,\n      backgroundColor: 'white',\n      width: '80%'\n    },\n    autoCorrect: false,\n    value: contentMassage,\n    onSubmitEditing: function onSubmitEditing() {\n      return submitChatMessage();\n    },\n    onChangeText: function onChangeText(text) {\n      return setContentMassage(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-send\",\n    size: 45,\n    color: \"white\",\n    style: {\n      marginLeft: 10,\n      marginRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport { ChatScreen };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: 25,\n    borderColor: '#8a2be2'\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/ScreemFolder/NotificationScreen/ChatScreen.js"],"names":["React","io","Ionicons","TouchableOpacity","ChatScreen","useState","chatMessage","setChatMessage","contentMassage","setContentMassage","message","setMessage","contact_id","set_contact_id","socket","useEffect","emit","on","data","console","log","submitChatMessage","renderMassages","map","styles","container","flex","justifyContent","backgroundColor","width","height","flexDirection","paddingRight","margin","text","marginLeft","marginRight","StyleSheet","create","alignItems","marginTop","borderColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Dimensions, View, TextInput, Text } from 'react-native';\r\nimport io from \"socket.io-client\";\r\nimport { Ionicons } from '@expo/vector-icons'; \r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\nfunction ChatScreen() {\r\n    const [chatMessage, setChatMessage] = React.useState([]);\r\n    const [contentMassage, setContentMassage] = React.useState('');\r\n    const [message, setMessage] = React.useState([]);\r\n    const [contact_id, set_contact_id] = React.useState(1);\r\n    const socket = io(\"http://192.168.1.6:19000\");\r\n    React.useEffect(() => {\r\n\r\n      socket.emit(\"get_message\", '1' );\r\n      socket.on('get',function(data){\r\n        console.log(data+'haha11')\r\n        setChatMessage(data);\r\n      })\r\n    });\r\n\r\n    function submitChatMessage() {\r\n      // setMessage([\r\n      //   {\r\n      //     'contact_id': 1,\r\n      //     'content': contentMassage,\r\n      //     'upload_by': 1\r\n      //   }\r\n      // ]);\r\n      // socket.emit(\"emit_message\", message);\r\n      // socket.emit(\"add_message\", message);\r\n      setContentMassage(\"\");\r\n      setMessage([]);\r\n    }\r\n    const renderMassages = chatMessage.map(renderMassages => (\r\n      <Text key={renderMassages}>{message}</Text>\r\n    ));\r\n\r\n    console.log('dssdsdsdsdsd' + chatMessage);\r\n  \r\n    return (\r\n        <View style={styles.container}>\r\n        <View style={{flex: 1}}>\r\n          <Text>{renderMassages}</Text>\r\n        </View>\r\n        <View style={{justifyContent: 'flex-end', backgroundColor: '#aa4fff', width: '100%', height: 50, flexDirection: 'row', paddingRight: 5}}>\r\n          <TextInput\r\n            style={{ height: 40, margin: 5, backgroundColor: 'white', width: '80%'}}\r\n            autoCorrect={false}\r\n            value={contentMassage}\r\n            onSubmitEditing={() => submitChatMessage()}\r\n            onChangeText={text =>  setContentMassage(text)}\r\n          />\r\n          <TouchableOpacity >\r\n            <Ionicons name=\"md-send\" size={45} color=\"white\" style={{ marginLeft: 10, marginRight: 10}} />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    )   \r\n} export {ChatScreen};\r\n \r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'flex-start',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginTop: 25,\r\n        borderColor: '#8a2be2',\r\n    },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}