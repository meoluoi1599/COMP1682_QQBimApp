{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\users\\\\ScreemFolder\\\\SearchScreen\\\\SearchScreen.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TabView, SceneMap } from 'react-native-tab-view';\nimport { SplashScreen } from \"../../ScreemFolder/OtherScreen\";\nvar initialLayout = {\n  width: Dimensions.get('window').width\n};\n\nfunction SearchScreen(props) {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      user = _React$useState4[0],\n      setUser = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      story = _React$useState6[0],\n      setStory = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      list = _React$useState8[0],\n      setList = _React$useState8[1];\n\n  var _React$useState9 = React.useState(true),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      isLoading = _React$useState10[0],\n      setLoading = _React$useState10[1];\n\n  var _React$useState11 = React.useState([{\n    key: '1',\n    title: 'Story'\n  }, {\n    key: '2',\n    title: 'User'\n  }, {\n    key: '3',\n    title: 'Story List'\n  }]),\n      _React$useState12 = _slicedToArray(_React$useState11, 1),\n      routes = _React$useState12[0];\n\n  var getUser = function getUser() {\n    fetch('http://192.168.0.101:19000/search_user/' + props.route.params.search).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setUser(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  };\n\n  var getStory = function getStory() {\n    fetch('http://192.168.0.101:19000/search_story/' + props.route.params.search).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setStory(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  };\n\n  var getList = function getList() {\n    fetch('http://192.168.0.101:19000/search_story_list/' + props.route.params.search).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      console.log(res);\n      setList(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  };\n\n  function ListEmpty() {\n    return React.createElement(View, {\n      style: styles.MainContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: 'center',\n        justifyContent: 'center',\n        fontSize: 20,\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"No Data Found\"));\n  }\n\n  ;\n  React.useEffect(function () {\n    getStory();\n    getUser();\n    getList();\n  }, []);\n\n  var StoryRoute = function StoryRoute() {\n    return React.createElement(View, {\n      style: {\n        backgroundColor: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    }, isLoading ? React.createElement(SplashScreen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 20\n      }\n    }) : React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, React.createElement(FlatList, {\n      data: story,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      ListEmptyComponent: ListEmpty,\n      keyExtractor: function keyExtractor(item) {\n        return item.story_id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.navigate('DetailStory', {\n              item: item\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: styles.story,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }\n        }, React.createElement(Image, {\n          style: {\n            width: 100,\n            height: 120\n          },\n          source: {\n            uri: item.story_img\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }\n        })), React.createElement(View, {\n          style: {\n            flex: 2\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 1,\n          style: {\n            fontWeight: 'bold',\n            fontSize: 18\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }\n        }, item.story_title), React.createElement(Text, {\n          style: styles.category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }\n        }, item.category), React.createElement(Text, {\n          numberOfLines: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }\n        }, item.story_description, \" \"))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  var UserRoute = function UserRoute() {\n    return React.createElement(View, {\n      style: {\n        backgroundColor: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }\n    }, isLoading ? React.createElement(SplashScreen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 20\n      }\n    }) : React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, React.createElement(FlatList, {\n      data: user,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      ListEmptyComponent: ListEmpty,\n      keyExtractor: function keyExtractor(item) {\n        return item.user_id.toString();\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return React.createElement(TouchableOpacity, {\n          style: styles.user,\n          onPress: function onPress() {\n            return props.navigation.navigate('DetailUser', {\n              item: item\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          style: styles.imageUser,\n          source: {\n            uri: item.user_avatar\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: {\n            fontSize: 18,\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }\n        }, \"@\", item.username));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  var StoryListRoute = function StoryListRoute() {\n    return React.createElement(View, {\n      style: {\n        backgroundColor: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }\n    }, isLoading ? React.createElement(SplashScreen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 20\n      }\n    }) : React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, React.createElement(FlatList, {\n      data: list,\n      keyExtractor: function keyExtractor(item) {\n        return item.list_id.toString();\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return React.createElement(View, {\n          style: styles.listContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            flexDirection: 'row',\n            margin: 10,\n            flex: 1\n          },\n          onPress: function onPress() {\n            return props.navigation.navigate('DetailListStory', {\n              item: item\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }\n        }, React.createElement(Image, {\n          source: require(\"../../Images/list.png\"),\n          style: styles.imgList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }\n        }), React.createElement(Text, {\n          style: styles.textName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }\n        }, item.list_name)));\n      },\n      ListEmptyComponent: ListEmpty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  var renderScene = SceneMap({\n    1: StoryRoute,\n    2: UserRoute,\n    3: StoryListRoute\n  });\n  return React.createElement(TabView, {\n    style: {\n      backgroundColor: 'white'\n    },\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    initialLayout: initialLayout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  });\n}\n\nexport { SearchScreen };\nvar styles = StyleSheet.create({\n  MainContainer: {\n    justifyContent: 'center',\n    flex: 1,\n    margin: 10\n  },\n  story: {\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: 'white',\n    width: Dimensions.get('window').width,\n    marginTop: 10,\n    height: 140,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  user: {\n    padding: 10,\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    width: Dimensions.get('window').width,\n    borderBottomWidth: 1,\n    borderColor: '#f2f2f2'\n  },\n  imageUser: {\n    marginRight: 10,\n    width: 50,\n    height: 50,\n    borderRadius: 50\n  },\n  listContainer: {\n    marginTop: 5,\n    marginLeft: 10,\n    marginRight: 10,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderColor: '#f2f2f2',\n    borderBottomWidth: 0.5\n  },\n  imgList: {\n    width: 30,\n    height: 30\n  },\n  textName: {\n    fontSize: 18,\n    color: 'grey',\n    marginLeft: 10\n  },\n  category: {\n    backgroundColor: '#aa4fff',\n    borderRadius: 40,\n    padding: 5,\n    shadowColor: \"#BA55D3\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/users/ScreemFolder/SearchScreen/SearchScreen.js"],"names":["React","TabView","SceneMap","SplashScreen","initialLayout","width","Dimensions","get","SearchScreen","props","useState","index","setIndex","user","setUser","story","setStory","list","setList","isLoading","setLoading","key","title","routes","getUser","fetch","route","params","search","then","response","json","res","catch","error","console","log","finally","getStory","getList","ListEmpty","styles","MainContainer","textAlign","justifyContent","fontSize","fontWeight","useEffect","StoryRoute","backgroundColor","item","story_id","toString","navigation","navigate","flex","height","uri","story_img","story_title","category","story_description","UserRoute","user_id","imageUser","user_avatar","username","StoryListRoute","list_id","listContainer","flexDirection","margin","require","imgList","textName","list_name","renderScene","StyleSheet","create","padding","marginTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","alignItems","borderBottomWidth","borderColor","marginRight","borderRadius","marginLeft","color"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, StyleSheet, Dimensions, Text, FlatList,TouchableOpacity,Image } from 'react-native';\r\nimport { TabView, SceneMap } from 'react-native-tab-view';\r\nimport {SplashScreen} from '../../ScreemFolder/OtherScreen';\r\n\r\nconst initialLayout = { width: Dimensions.get('window').width };\r\n\r\nfunction SearchScreen(props) {\r\n  const [index, setIndex] = React.useState(0);\r\n  const [user, setUser] = React.useState([]);\r\n  const [story, setStory] = React.useState([]);\r\n  const [list, setList] = React.useState([]);\r\n  const [isLoading, setLoading] = React.useState(true);\r\n  const [routes] = React.useState([\r\n    { key: '1', title: 'Story' },\r\n    { key: '2', title: 'User' },\r\n    { key: '3', title: 'Story List' },\r\n  ]);\r\n\r\n  const getUser =() => {\r\n    fetch('http://192.168.0.101:19000/search_user/' + props.route.params.search)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      setUser(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => setLoading(false));\r\n  }\r\n\r\n  const getStory =() => {\r\n    fetch('http://192.168.0.101:19000/search_story/' + props.route.params.search)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      setStory(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => setLoading(false));\r\n  }\r\n\r\n  const getList =() => {\r\n    fetch('http://192.168.0.101:19000/search_story_list/' + props.route.params.search)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => {\r\n      console.log(res) \r\n      setList(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => setLoading(false));\r\n  }\r\n  function ListEmpty() {\r\n    return (\r\n      //View to show when list is empty\r\n      <View style={styles.MainContainer}>\r\n        <Text style={{ textAlign: 'center', justifyContent: 'center', fontSize: 20, fontWeight: 'bold'}}>No Data Found</Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getStory();\r\n    getUser();\r\n    getList();\r\n  },[]);\r\n\r\n  const StoryRoute = () => (\r\n    <View style={{backgroundColor: 'white'}}>\r\n      {isLoading ? <SplashScreen/> : (\r\n        <View>\r\n          <FlatList\r\n            data={story}\r\n            horizontal\r\n            showsHorizontalScrollIndicator={false}\r\n            ListEmptyComponent={ListEmpty}\r\n            keyExtractor= {item => item.story_id.toString()}\r\n            renderItem={({item}) => (\r\n              <TouchableOpacity onPress={() => props.navigation.navigate('DetailStory', {item: item})}>         \r\n                <View style={styles.story}>\r\n                  <View style={{flex: 1}}>\r\n                    <Image style={{width: 100, height: 120}}\r\n                      source= {{uri: item.story_img}}\r\n                    />\r\n                  </View>\r\n                  <View style={{flex: 2}}>\r\n                    <Text  numberOfLines={1} style={{fontWeight: 'bold', fontSize: 18}}>{item.story_title}</Text>\r\n                    <Text style={styles.category}>{item.category}</Text>\r\n                    <Text numberOfLines={3}>{item.story_description} </Text>\r\n                  </View>\r\n                </View>\r\n          </TouchableOpacity>\r\n            )}\r\n          />\r\n        </View>\r\n      )}\r\n  </View>\r\n  );\r\n  \r\n  const UserRoute = () => (\r\n    <View style={{backgroundColor: 'white'}}>\r\n      {isLoading ? <SplashScreen/> : (\r\n        <View>\r\n          <FlatList\r\n            data={user}\r\n            horizontal\r\n            showsHorizontalScrollIndicator={false}\r\n            ListEmptyComponent={ListEmpty}\r\n            keyExtractor= {item => item.user_id.toString()}\r\n            renderItem={({item}) => (\r\n            <TouchableOpacity  style={styles.user} onPress={() => props.navigation.navigate('DetailUser', {item: item})}>\r\n                <Image style={styles.imageUser}\r\n                      source={{uri: item.user_avatar}} \r\n                />\r\n                <Text style={{fontSize: 18, fontWeight: 'bold'}}>\r\n                  @{item.username}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            )}\r\n          />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n  \r\n  const StoryListRoute = () => (\r\n    <View style={{backgroundColor: 'white'}}>\r\n      {isLoading ? <SplashScreen/> : (\r\n        <View>\r\n          <FlatList\r\n            data={list}\r\n            keyExtractor= {item => item.list_id.toString()}\r\n            renderItem={({ item }) =>(\r\n              <View style={styles.listContainer}>\r\n                <TouchableOpacity style={{ flexDirection: 'row', margin: 10, flex: 1}} onPress={() =>props.navigation.navigate('DetailListStory', {item: item})}>\r\n                  <Image \r\n                    source={require(\"../../Images/list.png\")}\r\n                    style={styles.imgList}\r\n                  />\r\n                  <Text style={styles.textName}>{item.list_name}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n            ListEmptyComponent={ListEmpty}\r\n          />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n  const renderScene = SceneMap({\r\n    1: StoryRoute,\r\n    2: UserRoute,\r\n    3: StoryListRoute\r\n  });\r\n\r\n  return ( \r\n    <TabView\r\n      style={{backgroundColor: 'white'}}\r\n      navigationState={{ index, routes }}\r\n      renderScene={renderScene}\r\n      onIndexChange={setIndex}\r\n      initialLayout={initialLayout}\r\n    />\r\n  );\r\n} export {SearchScreen};\r\n\r\nconst styles = StyleSheet.create({\r\n  MainContainer: {\r\n    justifyContent: 'center',\r\n    flex: 1,\r\n    margin: 10,\r\n  },\r\n  story: {\r\n    flexDirection: 'row', \r\n    padding: 10,\r\n    backgroundColor: 'white',\r\n    width: Dimensions.get('window').width, \r\n    marginTop: 10,\r\n    height: 140,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  user: {\r\n    padding: 10,\r\n    alignItems: 'center',\r\n    flexDirection: 'row', \r\n    backgroundColor: 'white',\r\n    width: Dimensions.get('window').width,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#f2f2f2'\r\n  },\r\n  imageUser: {\r\n    marginRight: 10,\r\n    width: 50, \r\n    height: 50, \r\n    borderRadius: 50\r\n  },\r\n  listContainer: {\r\n    marginTop: 5,\r\n    marginLeft: 10,\r\n    marginRight:10,\r\n    flexDirection: 'row',\r\n    backgroundColor: 'white',\r\n    borderColor: '#f2f2f2',\r\n    borderBottomWidth: 0.5\r\n  },\r\n  imgList: {\r\n    width: 30, \r\n    height: 30,\r\n  },\r\n  textName: {\r\n    fontSize: 18, \r\n    color: 'grey',\r\n    marginLeft: 10\r\n  },\r\n  category: {\r\n    backgroundColor: '#aa4fff', \r\n    borderRadius: 40,\r\n    padding: 5,\r\n    shadowColor: \"#BA55D3\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}