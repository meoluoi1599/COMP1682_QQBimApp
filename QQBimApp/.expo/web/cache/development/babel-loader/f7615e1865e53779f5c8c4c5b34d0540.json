{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\ScreemFolder\\\\StoryScreen\\\\NewPart.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nfunction NewPart(props) {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      title = _React$useState2[0],\n      setTitle = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      chapterContent = _React$useState4[0],\n      setChapterContent = _React$useState4[1];\n\n  var storyId = props.route.params.story_id;\n\n  var upload_chapter = function upload_chapter() {\n    if (title.length > 0 || chapterContent.length > 0) {\n      alert('Title and content must have content');\n    } else {\n      fetch('http://192.168.1.2:19000/upload_chapter', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'story_id': storyId,\n          'chapter_name': title,\n          'chapter_content': chapterContent\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (res) {\n        alert('Succesfull!!');\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Chapter title:\"), React.createElement(TextInput, {\n    style: {\n      height: 40,\n      backgroundColor: 'white'\n    },\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginTop: 10,\n      fontSize: 16,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Content of chapter:\"), React.createElement(ScrollView, {\n    scrollEnabled: true,\n    style: {\n      marginTop: 10,\n      backgroundColor: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    multiline: true,\n    placeholder: \"Chapter's content of your story\",\n    scrollEnabled: false,\n    onChangeText: function onChangeText(text) {\n      return setChapterContent(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.upload,\n    onPress: function onPress() {\n      upload_chapter();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 88\n    }\n  }, \"Upload your story\")));\n}\n\nexport { NewPart };\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    paddingLeft: 30,\n    paddingRight: 30,\n    paddingBottom: 1,\n    alignItems: 'stretch'\n  },\n  upload: {\n    marginTop: 20,\n    paddingTop: 15,\n    paddingBottom: 15,\n    backgroundColor: '#aa4fff',\n    borderRadius: 50,\n    borderWidth: 1,\n    borderColor: '#fff'\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/ScreemFolder/StoryScreen/NewPart.js"],"names":["React","NewPart","props","useState","title","setTitle","chapterContent","setChapterContent","storyId","route","params","story_id","upload_chapter","length","alert","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","res","catch","error","console","log","styles","main","fontSize","fontWeight","height","backgroundColor","text","marginTop","upload","textAlign","color","StyleSheet","create","flex","paddingLeft","paddingRight","paddingBottom","alignItems","paddingTop","borderRadius","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Text, TextInput, TouchableOpacity, ScrollView } from 'react-native';\r\n\r\n \r\nfunction NewPart(props) {\r\n    const [title, setTitle] = React.useState('');\r\n    const [chapterContent, setChapterContent] = React.useState('');\r\n    const storyId = props.route.params.story_id;\r\n\r\n    const upload_chapter = () => {\r\n        if(title.length > 0 || chapterContent.length > 0){\r\n            alert('Title and content must have content');\r\n        } else {\r\n            fetch('http://192.168.1.2:19000/upload_chapter' , {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    'story_id': storyId,\r\n                    'chapter_name': title,\r\n                    'chapter_content': chapterContent\r\n                })\r\n            })\r\n            .then ((response) => response.json())\r\n            .then ( (res) => { \r\n                alert('Succesfull!!') \r\n            })\r\n            .catch ((error) => {\r\n                console.log(error);\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.main}>\r\n            <Text style={{  fontSize: 16, fontWeight: 'bold'}}>Chapter title:</Text>\r\n            <TextInput\r\n            style={{ height: 40, backgroundColor: 'white' }}\r\n                onChangeText={text => setTitle(text)}\r\n            />\r\n            <Text style={{ marginTop: 10, fontSize: 16, fontWeight: 'bold'}}>Content of chapter:</Text>  \r\n            <ScrollView scrollEnabled  style={{ marginTop: 10, backgroundColor: 'white'}} >\r\n                <TextInput multiline placeholder=\"Chapter's content of your story\" scrollEnabled={false} onChangeText={text => setChapterContent(text)} />\r\n            </ScrollView>\r\n            <TouchableOpacity style={styles.upload} onPress={()=> {upload_chapter();}}><Text style={{textAlign: 'center', color: 'white'}}>Upload your story</Text></TouchableOpacity>\r\n        </View>\r\n    )\r\n} export {NewPart};\r\n \r\nvar styles = StyleSheet.create({\r\n    main: {\r\n        flex: 1,\r\n        paddingLeft: 30,\r\n        paddingRight: 30,\r\n        paddingBottom: 1,\r\n        alignItems: 'stretch',\r\n    },\r\n    upload:{\r\n        marginTop: 20,\r\n        paddingTop: 15,\r\n        paddingBottom: 15,\r\n        backgroundColor:'#aa4fff',\r\n        borderRadius: 50,\r\n        borderWidth: 1,\r\n        borderColor: '#fff'\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}