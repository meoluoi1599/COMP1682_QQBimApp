{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\ScreemFolder\\\\StoryScreen\\\\ListCategoryScreen.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { SplashScreen } from \"../OtherScreen\";\n\nfunction ListCategoryScreen(props) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dataSource = _React$useState2[0],\n      setDataSource = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  React.useEffect(function () {\n    fetch('http://192.168.1.2:19000/category').then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      console.log('kq:' + res);\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  });\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(SplashScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 18\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: dataSource,\n    numColumns: 4,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(item) {\n      return item.category_id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        style: {\n          padding: 5\n        },\n        onPress: function onPress() {\n          return props.navigation.navigate('DetailCategory', {\n            category_id: item.category_id\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 12\n        }\n      }, React.createElement(Text, {\n        style: {\n          backgroundColor: '#aa4fff',\n          borderRadius: 20,\n          padding: 10,\n          shadowColor: \"#BA55D3\",\n          shadowOffset: {\n            width: 0,\n            height: 2\n          },\n          shadowOpacity: 0.25,\n          shadowRadius: 3.84,\n          elevation: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }\n      }, item.category));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport { ListCategoryScreen };","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/ScreemFolder/StoryScreen/ListCategoryScreen.js"],"names":["React","SplashScreen","ListCategoryScreen","props","useState","dataSource","setDataSource","isLoading","setLoading","useEffect","fetch","then","response","json","res","console","log","catch","error","finally","item","category_id","toString","padding","navigation","navigate","backgroundColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","category"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAOA,SAAQC,YAAR;;AAGA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA,wBACGH,KAAK,CAACI,QAAN,CAAe,EAAf,CADH;AAAA;AAAA,MAC1BC,UAD0B;AAAA,MACdC,aADc;;AAAA,yBAEDN,KAAK,CAACI,QAAN,CAAe,IAAf,CAFC;AAAA;AAAA,MAE1BG,SAF0B;AAAA,MAEfC,UAFe;;AAIjCR,EAAAA,KAAK,CAACS,SAAN,CAAgB,YAAM;AAEpBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACO,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADP,EAECF,IAFD,CAEQ,UAACG,GAAD,EAAS;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQF,GAApB;AACAR,MAAAA,aAAa,CAACQ,GAAD,CAAb;AACD,KALD,EAMCG,KAND,CAMQ,UAACC,KAAD,EAAW;AACjBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KARD,EASCC,OATD,CASS,YAAM;AACbX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAXD;AAYD,GAdD;AAeA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,SAAS,GAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACR,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,UADR;AAEE,IAAA,UAAU,EAAE,CAFd;AAGE,IAAA,8BAA8B,EAAE,KAHlC;AAIE,IAAA,YAAY,EAAG,sBAAAe,IAAI;AAAA,aAAIA,IAAI,CAACC,WAAL,CAAiBC,QAAjB,EAAJ;AAAA,KAJrB;AAKE,IAAA,UAAU,EAAE;AAAA,UAAEF,IAAF,QAAEA,IAAF;AAAA,aACX,oBAAC,gBAAD;AAAmB,QAAA,KAAK,EAAE;AAACG,UAAAA,OAAO,EAAE;AAAV,SAA1B;AAAwC,QAAA,OAAO,EAAE;AAAA,iBAAKpB,KAAK,CAACqB,UAAN,CAAiBC,QAAjB,CAA0B,gBAA1B,EAA4C;AAACJ,YAAAA,WAAW,EAAED,IAAI,CAACC;AAAnB,WAA5C,CAAL;AAAA,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AACVK,UAAAA,eAAe,EAAE,SADP;AAEVC,UAAAA,YAAY,EAAE,EAFJ;AAGVJ,UAAAA,OAAO,EAAE,EAHC;AAIVK,UAAAA,WAAW,EAAE,SAJH;AAKVC,UAAAA,YAAY,EAAE;AACZC,YAAAA,KAAK,EAAE,CADK;AAEZC,YAAAA,MAAM,EAAE;AAFI,WALJ;AASVC,UAAAA,aAAa,EAAE,IATL;AAUVC,UAAAA,YAAY,EAAE,IAVJ;AAWVC,UAAAA,SAAS,EAAE;AAXD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaId,IAAI,CAACe,QAbT,CADF,CADW;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAmCD;;AACD,SAAQjC,kBAAR","sourcesContent":["import * as React from 'react';\r\nimport { \r\n  View, \r\n  FlatList,\r\n  TouchableOpacity, \r\n  Text\r\n} from 'react-native';\r\nimport {SplashScreen} from '../OtherScreen';\r\n\r\n\r\nfunction ListCategoryScreen(props) {\r\n  const [dataSource, setDataSource ]= React.useState([]);\r\n  const [isLoading, setLoading] = React.useState(true);\r\n  \r\n  React.useEffect(() => {\r\n    // fetch('http://10.0.2.2:5000/')\r\n    fetch('http://192.168.1.2:19000/category')\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      console.log('kq:' + res); \r\n      setDataSource(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      setLoading(false) \r\n    });\r\n  });\r\n  return (\r\n    <View>\r\n    {isLoading ? <SplashScreen/> : (\r\n      <View>\r\n        <FlatList\r\n          data={dataSource}\r\n          numColumns={4}\r\n          showsHorizontalScrollIndicator={false}\r\n          keyExtractor= {item => item.category_id.toString()}\r\n          renderItem={({item}) => (\r\n           <TouchableOpacity  style={{padding: 5}} onPress={()=> props.navigation.navigate('DetailCategory', {category_id: item.category_id})}>\r\n             <Text style={{\r\n                backgroundColor: '#aa4fff', \r\n                borderRadius: 20,\r\n                padding: 10,\r\n                shadowColor: \"#BA55D3\",\r\n                shadowOffset: {\r\n                  width: 0,\r\n                  height: 2,\r\n                },\r\n                shadowOpacity: 0.25,\r\n                shadowRadius: 3.84,\r\n                elevation: 5,\r\n              }}>\r\n                {item.category}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        />\r\n      </View>\r\n    )}\r\n  </View>\r\n\r\n  );\r\n  \r\n}\r\nexport {ListCategoryScreen}\r\n\r\n"]},"metadata":{},"sourceType":"module"}