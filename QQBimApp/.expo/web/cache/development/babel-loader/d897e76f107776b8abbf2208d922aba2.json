{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\ScreemFolder\\\\StoryScreen\\\\UserStoryScreen.js\";\nimport * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { SplashScreen } from \"../OtherScreen\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { Button, Menu, Divider, Provider } from 'react-native-paper';\n\nfunction UserStoryScreen(props) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dataSource = _React$useState2[0],\n      setDataSource = _React$useState2[1];\n\n  React.useEffect(function () {\n    fetch('http://192.168.1.8:19000/book_author/1').then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      console.log('kq:' + res);\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  });\n\n  ListEmpty = function ListEmpty() {\n    return React.createElement(View, {\n      style: style.MainContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('NewStory');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        color: 'black',\n        marginTop: 20,\n        marginBottom: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, \"You don't have any story\")), React.createElement(View, {\n      style: style.newStory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: style.newStoryText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"Create new story\"))));\n  };\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      modalVisible = _React$useState4[0],\n      setModalVisible = _React$useState4[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(SplashScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 20\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: dataSource,\n    keyExtractor: function keyExtractor(item) {\n      return item.story_id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate('DetailStory', {\n            item: item\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: style.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 100,\n          height: 120\n        },\n        source: {\n          uri: item.story_img\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: style.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        style: {\n          fontWeight: 'bold',\n          fontSize: 18,\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      }, item.story_title), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          setModalVisible(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, React.createElement(FontAwesome5, {\n        name: \"ellipsis-v\",\n        color: '#c0c0c0',\n        style: {\n          fontSize: 20,\n          marginLeft: 10,\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 27\n        }\n      })), React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: modalVisible,\n        onRequestClose: function onRequestClose() {\n          setModalVisible(!modalVisible);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: style.centeredView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 27\n        }\n      }, React.createElement(View, {\n        style: style.modalView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          borderRadius: 20,\n          padding: 10,\n          elevation: 2,\n          backgroundColor: \"#2196F3\"\n        },\n        onPress: function onPress() {\n          setModalVisible(!modalVisible);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 31\n        }\n      }, React.createElement(Text, {\n        style: style.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, \"Hide Modal\")))))), React.createElement(Text, {\n        numberOfLines: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, item.story_description, \" \"))));\n    },\n    showsHorizontalScrollIndicator: false,\n    ListEmptyComponent: ListEmpty,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport { UserStoryScreen };\nvar style = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: 'white',\n    width: Dimensions.get('window').width,\n    margin: 5,\n    height: 140\n  },\n  header: {\n    flexDirection: 'row'\n  },\n  MainContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n    margin: 10\n  },\n  newStory: {\n    height: 40,\n    width: 200,\n    backgroundColor: '#aa4fff',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  newStoryText: {\n    marginLeft: 5,\n    fontWeight: 'bold',\n    fontSize: 20,\n    color: 'white'\n  },\n  centeredView: {\n    flex: 1,\n    marginTop: 30,\n    justifyContent: 'flex-start',\n    alignItems: \"center\",\n    flexDirection: 'row-reverse'\n  },\n  modalView: {\n    margin: 10,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 10,\n    width: '50%',\n    height: '30%',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/ScreemFolder/StoryScreen/UserStoryScreen.js"],"names":["React","SplashScreen","FontAwesome5","Button","Menu","Divider","Provider","UserStoryScreen","props","useState","dataSource","setDataSource","useEffect","fetch","then","response","json","res","console","log","catch","error","finally","setLoading","ListEmpty","style","MainContainer","navigation","navigate","fontSize","color","marginTop","marginBottom","newStory","newStoryText","modalVisible","setModalVisible","flex","alignItems","justifyContent","isLoading","item","story_id","toString","container","width","height","uri","story_img","header","fontWeight","story_title","marginLeft","marginRight","centeredView","modalView","borderRadius","padding","elevation","backgroundColor","textStyle","story_description","StyleSheet","create","flexDirection","Dimensions","get","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","textAlign","modalText"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FlatList, View, Text, TouchableOpacity, Image, Dimensions, StyleSheet, Modal} from 'react-native';\nimport {SplashScreen} from '../OtherScreen';\nimport { FontAwesome5 } from '@expo/vector-icons'; \nimport { Button, Menu, Divider, Provider } from 'react-native-paper';\n\nfunction UserStoryScreen(props) {\n  const [dataSource, setDataSource] = React.useState([]);\n  React.useEffect(() => {\n    // fetch('http://10.0.2.2:5000/')\n    fetch('http://192.168.1.8:19000/book_author/1')\n    .then ((response) => response.json())\n    .then ( (res) => { \n      console.log('kq:' + res); \n      setDataSource(res);\n    })\n    .catch ((error) => {\n      console.log(error);\n    })\n    .finally(() => {\n      setLoading(false) \n    });\n  });\n\n  ListEmpty = () => {\n    return (\n      //View to show when list is empty\n      <View style={style.MainContainer}>\n        <TouchableOpacity onPress={()=> navigation.navigate('NewStory')}>\n          <View>\n            <Text style={{fontSize: 20, color: 'black', marginTop: 20, marginBottom: 20}}>You don't have any story</Text>\n          </View>\n          <View style={style.newStory}>\n            <Text style={style.newStoryText}>Create new story</Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  const [modalVisible, setModalVisible] = React.useState(false);\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      {isLoading ? <SplashScreen/> : (\n        <View>   \n          <FlatList\n            data={dataSource}\n            keyExtractor= {item => item.story_id.toString()}\n            renderItem={({ item }) => (\n              <TouchableOpacity onPress={() =>props.navigation.navigate('DetailStory', {item: item})}>         \n                <View style={style.container}>\n                  <View style={{flex: 1}}>\n                    <Image style={{width: 100, height: 120}}\n                      source={{uri: item.story_img}} \n                    />\n                  </View>\n                  <View style={{flex: 2}}>\n                  <View style={style.header}>\n                      <Text  numberOfLines={1} style={{fontWeight: 'bold', fontSize: 18, flex:1}}>{item.story_title}</Text>  \n                        <TouchableOpacity\n                            onPress={() => {\n                            setModalVisible(true);\n                          }}\n                         \n                        >\n                          <FontAwesome5\n                            name=\"ellipsis-v\"\n                            color={'#c0c0c0'}\n                            style={{fontSize: 20, marginLeft: 10, marginRight: 10}}\n                          />\n                        </TouchableOpacity>\n                        <Modal\n                          animationType=\"slide\"\n                          transparent={true}\n                          visible={modalVisible}\n                          onRequestClose={() => {setModalVisible(!modalVisible);}}\n                        >\n                          <View style={style.centeredView}>\n                            <View style={style.modalView}>\n                              <TouchableOpacity\n                                style={{ borderRadius: 20,\n                                padding: 10,\n                                elevation: 2, backgroundColor: \"#2196F3\" }}\n                                onPress={() => {\n                                  setModalVisible(!modalVisible);\n                                }}\n                              >\n                                <Text style={style.textStyle}>Hide Modal</Text>\n                              </TouchableOpacity>\n                            </View>\n                          </View>\n                        </Modal>\n                    </View>\n                    <Text numberOfLines={3}>{item.story_description} </Text>\n                  </View>\n                </View>\n              </TouchableOpacity>\n            )}\n            showsHorizontalScrollIndicator={false}\n            ListEmptyComponent={ListEmpty}\n          />        \n        </View>\n      )}\n    </View>  \n  );\n}\nexport {UserStoryScreen};\n\nvar style = StyleSheet.create({\n  container: {\n    flex:1,\n    flexDirection: 'row', \n    padding: 10,\n    backgroundColor: 'white',\n    width: Dimensions.get('window').width, \n    margin: 5, \n    height: 140\n  },\n  header: {\n    flexDirection: 'row'\n  },\n  MainContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n    margin: 10,\n  },\n  newStory: {\n    height: 40, width: 200, \n    backgroundColor: '#aa4fff', \n    borderRadius: 20, \n    justifyContent: 'center', \n    alignItems: 'center'\n  },\n  newStoryText: {\n    marginLeft: 5, \n    fontWeight: 'bold', \n    fontSize: 20, \n    color: 'white' \n  },\n  centeredView: {\n    flex: 1,\n    marginTop: 30,\n    justifyContent: 'flex-start',\n    alignItems: \"center\",\n    flexDirection: 'row-reverse'\n  },\n  modalView: {\n    margin: 10,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 10,\n    width: '50%',\n    height: '30%',\n    //alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n})"]},"metadata":{},"sourceType":"module"}