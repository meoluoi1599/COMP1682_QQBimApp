{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\ScreemFolder\\\\SearchScreen\\\\SearchScreen.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { accessibilityProps } from 'react-native-paper/lib/typescript/src/components/MaterialCommunityIcon';\nimport { TabView, SceneMap } from 'react-native-tab-view';\nvar initialLayout = {\n  width: Dimensions.get('window').width\n};\n\nfunction SearchScreen(props) {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      user = _React$useState4[0],\n      setUser = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      story = _React$useState6[0],\n      setStory = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      list = _React$useState8[0],\n      setList = _React$useState8[1];\n\n  var _React$useState9 = React.useState([{\n    key: '1',\n    title: 'Story'\n  }, {\n    key: '2',\n    title: 'User'\n  }, {\n    key: '3',\n    title: 'Story List'\n  }]),\n      _React$useState10 = _slicedToArray(_React$useState9, 1),\n      routes = _React$useState10[0];\n\n  var getUser = function getUser() {\n    fetch('http://192.168.1.6:19000/search_user' + props.route.params.search).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setUser(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  };\n\n  var getStory = function getStory() {\n    fetch('http://192.168.1.6:19000/search_story' + props.route.params.search).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setStory(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  };\n\n  var getList = function getList() {\n    fetch('http://192.168.1.6:19000/search_list' + props.route.params.search).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setList(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  };\n\n  React.useEffect(function () {\n    getStory();\n    getUser();\n    getList();\n  });\n\n  var StoryRoute = function StoryRoute() {\n    return React.createElement(View, {\n      style: styles.scene,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var UserRoute = function UserRoute() {\n    return React.createElement(View, {\n      style: styles.scene,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var StoryListRoute = function StoryListRoute() {\n    return React.createElement(View, {\n      style: styles.scene,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var renderScene = SceneMap({\n    1: StoryRoute,\n    2: UserRoute,\n    3: StoryListRoute\n  });\n  return React.createElement(TabView, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    initialLayout: initialLayout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  });\n}\n\nexport { SearchScreen };\nvar styles = StyleSheet.create({\n  scene: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/ScreemFolder/SearchScreen/SearchScreen.js"],"names":["React","accessibilityProps","TabView","SceneMap","initialLayout","width","Dimensions","get","SearchScreen","props","useState","index","setIndex","user","setUser","story","setStory","list","setList","key","title","routes","getUser","fetch","route","params","search","then","response","json","res","catch","error","console","log","finally","setLoading","getStory","getList","useEffect","StoryRoute","styles","scene","UserRoute","StoryListRoute","renderScene","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, StyleSheet, Dimensions } from 'react-native';\r\nimport { accessibilityProps } from 'react-native-paper/lib/typescript/src/components/MaterialCommunityIcon';\r\nimport { TabView, SceneMap } from 'react-native-tab-view';\r\n\r\n\r\n\r\nconst initialLayout = { width: Dimensions.get('window').width };\r\n\r\nfunction SearchScreen(props) {\r\n  const [index, setIndex] = React.useState(0);\r\n  const [user, setUser] = React.useState([]);\r\n  const [story, setStory] = React.useState([]);\r\n  const [list, setList] = React.useState([]);\r\n  const [routes] = React.useState([\r\n    { key: '1', title: 'Story' },\r\n    { key: '2', title: 'User' },\r\n    { key: '3', title: 'Story List' },\r\n  ]);\r\n\r\n  const getUser =() => {\r\n    fetch('http://192.168.1.6:19000/search_user' + props.route.params.search)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      setUser(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => setLoading(false));\r\n  }\r\n\r\n  const getStory =() => {\r\n    fetch('http://192.168.1.6:19000/search_story' + props.route.params.search)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      setStory(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => setLoading(false));\r\n  }\r\n\r\n  const getList =() => {\r\n    fetch('http://192.168.1.6:19000/search_list' + props.route.params.search)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      setList(res)\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => setLoading(false));\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getStory();\r\n    getUser();\r\n    getList();\r\n  });\r\n  const StoryRoute = () => (\r\n    <View style={styles.scene}>\r\n  \r\n    </View>\r\n  );\r\n  \r\n  const UserRoute = () => (\r\n    <View style={styles.scene}>\r\n      \r\n    </View>\r\n  );\r\n  \r\n  const StoryListRoute = () => (\r\n    <View style={styles.scene}>\r\n      \r\n    </View>\r\n  );\r\n  const renderScene = SceneMap({\r\n    1: StoryRoute,\r\n    2: UserRoute,\r\n    3: StoryListRoute\r\n  });\r\n\r\n  return ( \r\n    <TabView\r\n      navigationState={{ index, routes }}\r\n      renderScene={renderScene}\r\n      onIndexChange={setIndex}\r\n      initialLayout={initialLayout}\r\n    />\r\n  );\r\n} export {SearchScreen};\r\n\r\nconst styles = StyleSheet.create({\r\n  scene: {\r\n    flex: 1,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}