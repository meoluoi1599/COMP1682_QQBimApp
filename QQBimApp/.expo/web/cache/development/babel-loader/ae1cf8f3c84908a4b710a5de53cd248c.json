{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\users\\\\ScreemFolder\\\\ListStoryScreen\\\\DetailUserList.js\";\nimport * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { SplashScreen } from \"../OtherScreen\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction DetailUserList(props) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dataSource = _React$useState2[0],\n      setDataSource = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var getStory = function getStory() {\n    fetch('http://192.168.0.101:19000/get_story_list/' + props.route.params.item.list_id).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      console.log('kq:' + res);\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  };\n\n  React.useEffect(function () {\n    getStory();\n  }, []);\n\n  function ListEmpty() {\n    return React.createElement(View, {\n      style: style.MainContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        color: 'black',\n        marginTop: 20,\n        marginBottom: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"There aren't any story in this list\")), React.createElement(TouchableOpacity, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: style.newStory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: style.newStoryText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, \"Please add new story\"))));\n  }\n\n  ;\n\n  function deleteStory(story_id) {\n    Alert.alert(\"Do you want to delete your story?\", \"If you choose OK, your story will delete forever.\", [{\n      text: \"Cancel\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed\");\n      },\n      style: \"cancel\"\n    }, {\n      text: \"OK\",\n      onPress: function onPress() {\n        fetch('http://192.168.0.101:19000/remove_story_list/' + props.route.params.item.list_id + '/' + story_id).then(function (response) {\n          return response.json();\n        }).then(function (res) {\n          console.log('kq:' + res);\n          getStory();\n        }).catch(function (error) {\n          console.log(error);\n        }).finally(function () {\n          setLoading(false);\n        });\n      }\n    }], {\n      cancelable: false\n    });\n  }\n\n  ;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(SplashScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: dataSource,\n    keyExtractor: function keyExtractor(item) {\n      return item.story_id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate('DetailStory', {\n            item: item\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: style.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 100,\n          height: 120\n        },\n        source: {\n          uri: item.story_img\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: style.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        style: {\n          fontWeight: 'bold',\n          fontSize: 18,\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }\n      }, item.story_title), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          deleteStory(item.story_id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }\n      }, React.createElement(FontAwesome, {\n        name: \"remove\",\n        color: '#c0c0c0',\n        style: {\n          fontSize: 20,\n          marginLeft: 10,\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }))), React.createElement(Text, {\n        numberOfLines: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, item.story_description, \" \"))));\n    },\n    showsHorizontalScrollIndicator: false,\n    ListEmptyComponent: ListEmpty,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport { DetailUserList };\nvar style = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: 'white',\n    width: Dimensions.get('window').width,\n    margin: 5,\n    height: 140\n  },\n  header: {\n    flexDirection: 'row'\n  },\n  MainContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n    margin: 10\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/users/ScreemFolder/ListStoryScreen/DetailUserList.js"],"names":["React","SplashScreen","FontAwesome","Ionicons","DetailUserList","props","useState","dataSource","setDataSource","isLoading","setLoading","getStory","fetch","route","params","item","list_id","then","response","json","res","console","log","catch","error","finally","useEffect","ListEmpty","style","MainContainer","fontSize","color","marginTop","marginBottom","newStory","newStoryText","deleteStory","story_id","Alert","alert","text","onPress","cancelable","flex","alignItems","justifyContent","toString","navigation","navigate","container","width","height","uri","story_img","header","fontWeight","story_title","marginLeft","marginRight","story_description","StyleSheet","create","flexDirection","padding","backgroundColor","Dimensions","get","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { FlatList, View, Text, TouchableOpacity, Image, Dimensions, StyleSheet, Alert, AsyncStorage} from 'react-native';\r\nimport {SplashScreen} from '../OtherScreen';\r\nimport { FontAwesome } from '@expo/vector-icons'; \r\nimport { Ionicons } from '@expo/vector-icons'; \r\n\r\nfunction DetailUserList(props) {\r\n  const [dataSource, setDataSource] = React.useState([]);\r\n  const [isLoading, setLoading] = React.useState(true);\r\n\r\n  const getStory =()=> {\r\n    fetch('http://192.168.0.101:19000/get_story_list/' + props.route.params.item.list_id)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      console.log('kq:' + res); \r\n      setDataSource(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      setLoading(false) \r\n    }); \r\n  }\r\n  \r\n  React.useEffect(() => {\r\n    getStory();\r\n  }, []);\r\n\r\n  function ListEmpty() {\r\n    return (\r\n      //View to show when list is empty\r\n      <View style={style.MainContainer}>  \r\n          <View>\r\n            <Text style={{fontSize: 20, color: 'black', marginTop: 20, marginBottom: 20}}>There aren't any story in this list</Text>\r\n          </View>\r\n          <TouchableOpacity>\r\n          <View style={style.newStory}>\r\n            <Text style={style.newStoryText}>Please add new story</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  };\r\n  \r\n  function deleteStory(story_id) {\r\n    Alert.alert(\r\n      \"Do you want to delete your story?\",\r\n      \"If you choose OK, your story will delete forever.\",\r\n      [\r\n        {\r\n          text: \"Cancel\",\r\n          onPress: () => console.log(\"Cancel Pressed\"),\r\n          style: \"cancel\"\r\n        },\r\n        { text: \"OK\", onPress: () => {\r\n          fetch('http://192.168.0.101:19000/remove_story_list/' + props.route.params.item.list_id + '/' + story_id)\r\n          .then ((response) => response.json())\r\n          .then ( (res) => { \r\n            console.log('kq:' + res);\r\n            getStory();\r\n          })\r\n          .catch ((error) => {\r\n            console.log(error);\r\n          })\r\n          .finally(() => {\r\n            setLoading(false);\r\n          });\r\n        } }\r\n      ],\r\n      { cancelable: false }\r\n    ); \r\n  };\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      {isLoading ? <SplashScreen/> : (\r\n        <View>   \r\n          <FlatList\r\n            data={dataSource}\r\n            keyExtractor= {item => item.story_id.toString()}\r\n            renderItem={({ item }) => (\r\n              <TouchableOpacity onPress={() =>props.navigation.navigate('DetailStory', {item: item})}>         \r\n                <View style={style.container}>\r\n                  <View style={{flex: 1}}>\r\n                    <Image style={{width: 100, height: 120}}\r\n                      source={{uri: item.story_img}} \r\n                    />\r\n                  </View>\r\n                  <View style={{flex: 2}}>\r\n                  <View style={style.header}>\r\n                      <Text  numberOfLines={1} style={{fontWeight: 'bold', fontSize: 18, flex:1}}>{item.story_title}</Text> \r\n                      <TouchableOpacity onPress={()=> {deleteStory(item.story_id);}}>\r\n                        <FontAwesome\r\n                            name=\"remove\"\r\n                            color={'#c0c0c0'}\r\n                            style={{fontSize: 20, marginLeft: 10, marginRight: 10}}\r\n                        />\r\n                        </TouchableOpacity> \r\n                    </View>\r\n                    <Text numberOfLines={3}>{item.story_description} </Text>\r\n                  </View>\r\n                </View>\r\n              </TouchableOpacity>\r\n            )}\r\n            showsHorizontalScrollIndicator={false}\r\n            ListEmptyComponent={ListEmpty}\r\n          />     \r\n        </View>\r\n      )}\r\n    </View>  \r\n  );\r\n}\r\nexport {DetailUserList};\r\n\r\nvar style = StyleSheet.create({\r\n  container: {\r\n    flex:1,\r\n    flexDirection: 'row', \r\n    padding: 10,\r\n    backgroundColor: 'white',\r\n    width: Dimensions.get('window').width, \r\n    margin: 5, \r\n    height: 140\r\n  },\r\n  header: {\r\n    flexDirection: 'row'\r\n  },\r\n  MainContainer: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flex: 1,\r\n    margin: 10,\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}