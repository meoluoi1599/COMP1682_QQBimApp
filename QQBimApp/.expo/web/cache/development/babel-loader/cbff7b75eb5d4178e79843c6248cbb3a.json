{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\users\\\\ScreemFolder\\\\ListStoryScreen\\\\DetailListStory.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { SplashScreen } from \"../OtherScreen\";\n\nfunction DetailListStory(props) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dataSource = _React$useState2[0],\n      setDataSource = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  React.useEffect(function () {\n    fetch('http://192.168.0.102:19000/get_story_list/' + props.route.params.item.list_id).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(SplashScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: dataSource,\n    keyExtractor: function keyExtractor(item) {\n      return item.story_id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate('DetailStory', {\n            item: item\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: style.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 100,\n          height: 120\n        },\n        source: {\n          uri: item.story_img\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        style: {\n          fontWeight: 'bold',\n          fontSize: 18\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 23\n        }\n      }, item.story_title), React.createElement(Text, {\n        numberOfLines: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 23\n        }\n      }, item.story_description, \" \"))));\n    },\n    ListEmptyComponent: ListEmpty,\n    showsHorizontalScrollIndicator: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })));\n\n  function ListEmpty() {\n    return React.createElement(View, {\n      style: {\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"There aren't any story in this list\"));\n  }\n}\n\nexport { DetailListStory };\nvar style = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: 'white',\n    width: Dimensions.get('window').width,\n    marginTop: 10,\n    height: 140,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  text: {\n    margin: 10,\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/users/ScreemFolder/ListStoryScreen/DetailListStory.js"],"names":["React","SplashScreen","DetailListStory","props","useState","dataSource","setDataSource","isLoading","setLoading","useEffect","fetch","route","params","item","list_id","then","response","json","res","catch","error","console","log","finally","story_id","toString","navigation","navigate","style","container","flex","width","height","uri","story_img","fontWeight","fontSize","story_title","story_description","ListEmpty","justifyContent","textAlign","StyleSheet","create","flexDirection","padding","backgroundColor","Dimensions","get","marginTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","text","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { \r\n  View, \r\n  Text,\r\n  FlatList, \r\n  StyleSheet, \r\n  Image, \r\n  TouchableOpacity,\r\n  Dimensions\r\n} from 'react-native';\r\nimport {SplashScreen} from '../OtherScreen';\r\n\r\nfunction DetailListStory(props) {\r\n  const [dataSource, setDataSource ]= React.useState([]);\r\n  const [isLoading, setLoading] = React.useState(true);\r\n  \r\n  React.useEffect(() => {\r\n    // fetch('http://10.0.2.2:5000/')\r\n    fetch('http://192.168.0.102:19000/get_story_list/' + props.route.params.item.list_id)\r\n    .then ((response) => response.json())\r\n    .then ( (res) => { \r\n      setDataSource(res);\r\n    })\r\n    .catch ((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      setLoading(false) \r\n    });\r\n  },[]);\r\n\r\n  return (  \r\n    <View>\r\n      {isLoading? <SplashScreen/>:(\r\n        <View>\r\n          <FlatList\r\n            data={dataSource}\r\n            keyExtractor= {item => item.story_id.toString()}\r\n            renderItem={({ item }) => (\r\n              <TouchableOpacity onPress={() => props.navigation.navigate('DetailStory', {item: item})}>         \r\n                  <View style={style.container}>\r\n                    <View style={{flex: 1}}>\r\n                      <Image style={{width: 100, height: 120}}\r\n                        source= {{uri: item.story_img}}\r\n                      />\r\n                    </View>\r\n                    <View style={{flex: 2}}>\r\n                      <Text  numberOfLines={1} style={{fontWeight: 'bold', fontSize: 18}}>{item.story_title}</Text>\r\n                      <Text numberOfLines={3}>{item.story_description} </Text>\r\n                    </View>\r\n                  </View>\r\n              </TouchableOpacity>\r\n            )}\r\n            ListEmptyComponent={ListEmpty}\r\n            showsHorizontalScrollIndicator={false}\r\n          />\r\n        </View>\r\n      )}\r\n    </View>\r\n  )\r\n  function ListEmpty() {\r\n    return(\r\n      <View style={{justifyContent: 'center'}}> \r\n        <Text style={{fontSize: 18, fontWeight: 'bold', textAlign: 'center'}}>There aren't any story in this list</Text>\r\n      </View>\r\n    )\r\n  }\r\n}\r\nexport {DetailListStory}\r\n\r\nvar style = StyleSheet.create({\r\n  container: {\r\n    flex:1,\r\n    flexDirection: 'row', \r\n    padding: 10,\r\n    backgroundColor: 'white',\r\n    width: Dimensions.get('window').width, \r\n    marginTop: 10,\r\n    height: 140,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  text: {\r\n    margin: 10,\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}