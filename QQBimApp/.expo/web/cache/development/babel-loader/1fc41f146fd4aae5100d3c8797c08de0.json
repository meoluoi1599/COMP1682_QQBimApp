{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\users\\\\ScreemFolder\\\\StoryScreen\\\\NewPart.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Dropdown } from 'react-native-material-dropdown-v2';\n\nfunction NewPart(props) {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      title = _React$useState2[0],\n      setTitle = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      chapterContent = _React$useState4[0],\n      setChapterContent = _React$useState4[1];\n\n  var _React$useState5 = React.useState('On Writing'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      storyStatus = _React$useState6[0],\n      setStoryStatus = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      newPart = _React$useState8[0],\n      setNewPart = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      dataUser = _React$useState10[0],\n      setDataUser = _React$useState10[1];\n\n  var data = [{\n    value: 'On Writing'\n  }, {\n    value: 'Drop'\n  }, {\n    value: 'Full'\n  }];\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              AsyncStorage.getItem('user').then(function (value) {\n                var jsonValue = JSON.parse(value);\n                setDataUser(jsonValue);\n              });\n            } catch (e) {\n              console.log(e);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  React.useEffect(function () {\n    getData();\n    fetch('http://192.168.0.101:19000/get_story/' + props.route.params.item.story_id).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      var newPart = res[0].parts + 1;\n      setNewPart(newPart);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  }, []);\n\n  var addNewNotification = function addNewNotification() {\n    fetch('http://192.168.0.101:19000/newNotification', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'user_id': dataUser.user_id,\n        'content': 'Add new chapter of ' + props.route.params.item.story_title\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      console.log('susses');\n      console.log('sáº¥' + storyStatus);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var upload_chapter = function upload_chapter() {\n    if (title.length == 0 || chapterContent.length == 0) {\n      alert('Title and content must have content');\n    } else {\n      fetch('http://192.168.0.101:19000/upload_chapter', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'story_id': props.route.params.item.story_id,\n          'chapter_name': title,\n          'chapter_content': chapterContent,\n          'story_status': storyStatus,\n          'parts': newPart\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (res) {\n        alert('Succesfull!!');\n        addNewNotification();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Chapter title:\"), React.createElement(TextInput, {\n    style: {\n      height: 40,\n      backgroundColor: 'white'\n    },\n    placeholder: \"Enter your chapter's title\",\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginTop: 10,\n      fontSize: 16,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Content of chapter:\"), React.createElement(View, {\n    scrollEnabled: true,\n    style: {\n      marginTop: 10,\n      backgroundColor: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    multiline: true,\n    placeholder: \"Chapter's content of your story\",\n    textAlignVertical: 'top',\n    numberOfLines: 20,\n    scrollEnabled: true,\n    onChangeText: function onChangeText(text) {\n      return setChapterContent(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  })), React.createElement(Dropdown, {\n    label: \"Please slect status of story\",\n    data: data,\n    onChangeText: function onChangeText(value) {\n      setStoryStatus(value);\n    },\n    value: data[0].value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.upload,\n    onPress: function onPress() {\n      upload_chapter();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 92\n    }\n  }, \"Upload your chapter\"))));\n}\n\nexport { NewPart };\nvar styles = StyleSheet.create({\n  main: {\n    paddingLeft: 30,\n    paddingRight: 30,\n    paddingBottom: 1,\n    alignItems: 'stretch'\n  },\n  upload: {\n    marginTop: 20,\n    paddingTop: 15,\n    paddingBottom: 15,\n    backgroundColor: '#aa4fff',\n    borderRadius: 50,\n    borderWidth: 1,\n    borderColor: '#fff'\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/users/ScreemFolder/StoryScreen/NewPart.js"],"names":["React","ScrollView","Dropdown","NewPart","props","useState","title","setTitle","chapterContent","setChapterContent","storyStatus","setStoryStatus","newPart","setNewPart","dataUser","setDataUser","data","value","getData","AsyncStorage","getItem","then","jsonValue","JSON","parse","e","console","log","useEffect","fetch","route","params","item","story_id","response","json","res","parts","catch","error","finally","setLoading","addNewNotification","method","headers","Accept","body","stringify","user_id","story_title","upload_chapter","length","alert","styles","main","fontSize","fontWeight","height","backgroundColor","text","marginTop","upload","textAlign","color","StyleSheet","create","paddingLeft","paddingRight","paddingBottom","alignItems","paddingTop","borderRadius","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Text, TextInput, TouchableOpacity, AsyncStorage} from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { Dropdown } from 'react-native-material-dropdown-v2';\r\n \r\nfunction NewPart(props) {\r\n    const [title, setTitle] = React.useState('');\r\n    const [chapterContent, setChapterContent] = React.useState('');\r\n    const [storyStatus, setStoryStatus] = React.useState('On Writing');\r\n    const [newPart, setNewPart] = React.useState([]);\r\n    const [dataUser, setDataUser ]= React.useState([]);\r\n\r\n    let data = [{\r\n        value: 'On Writing',\r\n        }, {\r\n        value: 'Drop',\r\n      }, {\r\n        value: 'Full',\r\n    }];\r\n    const getData = async () => {\r\n        try {\r\n          AsyncStorage.getItem('user').then((value) => {\r\n            const jsonValue = JSON.parse(value);\r\n            setDataUser(jsonValue);\r\n          })\r\n        } catch(e) {\r\n          console.log(e)\r\n        }\r\n      }\r\n    React.useEffect(() => {\r\n        getData()\r\n        // fetch('http://10.0.2.2:5000/')\r\n        fetch('http://192.168.0.101:19000/get_story/' + props.route.params.item.story_id)\r\n        .then ((response) => response.json())\r\n        .then ( (res) => { \r\n            const newPart = res[0].parts + 1;\r\n            setNewPart(newPart);\r\n        })\r\n        .catch ((error) => {\r\n          console.log(error);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false) \r\n        });\r\n    }, []);\r\n\r\n    const addNewNotification = () => {\r\n        fetch('http://192.168.0.101:19000/newNotification', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                'user_id': dataUser.user_id,\r\n                'content': 'Add new chapter of '+ props.route.params.item.story_title,\r\n            })\r\n        })\r\n        .then ((response) => response.json())\r\n        .then ( (res) => { \r\n            console.log('susses');\r\n            console.log('sáº¥'+storyStatus)\r\n        })\r\n        .catch ((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const upload_chapter = () => {\r\n        \r\n        if(title.length == 0 || chapterContent.length == 0){\r\n            alert('Title and content must have content');\r\n        } else {\r\n           \r\n            fetch('http://192.168.0.101:19000/upload_chapter', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    'story_id': props.route.params.item.story_id,\r\n                    'chapter_name': title,\r\n                    'chapter_content': chapterContent,\r\n                    'story_status': storyStatus,\r\n                    'parts': newPart\r\n                })\r\n            })\r\n            .then ((response) => response.json())\r\n            .then ( (res) => { \r\n                alert('Succesfull!!');\r\n                \r\n                addNewNotification();\r\n            })\r\n            .catch ((error) => {\r\n                console.log(error);\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={styles.main}>\r\n                <Text style={{  fontSize: 16, fontWeight: 'bold'}}>Chapter title:</Text>\r\n                <TextInput\r\n                    style={{ height: 40, backgroundColor: 'white' }}\r\n                    placeholder=\"Enter your chapter's title\"\r\n                    onChangeText={text => setTitle(text)}\r\n                />\r\n                <Text style={{ marginTop: 10, fontSize: 16, fontWeight: 'bold'}}>Content of chapter:</Text>  \r\n                <View scrollEnabled  style={{ marginTop: 10, backgroundColor: 'white'}} >\r\n                    <TextInput \r\n                        multiline \r\n                        placeholder=\"Chapter's content of your story\" \r\n                        textAlignVertical={'top'}\r\n                        numberOfLines={20} \r\n                        scrollEnabled={true} \r\n                        onChangeText={text => setChapterContent(text)} \r\n                    />\r\n                </View>\r\n                <Dropdown\r\n                    label='Please slect status of story'\r\n                    data = {data}\r\n                    onChangeText={(value)=>{setStoryStatus(value)}}   \r\n                    value = {data[0].value}\r\n                />\r\n                <TouchableOpacity style={styles.upload} onPress={()=> {upload_chapter();}}><Text style={{textAlign: 'center', color: 'white'}}>Upload your chapter</Text></TouchableOpacity>\r\n            </View>\r\n        </ScrollView>\r\n    )\r\n} export {NewPart};\r\n \r\nvar styles = StyleSheet.create({\r\n    main: {\r\n        paddingLeft: 30,\r\n        paddingRight: 30,\r\n        paddingBottom: 1,\r\n        alignItems: 'stretch',\r\n    },\r\n    upload:{\r\n        marginTop: 20,\r\n        paddingTop: 15,\r\n        paddingBottom: 15,\r\n        backgroundColor:'#aa4fff',\r\n        borderRadius: 50,\r\n        borderWidth: 1,\r\n        borderColor: '#fff'\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}