{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\QQBimApp\\\\QQBimApp\\\\src\\\\users\\\\ScreemFolder\\\\StoryScreen\\\\UserStoryScreen.js\";\nimport * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { SplashScreen } from \"../OtherScreen\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction UserStoryScreen(props) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dataSource = _React$useState2[0],\n      setDataSource = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      modalVisible = _React$useState6[0],\n      setModalVisible = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      story = _React$useState8[0],\n      setStory = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      userData = _React$useState10[0],\n      setUserData = _React$useState10[1];\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              AsyncStorage.getItem('user').then(function (value) {\n                var jsonValue = JSON.parse(value);\n                getUserStory(jsonValue);\n                setUserData(jsonValue);\n              });\n            } catch (e) {\n              console.log(e);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getUserStory = function getUserStory(jsonValue) {\n    fetch('http://192.168.0.101:19000/book_author/' + jsonValue.user_id).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      setDataSource(res);\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  };\n\n  React.useEffect(function () {\n    getData();\n  }, []);\n\n  function ListEmpty() {\n    return React.createElement(View, {\n      style: style.MainContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        color: 'black',\n        marginTop: 20,\n        marginBottom: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"You don't have any story\")), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.navigation.navigate('NewStory');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: style.newStory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: style.newStoryText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Create new story\"))));\n  }\n\n  ;\n\n  function deleteStory() {\n    Alert.alert(\"Do you want to delete your story?\", \"If you choose OK, your story will delete forever.\", [{\n      text: \"Cancel\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed\");\n      },\n      style: \"cancel\"\n    }, {\n      text: \"OK\",\n      onPress: function onPress() {\n        fetch('http://192.168.0.101:19000/delete_story/' + story.story_id).then(function (response) {\n          return response.json();\n        }).then(function (res) {\n          getUserStory(userData);\n        }).catch(function (error) {\n          console.log(error);\n        }).finally(function () {\n          setLoading(false);\n          setModalVisible(false);\n        });\n      }\n    }], {\n      cancelable: false\n    });\n  }\n\n  ;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(SplashScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 20\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: dataSource,\n    keyExtractor: function keyExtractor(item) {\n      return item.story_id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate('DetailStory', {\n            item: item\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: style.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 100,\n          height: 120\n        },\n        source: {\n          uri: item.story_img\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: style.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        style: {\n          fontWeight: 'bold',\n          fontSize: 18,\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 23\n        }\n      }, item.story_title), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          setModalVisible(true);\n          setStory(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }, React.createElement(FontAwesome5, {\n        name: \"ellipsis-v\",\n        color: '#c0c0c0',\n        style: {\n          fontSize: 20,\n          marginLeft: 10,\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 27\n        }\n      }))), React.createElement(Text, {\n        numberOfLines: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, item.story_description, \" \"))));\n    },\n    showsHorizontalScrollIndicator: false,\n    ListEmptyComponent: ListEmpty,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: style.centeredView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: style.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: style.modalbutton,\n    onPress: function onPress() {\n      props.navigation.navigate('NewPart', {\n        item: story\n      });\n      setModalVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, \"Create new chapter\")), React.createElement(TouchableOpacity, {\n    style: style.modalbutton,\n    style: style.modalbutton,\n    onPress: function onPress() {\n      props.navigation.navigate('ListChapter', {\n        item: story\n      });\n      setModalVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, \"List story's chapter\")), React.createElement(TouchableOpacity, {\n    style: style.modalbutton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, \"Edit story\")), React.createElement(TouchableOpacity, {\n    style: style.modalbutton,\n    onPress: function onPress() {\n      deleteStory();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, \"Delete story\")), React.createElement(TouchableOpacity, {\n    style: {\n      marginTop: 10,\n      alignItems: 'center'\n    },\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, React.createElement(Ionicons, {\n    name: \"ios-close-circle-outline\",\n    size: 50,\n    color: \"#aa4fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  })))))));\n}\n\nexport { UserStoryScreen };\nvar style = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: 'white',\n    width: Dimensions.get('window').width,\n    margin: 5,\n    height: 140\n  },\n  header: {\n    flexDirection: 'row'\n  },\n  MainContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n    margin: 10\n  },\n  newStory: {\n    height: 40,\n    width: 200,\n    backgroundColor: '#aa4fff',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  newStoryText: {\n    marginLeft: 5,\n    fontWeight: 'bold',\n    fontSize: 20,\n    color: 'white'\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    width: Dimensions.get('window').width * 0.9,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  modalbutton: {\n    padding: 10,\n    borderBottomWidth: 1\n  }\n});","map":{"version":3,"sources":["D:/QQBimApp/QQBimApp/src/users/ScreemFolder/StoryScreen/UserStoryScreen.js"],"names":["React","SplashScreen","FontAwesome5","Ionicons","UserStoryScreen","props","useState","dataSource","setDataSource","isLoading","setLoading","modalVisible","setModalVisible","story","setStory","userData","setUserData","getData","AsyncStorage","getItem","then","value","jsonValue","JSON","parse","getUserStory","e","console","log","fetch","user_id","response","json","res","catch","error","finally","useEffect","ListEmpty","style","MainContainer","fontSize","color","marginTop","marginBottom","navigation","navigate","newStory","newStoryText","deleteStory","Alert","alert","text","onPress","story_id","cancelable","flex","alignItems","justifyContent","item","toString","container","width","height","uri","story_img","header","fontWeight","story_title","marginLeft","marginRight","story_description","centeredView","modalView","modalbutton","StyleSheet","create","flexDirection","padding","backgroundColor","Dimensions","get","margin","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","openButton","modalText","textAlign","borderBottomWidth"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FlatList, View, Text, TouchableOpacity, Image, Dimensions, StyleSheet, Modal, Alert, AsyncStorage} from 'react-native';\nimport {SplashScreen} from '../OtherScreen';\nimport { FontAwesome5 } from '@expo/vector-icons'; \nimport { Ionicons } from '@expo/vector-icons'; \n\nfunction UserStoryScreen(props) {\n  const [dataSource, setDataSource] = React.useState([]);\n  const [isLoading, setLoading] = React.useState(true);\n  const [modalVisible, setModalVisible] = React.useState(false);\n  const [story, setStory] = React.useState([]);\n  const [userData, setUserData] = React.useState([]);\n  const getData = async () => {\n    try {\n      AsyncStorage.getItem('user').then((value) => {\n        const jsonValue = JSON.parse(value);\n        getUserStory(jsonValue);\n        setUserData(jsonValue);\n      })\n    } catch(e) {\n      console.log(e)\n    }\n  }\n  const getUserStory =(jsonValue)=> {\n    fetch('http://192.168.0.101:19000/book_author/' + jsonValue.user_id)\n    .then ((response) => response.json())\n    .then ( (res) => { \n      setDataSource(res);\n    })\n    .catch ((error) => {\n      console.log(error);\n    })\n    .finally(() => {\n      setLoading(false) \n    });\n  }\n  React.useEffect(() => {\n    getData();\n  }, []);\n  \n  function ListEmpty() {\n    return (\n      //View to show when list is empty\n      <View style={style.MainContainer}>  \n          <View>\n            <Text style={{fontSize: 20, color: 'black', marginTop: 20, marginBottom: 20}}>You don't have any story</Text>\n          </View>\n          <TouchableOpacity onPress={()=> props.navigation.navigate('NewStory')}>\n          <View style={style.newStory}>\n            <Text style={style.newStoryText}>Create new story</Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  \n  function deleteStory() {\n    Alert.alert(\n      \"Do you want to delete your story?\",\n      \"If you choose OK, your story will delete forever.\",\n      [\n        {\n          text: \"Cancel\",\n          onPress: () => console.log(\"Cancel Pressed\"),\n          style: \"cancel\"\n        },\n        { text: \"OK\", onPress: () => {\n          fetch('http://192.168.0.101:19000/delete_story/' + story.story_id)\n          .then ((response) => response.json())\n          .then ( (res) => { \n            getUserStory(userData);\n          })\n          .catch ((error) => {\n            console.log(error);\n          })\n          .finally(() => {\n            setLoading(false);\n            setModalVisible(false);\n            \n          });\n        } }\n      ],\n      { cancelable: false }\n    ); \n  };\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      {isLoading ? <SplashScreen/> : (\n        <View>   \n          <FlatList\n            data={dataSource}\n            keyExtractor= {item => item.story_id.toString()}\n            renderItem={({ item }) => (\n              <TouchableOpacity onPress={() =>props.navigation.navigate('DetailStory', {item: item})}>         \n                <View style={style.container}>\n                  <View style={{flex: 1}}>\n                    <Image style={{width: 100, height: 120}}\n                      source={{uri: item.story_img}} \n                    />\n                  </View>\n                  <View style={{flex: 2}}>\n                  <View style={style.header}>\n                      <Text  numberOfLines={1} style={{fontWeight: 'bold', fontSize: 18, flex:1}}>{item.story_title}</Text>  \n                        <TouchableOpacity\n                            onPress={() => {\n                            setModalVisible(true);\n                            setStory(item);\n                          }}\n                         \n                        >\n                          <FontAwesome5\n                            name=\"ellipsis-v\"\n                            color={'#c0c0c0'}\n                            style={{fontSize: 20, marginLeft: 10, marginRight: 10}}\n                          />\n                        </TouchableOpacity>\n                    </View>\n                    <Text numberOfLines={3}>{item.story_description} </Text>\n                  </View>\n                </View>\n              </TouchableOpacity>\n            )}\n            showsHorizontalScrollIndicator={false}\n            ListEmptyComponent={ListEmpty}\n          />    \n          <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={modalVisible}\n            onRequestClose={() => {setModalVisible(!modalVisible);}}\n          >\n            <View style={style.centeredView}>\n              <View style={style.modalView}>\n                <TouchableOpacity style={style.modalbutton} onPress={() => {props.navigation.navigate('NewPart', {item: story}); setModalVisible(false)}}>\n                  <Text>Create new chapter</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={style.modalbutton} style={style.modalbutton} onPress={() => {props.navigation.navigate('ListChapter', {item: story}); setModalVisible(false)}}>\n                  <Text>List story's chapter</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={style.modalbutton}>\n                  <Text>Edit story</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={style.modalbutton} onPress={()=> {deleteStory();}}>\n                  <Text>Delete story</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{marginTop: 10, alignItems: 'center'}}\n                  onPress={() => {\n                    setModalVisible(!modalVisible);\n                  }}\n                >\n                  <Ionicons name=\"ios-close-circle-outline\" size={50} color=\"#aa4fff\" />\n                </TouchableOpacity>\n              </View>\n            </View>\n          </Modal>    \n        </View>\n      )}\n    </View>  \n  );\n}\nexport {UserStoryScreen};\n\nvar style = StyleSheet.create({\n  container: {\n    flex:1,\n    flexDirection: 'row', \n    padding: 10,\n    backgroundColor: 'white',\n    width: Dimensions.get('window').width, \n    margin: 5, \n    height: 140\n  },\n  header: {\n    flexDirection: 'row'\n  },\n  MainContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n    margin: 10,\n  },\n  newStory: {\n    height: 40, width: 200, \n    backgroundColor: '#aa4fff', \n    borderRadius: 20, \n    justifyContent: 'center', \n    alignItems: 'center'\n  },\n  newStoryText: {\n    marginLeft: 5, \n    fontWeight: 'bold', \n    fontSize: 20, \n    color: 'white' \n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    width: Dimensions.get('window').width *0.9,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 10,\n\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  modalbutton: {\n    padding: 10,\n    borderBottomWidth: 1,\n  }\n})"]},"metadata":{},"sourceType":"module"}